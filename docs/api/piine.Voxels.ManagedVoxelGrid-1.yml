### YamlMime:ManagedReference
items:
- uid: piine.Voxels.ManagedVoxelGrid`1
  commentId: T:piine.Voxels.ManagedVoxelGrid`1
  id: ManagedVoxelGrid`1
  parent: piine.Voxels
  children:
  - piine.Voxels.ManagedVoxelGrid`1.#ctor(System.Int32,System.Int32,System.Int32)
  - piine.Voxels.ManagedVoxelGrid`1.Depth
  - piine.Voxels.ManagedVoxelGrid`1.GetVoxel(System.Int32)
  - piine.Voxels.ManagedVoxelGrid`1.Height
  - piine.Voxels.ManagedVoxelGrid`1.SetVoxel(System.Int32,`0)
  - piine.Voxels.ManagedVoxelGrid`1.Width
  langs:
  - csharp
  - vb
  name: ManagedVoxelGrid<T>
  nameWithType: ManagedVoxelGrid<T>
  fullName: piine.Voxels.ManagedVoxelGrid<T>
  type: Class
  source:
    remote:
      path: src/Voxels/ManagedVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: ManagedVoxelGrid
    path: src/Voxels/ManagedVoxelGrid.cs
    startLine: 10
  assemblies:
  - piine
  namespace: piine.Voxels
  summary: "\nA VoxelGrid where voxel data is stored in a managed array.\n"
  example: []
  syntax:
    content: 'public class ManagedVoxelGrid<T> : VoxelGrid<T>, IVoxelVolume<T>'
    typeParameters:
    - id: T
      description: Type of voxels
    content.vb: >-
      Public Class ManagedVoxelGrid(Of T)

          Inherits VoxelGrid(Of T)

          Implements IVoxelVolume(Of T)
  inheritance:
  - System.Object
  - piine.Voxels.VoxelGrid{{T}}
  implements:
  - piine.Voxels.IVoxelVolume{{T}}
  inheritedMembers:
  - piine.Voxels.VoxelGrid{{T}}.Volume
  - piine.Voxels.VoxelGrid{{T}}.Dimensions
  - piine.Voxels.VoxelGrid{{T}}.Item(System.Int32)
  - piine.Voxels.VoxelGrid{{T}}.Item(piine.Int3)
  - piine.Voxels.VoxelGrid{{T}}.SetVoxel(piine.Int3,{T})
  - piine.Voxels.VoxelGrid{{T}}.GetVoxel(piine.Int3)
  - piine.Voxels.VoxelGrid{{T}}.CalculateIndex(piine.Int3)
  - piine.Voxels.VoxelGrid{{T}}.CalculatePosition(System.Int32)
  - piine.Voxels.VoxelGrid{{T}}.CalculateIndex(piine.Int3,piine.Int3)
  - piine.Voxels.VoxelGrid{{T}}.CalculatePosition(piine.Int3,System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ManagedVoxelGrid(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T)
  name.vb: ManagedVoxelGrid(Of T)
- uid: piine.Voxels.ManagedVoxelGrid`1.Width
  commentId: P:piine.Voxels.ManagedVoxelGrid`1.Width
  id: Width
  parent: piine.Voxels.ManagedVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: ManagedVoxelGrid<T>.Width
  fullName: piine.Voxels.ManagedVoxelGrid<T>.Width
  type: Property
  source:
    remote:
      path: src/Voxels/ManagedVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Width
    path: src/Voxels/ManagedVoxelGrid.cs
    startLine: 14
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public override int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property Width As Integer
  overridden: piine.Voxels.VoxelGrid{{T}}.Width
  overload: piine.Voxels.ManagedVoxelGrid`1.Width*
  nameWithType.vb: ManagedVoxelGrid(Of T).Width
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).Width
- uid: piine.Voxels.ManagedVoxelGrid`1.Height
  commentId: P:piine.Voxels.ManagedVoxelGrid`1.Height
  id: Height
  parent: piine.Voxels.ManagedVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: ManagedVoxelGrid<T>.Height
  fullName: piine.Voxels.ManagedVoxelGrid<T>.Height
  type: Property
  source:
    remote:
      path: src/Voxels/ManagedVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Height
    path: src/Voxels/ManagedVoxelGrid.cs
    startLine: 15
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public override int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property Height As Integer
  overridden: piine.Voxels.VoxelGrid{{T}}.Height
  overload: piine.Voxels.ManagedVoxelGrid`1.Height*
  nameWithType.vb: ManagedVoxelGrid(Of T).Height
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).Height
- uid: piine.Voxels.ManagedVoxelGrid`1.Depth
  commentId: P:piine.Voxels.ManagedVoxelGrid`1.Depth
  id: Depth
  parent: piine.Voxels.ManagedVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: ManagedVoxelGrid<T>.Depth
  fullName: piine.Voxels.ManagedVoxelGrid<T>.Depth
  type: Property
  source:
    remote:
      path: src/Voxels/ManagedVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Depth
    path: src/Voxels/ManagedVoxelGrid.cs
    startLine: 16
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public override int Depth { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property Depth As Integer
  overridden: piine.Voxels.VoxelGrid{{T}}.Depth
  overload: piine.Voxels.ManagedVoxelGrid`1.Depth*
  nameWithType.vb: ManagedVoxelGrid(Of T).Depth
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).Depth
- uid: piine.Voxels.ManagedVoxelGrid`1.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:piine.Voxels.ManagedVoxelGrid`1.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: piine.Voxels.ManagedVoxelGrid`1
  langs:
  - csharp
  - vb
  name: ManagedVoxelGrid(Int32, Int32, Int32)
  nameWithType: ManagedVoxelGrid<T>.ManagedVoxelGrid(Int32, Int32, Int32)
  fullName: piine.Voxels.ManagedVoxelGrid<T>.ManagedVoxelGrid(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Voxels/ManagedVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Voxels/ManagedVoxelGrid.cs
    startLine: 18
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public ManagedVoxelGrid(int width, int height, int depth)
    parameters:
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    - id: depth
      type: System.Int32
    content.vb: Public Sub New(width As Integer, height As Integer, depth As Integer)
  overload: piine.Voxels.ManagedVoxelGrid`1.#ctor*
  nameWithType.vb: ManagedVoxelGrid(Of T).ManagedVoxelGrid(Int32, Int32, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).ManagedVoxelGrid(System.Int32, System.Int32, System.Int32)
- uid: piine.Voxels.ManagedVoxelGrid`1.SetVoxel(System.Int32,`0)
  commentId: M:piine.Voxels.ManagedVoxelGrid`1.SetVoxel(System.Int32,`0)
  id: SetVoxel(System.Int32,`0)
  parent: piine.Voxels.ManagedVoxelGrid`1
  langs:
  - csharp
  - vb
  name: SetVoxel(Int32, T)
  nameWithType: ManagedVoxelGrid<T>.SetVoxel(Int32, T)
  fullName: piine.Voxels.ManagedVoxelGrid<T>.SetVoxel(System.Int32, T)
  type: Method
  source:
    remote:
      path: src/Voxels/ManagedVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: SetVoxel
    path: src/Voxels/ManagedVoxelGrid.cs
    startLine: 27
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public override void SetVoxel(int index, T data)
    parameters:
    - id: index
      type: System.Int32
    - id: data
      type: '{T}'
    content.vb: Public Overrides Sub SetVoxel(index As Integer, data As T)
  overridden: piine.Voxels.VoxelGrid{{T}}.SetVoxel(System.Int32,{T})
  overload: piine.Voxels.ManagedVoxelGrid`1.SetVoxel*
  nameWithType.vb: ManagedVoxelGrid(Of T).SetVoxel(Int32, T)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).SetVoxel(System.Int32, T)
- uid: piine.Voxels.ManagedVoxelGrid`1.GetVoxel(System.Int32)
  commentId: M:piine.Voxels.ManagedVoxelGrid`1.GetVoxel(System.Int32)
  id: GetVoxel(System.Int32)
  parent: piine.Voxels.ManagedVoxelGrid`1
  langs:
  - csharp
  - vb
  name: GetVoxel(Int32)
  nameWithType: ManagedVoxelGrid<T>.GetVoxel(Int32)
  fullName: piine.Voxels.ManagedVoxelGrid<T>.GetVoxel(System.Int32)
  type: Method
  source:
    remote:
      path: src/Voxels/ManagedVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: GetVoxel
    path: src/Voxels/ManagedVoxelGrid.cs
    startLine: 29
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public override T GetVoxel(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
    content.vb: Public Overrides Function GetVoxel(index As Integer) As T
  overridden: piine.Voxels.VoxelGrid{{T}}.GetVoxel(System.Int32)
  overload: piine.Voxels.ManagedVoxelGrid`1.GetVoxel*
  nameWithType.vb: ManagedVoxelGrid(Of T).GetVoxel(Int32)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).GetVoxel(System.Int32)
references:
- uid: piine.Voxels
  commentId: N:piine.Voxels
  name: piine.Voxels
  nameWithType: piine.Voxels
  fullName: piine.Voxels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: piine.Voxels.VoxelGrid{{T}}
  commentId: T:piine.Voxels.VoxelGrid{`0}
  parent: piine.Voxels
  definition: piine.Voxels.VoxelGrid`1
  name: VoxelGrid<T>
  nameWithType: VoxelGrid<T>
  fullName: piine.Voxels.VoxelGrid<T>
  nameWithType.vb: VoxelGrid(Of T)
  fullName.vb: piine.Voxels.VoxelGrid(Of T)
  name.vb: VoxelGrid(Of T)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1
    name: VoxelGrid
    nameWithType: VoxelGrid
    fullName: piine.Voxels.VoxelGrid
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1
    name: VoxelGrid
    nameWithType: VoxelGrid
    fullName: piine.Voxels.VoxelGrid
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.IVoxelVolume{{T}}
  commentId: T:piine.Voxels.IVoxelVolume{`0}
  parent: piine.Voxels
  definition: piine.Voxels.IVoxelVolume`1
  name: IVoxelVolume<T>
  nameWithType: IVoxelVolume<T>
  fullName: piine.Voxels.IVoxelVolume<T>
  nameWithType.vb: IVoxelVolume(Of T)
  fullName.vb: piine.Voxels.IVoxelVolume(Of T)
  name.vb: IVoxelVolume(Of T)
  spec.csharp:
  - uid: piine.Voxels.IVoxelVolume`1
    name: IVoxelVolume
    nameWithType: IVoxelVolume
    fullName: piine.Voxels.IVoxelVolume
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: piine.Voxels.IVoxelVolume`1
    name: IVoxelVolume
    nameWithType: IVoxelVolume
    fullName: piine.Voxels.IVoxelVolume
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid{{T}}.Volume
  commentId: P:piine.Voxels.VoxelGrid{`0}.Volume
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.Volume
  name: Volume
  nameWithType: VoxelGrid<T>.Volume
  fullName: piine.Voxels.VoxelGrid<T>.Volume
  nameWithType.vb: VoxelGrid(Of T).Volume
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Volume
- uid: piine.Voxels.VoxelGrid{{T}}.Dimensions
  commentId: P:piine.Voxels.VoxelGrid{`0}.Dimensions
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.Dimensions
  name: Dimensions
  nameWithType: VoxelGrid<T>.Dimensions
  fullName: piine.Voxels.VoxelGrid<T>.Dimensions
  nameWithType.vb: VoxelGrid(Of T).Dimensions
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Dimensions
- uid: piine.Voxels.VoxelGrid{{T}}.Item(System.Int32)
  commentId: P:piine.Voxels.VoxelGrid{`0}.Item(System.Int32)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: VoxelGrid<T>.Item[Int32]
  fullName: piine.Voxels.VoxelGrid<T>.Item[System.Int32]
  nameWithType.vb: VoxelGrid(Of T).Item(Int32)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.Item(System.Int32)
    name: Item
    nameWithType: VoxelGrid<T>.Item
    fullName: piine.Voxels.VoxelGrid<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.Item(System.Int32)
    name: Item
    nameWithType: VoxelGrid(Of T).Item
    fullName: piine.Voxels.VoxelGrid(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid{{T}}.Item(piine.Int3)
  commentId: P:piine.Voxels.VoxelGrid{`0}.Item(piine.Int3)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.Item(piine.Int3)
  name: Item[Int3]
  nameWithType: VoxelGrid<T>.Item[Int3]
  fullName: piine.Voxels.VoxelGrid<T>.Item[piine.Int3]
  nameWithType.vb: VoxelGrid(Of T).Item(Int3)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Item(piine.Int3)
  name.vb: Item(Int3)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.Item(piine.Int3)
    name: Item
    nameWithType: VoxelGrid<T>.Item
    fullName: piine.Voxels.VoxelGrid<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.Item(piine.Int3)
    name: Item
    nameWithType: VoxelGrid(Of T).Item
    fullName: piine.Voxels.VoxelGrid(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid{{T}}.SetVoxel(piine.Int3,{T})
  commentId: M:piine.Voxels.VoxelGrid{`0}.SetVoxel(piine.Int3,`0)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.SetVoxel(piine.Int3,`0)
  name: SetVoxel(Int3, T)
  nameWithType: VoxelGrid<T>.SetVoxel(Int3, T)
  fullName: piine.Voxels.VoxelGrid<T>.SetVoxel(piine.Int3, T)
  nameWithType.vb: VoxelGrid(Of T).SetVoxel(Int3, T)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).SetVoxel(piine.Int3, T)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.SetVoxel(piine.Int3,`0)
    name: SetVoxel
    nameWithType: VoxelGrid<T>.SetVoxel
    fullName: piine.Voxels.VoxelGrid<T>.SetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.SetVoxel(piine.Int3,`0)
    name: SetVoxel
    nameWithType: VoxelGrid(Of T).SetVoxel
    fullName: piine.Voxels.VoxelGrid(Of T).SetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid{{T}}.GetVoxel(piine.Int3)
  commentId: M:piine.Voxels.VoxelGrid{`0}.GetVoxel(piine.Int3)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.GetVoxel(piine.Int3)
  name: GetVoxel(Int3)
  nameWithType: VoxelGrid<T>.GetVoxel(Int3)
  fullName: piine.Voxels.VoxelGrid<T>.GetVoxel(piine.Int3)
  nameWithType.vb: VoxelGrid(Of T).GetVoxel(Int3)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).GetVoxel(piine.Int3)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.GetVoxel(piine.Int3)
    name: GetVoxel
    nameWithType: VoxelGrid<T>.GetVoxel
    fullName: piine.Voxels.VoxelGrid<T>.GetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.GetVoxel(piine.Int3)
    name: GetVoxel
    nameWithType: VoxelGrid(Of T).GetVoxel
    fullName: piine.Voxels.VoxelGrid(Of T).GetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid{{T}}.CalculateIndex(piine.Int3)
  commentId: M:piine.Voxels.VoxelGrid{`0}.CalculateIndex(piine.Int3)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3)
  name: CalculateIndex(Int3)
  nameWithType: VoxelGrid<T>.CalculateIndex(Int3)
  fullName: piine.Voxels.VoxelGrid<T>.CalculateIndex(piine.Int3)
  nameWithType.vb: VoxelGrid(Of T).CalculateIndex(Int3)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).CalculateIndex(piine.Int3)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3)
    name: CalculateIndex
    nameWithType: VoxelGrid<T>.CalculateIndex
    fullName: piine.Voxels.VoxelGrid<T>.CalculateIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3)
    name: CalculateIndex
    nameWithType: VoxelGrid(Of T).CalculateIndex
    fullName: piine.Voxels.VoxelGrid(Of T).CalculateIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid{{T}}.CalculatePosition(System.Int32)
  commentId: M:piine.Voxels.VoxelGrid{`0}.CalculatePosition(System.Int32)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.CalculatePosition(System.Int32)
  name: CalculatePosition(Int32)
  nameWithType: VoxelGrid<T>.CalculatePosition(Int32)
  fullName: piine.Voxels.VoxelGrid<T>.CalculatePosition(System.Int32)
  nameWithType.vb: VoxelGrid(Of T).CalculatePosition(Int32)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).CalculatePosition(System.Int32)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.CalculatePosition(System.Int32)
    name: CalculatePosition
    nameWithType: VoxelGrid<T>.CalculatePosition
    fullName: piine.Voxels.VoxelGrid<T>.CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.CalculatePosition(System.Int32)
    name: CalculatePosition
    nameWithType: VoxelGrid(Of T).CalculatePosition
    fullName: piine.Voxels.VoxelGrid(Of T).CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid{{T}}.CalculateIndex(piine.Int3,piine.Int3)
  commentId: M:piine.Voxels.VoxelGrid{`0}.CalculateIndex(piine.Int3,piine.Int3)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3,piine.Int3)
  name: CalculateIndex(Int3, Int3)
  nameWithType: VoxelGrid<T>.CalculateIndex(Int3, Int3)
  fullName: piine.Voxels.VoxelGrid<T>.CalculateIndex(piine.Int3, piine.Int3)
  nameWithType.vb: VoxelGrid(Of T).CalculateIndex(Int3, Int3)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).CalculateIndex(piine.Int3, piine.Int3)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3,piine.Int3)
    name: CalculateIndex
    nameWithType: VoxelGrid<T>.CalculateIndex
    fullName: piine.Voxels.VoxelGrid<T>.CalculateIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3,piine.Int3)
    name: CalculateIndex
    nameWithType: VoxelGrid(Of T).CalculateIndex
    fullName: piine.Voxels.VoxelGrid(Of T).CalculateIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid{{T}}.CalculatePosition(piine.Int3,System.Int32)
  commentId: M:piine.Voxels.VoxelGrid{`0}.CalculatePosition(piine.Int3,System.Int32)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.CalculatePosition(piine.Int3,System.Int32)
  name: CalculatePosition(Int3, Int32)
  nameWithType: VoxelGrid<T>.CalculatePosition(Int3, Int32)
  fullName: piine.Voxels.VoxelGrid<T>.CalculatePosition(piine.Int3, System.Int32)
  nameWithType.vb: VoxelGrid(Of T).CalculatePosition(Int3, Int32)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).CalculatePosition(piine.Int3, System.Int32)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.CalculatePosition(piine.Int3,System.Int32)
    name: CalculatePosition
    nameWithType: VoxelGrid<T>.CalculatePosition
    fullName: piine.Voxels.VoxelGrid<T>.CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.CalculatePosition(piine.Int3,System.Int32)
    name: CalculatePosition
    nameWithType: VoxelGrid(Of T).CalculatePosition
    fullName: piine.Voxels.VoxelGrid(Of T).CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: piine.Voxels.VoxelGrid`1
  commentId: T:piine.Voxels.VoxelGrid`1
  name: VoxelGrid<T>
  nameWithType: VoxelGrid<T>
  fullName: piine.Voxels.VoxelGrid<T>
  nameWithType.vb: VoxelGrid(Of T)
  fullName.vb: piine.Voxels.VoxelGrid(Of T)
  name.vb: VoxelGrid(Of T)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1
    name: VoxelGrid
    nameWithType: VoxelGrid
    fullName: piine.Voxels.VoxelGrid
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1
    name: VoxelGrid
    nameWithType: VoxelGrid
    fullName: piine.Voxels.VoxelGrid
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.IVoxelVolume`1
  commentId: T:piine.Voxels.IVoxelVolume`1
  name: IVoxelVolume<T>
  nameWithType: IVoxelVolume<T>
  fullName: piine.Voxels.IVoxelVolume<T>
  nameWithType.vb: IVoxelVolume(Of T)
  fullName.vb: piine.Voxels.IVoxelVolume(Of T)
  name.vb: IVoxelVolume(Of T)
  spec.csharp:
  - uid: piine.Voxels.IVoxelVolume`1
    name: IVoxelVolume
    nameWithType: IVoxelVolume
    fullName: piine.Voxels.IVoxelVolume
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: piine.Voxels.IVoxelVolume`1
    name: IVoxelVolume
    nameWithType: IVoxelVolume
    fullName: piine.Voxels.IVoxelVolume
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid`1.Volume
  commentId: P:piine.Voxels.VoxelGrid`1.Volume
  name: Volume
  nameWithType: VoxelGrid<T>.Volume
  fullName: piine.Voxels.VoxelGrid<T>.Volume
  nameWithType.vb: VoxelGrid(Of T).Volume
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Volume
- uid: piine.Voxels.VoxelGrid`1.Dimensions
  commentId: P:piine.Voxels.VoxelGrid`1.Dimensions
  name: Dimensions
  nameWithType: VoxelGrid<T>.Dimensions
  fullName: piine.Voxels.VoxelGrid<T>.Dimensions
  nameWithType.vb: VoxelGrid(Of T).Dimensions
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Dimensions
- uid: piine.Voxels.VoxelGrid`1.Item(System.Int32)
  commentId: P:piine.Voxels.VoxelGrid`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: VoxelGrid<T>.Item[Int32]
  fullName: piine.Voxels.VoxelGrid<T>.Item[System.Int32]
  nameWithType.vb: VoxelGrid(Of T).Item(Int32)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.Item(System.Int32)
    name: Item
    nameWithType: VoxelGrid<T>.Item
    fullName: piine.Voxels.VoxelGrid<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.Item(System.Int32)
    name: Item
    nameWithType: VoxelGrid(Of T).Item
    fullName: piine.Voxels.VoxelGrid(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid`1.Item(piine.Int3)
  commentId: P:piine.Voxels.VoxelGrid`1.Item(piine.Int3)
  name: Item[Int3]
  nameWithType: VoxelGrid<T>.Item[Int3]
  fullName: piine.Voxels.VoxelGrid<T>.Item[piine.Int3]
  nameWithType.vb: VoxelGrid(Of T).Item(Int3)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Item(piine.Int3)
  name.vb: Item(Int3)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.Item(piine.Int3)
    name: Item
    nameWithType: VoxelGrid<T>.Item
    fullName: piine.Voxels.VoxelGrid<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.Item(piine.Int3)
    name: Item
    nameWithType: VoxelGrid(Of T).Item
    fullName: piine.Voxels.VoxelGrid(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid`1.SetVoxel(piine.Int3,`0)
  commentId: M:piine.Voxels.VoxelGrid`1.SetVoxel(piine.Int3,`0)
  name: SetVoxel(Int3, T)
  nameWithType: VoxelGrid<T>.SetVoxel(Int3, T)
  fullName: piine.Voxels.VoxelGrid<T>.SetVoxel(piine.Int3, T)
  nameWithType.vb: VoxelGrid(Of T).SetVoxel(Int3, T)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).SetVoxel(piine.Int3, T)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.SetVoxel(piine.Int3,`0)
    name: SetVoxel
    nameWithType: VoxelGrid<T>.SetVoxel
    fullName: piine.Voxels.VoxelGrid<T>.SetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.SetVoxel(piine.Int3,`0)
    name: SetVoxel
    nameWithType: VoxelGrid(Of T).SetVoxel
    fullName: piine.Voxels.VoxelGrid(Of T).SetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid`1.GetVoxel(piine.Int3)
  commentId: M:piine.Voxels.VoxelGrid`1.GetVoxel(piine.Int3)
  name: GetVoxel(Int3)
  nameWithType: VoxelGrid<T>.GetVoxel(Int3)
  fullName: piine.Voxels.VoxelGrid<T>.GetVoxel(piine.Int3)
  nameWithType.vb: VoxelGrid(Of T).GetVoxel(Int3)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).GetVoxel(piine.Int3)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.GetVoxel(piine.Int3)
    name: GetVoxel
    nameWithType: VoxelGrid<T>.GetVoxel
    fullName: piine.Voxels.VoxelGrid<T>.GetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.GetVoxel(piine.Int3)
    name: GetVoxel
    nameWithType: VoxelGrid(Of T).GetVoxel
    fullName: piine.Voxels.VoxelGrid(Of T).GetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3)
  commentId: M:piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3)
  name: CalculateIndex(Int3)
  nameWithType: VoxelGrid<T>.CalculateIndex(Int3)
  fullName: piine.Voxels.VoxelGrid<T>.CalculateIndex(piine.Int3)
  nameWithType.vb: VoxelGrid(Of T).CalculateIndex(Int3)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).CalculateIndex(piine.Int3)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3)
    name: CalculateIndex
    nameWithType: VoxelGrid<T>.CalculateIndex
    fullName: piine.Voxels.VoxelGrid<T>.CalculateIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3)
    name: CalculateIndex
    nameWithType: VoxelGrid(Of T).CalculateIndex
    fullName: piine.Voxels.VoxelGrid(Of T).CalculateIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid`1.CalculatePosition(System.Int32)
  commentId: M:piine.Voxels.VoxelGrid`1.CalculatePosition(System.Int32)
  isExternal: true
  name: CalculatePosition(Int32)
  nameWithType: VoxelGrid<T>.CalculatePosition(Int32)
  fullName: piine.Voxels.VoxelGrid<T>.CalculatePosition(System.Int32)
  nameWithType.vb: VoxelGrid(Of T).CalculatePosition(Int32)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).CalculatePosition(System.Int32)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.CalculatePosition(System.Int32)
    name: CalculatePosition
    nameWithType: VoxelGrid<T>.CalculatePosition
    fullName: piine.Voxels.VoxelGrid<T>.CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.CalculatePosition(System.Int32)
    name: CalculatePosition
    nameWithType: VoxelGrid(Of T).CalculatePosition
    fullName: piine.Voxels.VoxelGrid(Of T).CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3,piine.Int3)
  commentId: M:piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3,piine.Int3)
  name: CalculateIndex(Int3, Int3)
  nameWithType: VoxelGrid<T>.CalculateIndex(Int3, Int3)
  fullName: piine.Voxels.VoxelGrid<T>.CalculateIndex(piine.Int3, piine.Int3)
  nameWithType.vb: VoxelGrid(Of T).CalculateIndex(Int3, Int3)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).CalculateIndex(piine.Int3, piine.Int3)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3,piine.Int3)
    name: CalculateIndex
    nameWithType: VoxelGrid<T>.CalculateIndex
    fullName: piine.Voxels.VoxelGrid<T>.CalculateIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.CalculateIndex(piine.Int3,piine.Int3)
    name: CalculateIndex
    nameWithType: VoxelGrid(Of T).CalculateIndex
    fullName: piine.Voxels.VoxelGrid(Of T).CalculateIndex
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid`1.CalculatePosition(piine.Int3,System.Int32)
  commentId: M:piine.Voxels.VoxelGrid`1.CalculatePosition(piine.Int3,System.Int32)
  isExternal: true
  name: CalculatePosition(Int3, Int32)
  nameWithType: VoxelGrid<T>.CalculatePosition(Int3, Int32)
  fullName: piine.Voxels.VoxelGrid<T>.CalculatePosition(piine.Int3, System.Int32)
  nameWithType.vb: VoxelGrid(Of T).CalculatePosition(Int3, Int32)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).CalculatePosition(piine.Int3, System.Int32)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.CalculatePosition(piine.Int3,System.Int32)
    name: CalculatePosition
    nameWithType: VoxelGrid<T>.CalculatePosition
    fullName: piine.Voxels.VoxelGrid<T>.CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.CalculatePosition(piine.Int3,System.Int32)
    name: CalculatePosition
    nameWithType: VoxelGrid(Of T).CalculatePosition
    fullName: piine.Voxels.VoxelGrid(Of T).CalculatePosition
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Int3
    name: Int3
    nameWithType: Int3
    fullName: piine.Int3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.VoxelGrid{{T}}.Width
  commentId: P:piine.Voxels.VoxelGrid{`0}.Width
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.Width
  name: Width
  nameWithType: VoxelGrid<T>.Width
  fullName: piine.Voxels.VoxelGrid<T>.Width
  nameWithType.vb: VoxelGrid(Of T).Width
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Width
- uid: piine.Voxels.ManagedVoxelGrid`1.Width*
  commentId: Overload:piine.Voxels.ManagedVoxelGrid`1.Width
  name: Width
  nameWithType: ManagedVoxelGrid<T>.Width
  fullName: piine.Voxels.ManagedVoxelGrid<T>.Width
  nameWithType.vb: ManagedVoxelGrid(Of T).Width
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).Width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: piine.Voxels.VoxelGrid`1.Width
  commentId: P:piine.Voxels.VoxelGrid`1.Width
  name: Width
  nameWithType: VoxelGrid<T>.Width
  fullName: piine.Voxels.VoxelGrid<T>.Width
  nameWithType.vb: VoxelGrid(Of T).Width
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Width
- uid: piine.Voxels.VoxelGrid{{T}}.Height
  commentId: P:piine.Voxels.VoxelGrid{`0}.Height
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.Height
  name: Height
  nameWithType: VoxelGrid<T>.Height
  fullName: piine.Voxels.VoxelGrid<T>.Height
  nameWithType.vb: VoxelGrid(Of T).Height
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Height
- uid: piine.Voxels.ManagedVoxelGrid`1.Height*
  commentId: Overload:piine.Voxels.ManagedVoxelGrid`1.Height
  name: Height
  nameWithType: ManagedVoxelGrid<T>.Height
  fullName: piine.Voxels.ManagedVoxelGrid<T>.Height
  nameWithType.vb: ManagedVoxelGrid(Of T).Height
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).Height
- uid: piine.Voxels.VoxelGrid`1.Height
  commentId: P:piine.Voxels.VoxelGrid`1.Height
  name: Height
  nameWithType: VoxelGrid<T>.Height
  fullName: piine.Voxels.VoxelGrid<T>.Height
  nameWithType.vb: VoxelGrid(Of T).Height
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Height
- uid: piine.Voxels.VoxelGrid{{T}}.Depth
  commentId: P:piine.Voxels.VoxelGrid{`0}.Depth
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.Depth
  name: Depth
  nameWithType: VoxelGrid<T>.Depth
  fullName: piine.Voxels.VoxelGrid<T>.Depth
  nameWithType.vb: VoxelGrid(Of T).Depth
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Depth
- uid: piine.Voxels.ManagedVoxelGrid`1.Depth*
  commentId: Overload:piine.Voxels.ManagedVoxelGrid`1.Depth
  name: Depth
  nameWithType: ManagedVoxelGrid<T>.Depth
  fullName: piine.Voxels.ManagedVoxelGrid<T>.Depth
  nameWithType.vb: ManagedVoxelGrid(Of T).Depth
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).Depth
- uid: piine.Voxels.VoxelGrid`1.Depth
  commentId: P:piine.Voxels.VoxelGrid`1.Depth
  name: Depth
  nameWithType: VoxelGrid<T>.Depth
  fullName: piine.Voxels.VoxelGrid<T>.Depth
  nameWithType.vb: VoxelGrid(Of T).Depth
  fullName.vb: piine.Voxels.VoxelGrid(Of T).Depth
- uid: piine.Voxels.ManagedVoxelGrid`1.#ctor*
  commentId: Overload:piine.Voxels.ManagedVoxelGrid`1.#ctor
  name: ManagedVoxelGrid
  nameWithType: ManagedVoxelGrid<T>.ManagedVoxelGrid
  fullName: piine.Voxels.ManagedVoxelGrid<T>.ManagedVoxelGrid
  nameWithType.vb: ManagedVoxelGrid(Of T).ManagedVoxelGrid
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).ManagedVoxelGrid
- uid: piine.Voxels.VoxelGrid{{T}}.SetVoxel(System.Int32,{T})
  commentId: M:piine.Voxels.VoxelGrid{`0}.SetVoxel(System.Int32,`0)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.SetVoxel(System.Int32,`0)
  name: SetVoxel(Int32, T)
  nameWithType: VoxelGrid<T>.SetVoxel(Int32, T)
  fullName: piine.Voxels.VoxelGrid<T>.SetVoxel(System.Int32, T)
  nameWithType.vb: VoxelGrid(Of T).SetVoxel(Int32, T)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).SetVoxel(System.Int32, T)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.SetVoxel(System.Int32,`0)
    name: SetVoxel
    nameWithType: VoxelGrid<T>.SetVoxel
    fullName: piine.Voxels.VoxelGrid<T>.SetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.SetVoxel(System.Int32,`0)
    name: SetVoxel
    nameWithType: VoxelGrid(Of T).SetVoxel
    fullName: piine.Voxels.VoxelGrid(Of T).SetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.ManagedVoxelGrid`1.SetVoxel*
  commentId: Overload:piine.Voxels.ManagedVoxelGrid`1.SetVoxel
  name: SetVoxel
  nameWithType: ManagedVoxelGrid<T>.SetVoxel
  fullName: piine.Voxels.ManagedVoxelGrid<T>.SetVoxel
  nameWithType.vb: ManagedVoxelGrid(Of T).SetVoxel
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).SetVoxel
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: piine.Voxels.VoxelGrid`1.SetVoxel(System.Int32,`0)
  commentId: M:piine.Voxels.VoxelGrid`1.SetVoxel(System.Int32,`0)
  isExternal: true
  name: SetVoxel(Int32, T)
  nameWithType: VoxelGrid<T>.SetVoxel(Int32, T)
  fullName: piine.Voxels.VoxelGrid<T>.SetVoxel(System.Int32, T)
  nameWithType.vb: VoxelGrid(Of T).SetVoxel(Int32, T)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).SetVoxel(System.Int32, T)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.SetVoxel(System.Int32,`0)
    name: SetVoxel
    nameWithType: VoxelGrid<T>.SetVoxel
    fullName: piine.Voxels.VoxelGrid<T>.SetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.SetVoxel(System.Int32,`0)
    name: SetVoxel
    nameWithType: VoxelGrid(Of T).SetVoxel
    fullName: piine.Voxels.VoxelGrid(Of T).SetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: piine.Voxels.VoxelGrid{{T}}.GetVoxel(System.Int32)
  commentId: M:piine.Voxels.VoxelGrid{`0}.GetVoxel(System.Int32)
  parent: piine.Voxels.VoxelGrid{{T}}
  definition: piine.Voxels.VoxelGrid`1.GetVoxel(System.Int32)
  name: GetVoxel(Int32)
  nameWithType: VoxelGrid<T>.GetVoxel(Int32)
  fullName: piine.Voxels.VoxelGrid<T>.GetVoxel(System.Int32)
  nameWithType.vb: VoxelGrid(Of T).GetVoxel(Int32)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).GetVoxel(System.Int32)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.GetVoxel(System.Int32)
    name: GetVoxel
    nameWithType: VoxelGrid<T>.GetVoxel
    fullName: piine.Voxels.VoxelGrid<T>.GetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.GetVoxel(System.Int32)
    name: GetVoxel
    nameWithType: VoxelGrid(Of T).GetVoxel
    fullName: piine.Voxels.VoxelGrid(Of T).GetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.ManagedVoxelGrid`1.GetVoxel*
  commentId: Overload:piine.Voxels.ManagedVoxelGrid`1.GetVoxel
  name: GetVoxel
  nameWithType: ManagedVoxelGrid<T>.GetVoxel
  fullName: piine.Voxels.ManagedVoxelGrid<T>.GetVoxel
  nameWithType.vb: ManagedVoxelGrid(Of T).GetVoxel
  fullName.vb: piine.Voxels.ManagedVoxelGrid(Of T).GetVoxel
- uid: piine.Voxels.VoxelGrid`1.GetVoxel(System.Int32)
  commentId: M:piine.Voxels.VoxelGrid`1.GetVoxel(System.Int32)
  isExternal: true
  name: GetVoxel(Int32)
  nameWithType: VoxelGrid<T>.GetVoxel(Int32)
  fullName: piine.Voxels.VoxelGrid<T>.GetVoxel(System.Int32)
  nameWithType.vb: VoxelGrid(Of T).GetVoxel(Int32)
  fullName.vb: piine.Voxels.VoxelGrid(Of T).GetVoxel(System.Int32)
  spec.csharp:
  - uid: piine.Voxels.VoxelGrid`1.GetVoxel(System.Int32)
    name: GetVoxel
    nameWithType: VoxelGrid<T>.GetVoxel
    fullName: piine.Voxels.VoxelGrid<T>.GetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: piine.Voxels.VoxelGrid`1.GetVoxel(System.Int32)
    name: GetVoxel
    nameWithType: VoxelGrid(Of T).GetVoxel
    fullName: piine.Voxels.VoxelGrid(Of T).GetVoxel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
