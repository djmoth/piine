### YamlMime:ManagedReference
items:
- uid: piine.SByte4
  commentId: T:piine.SByte4
  id: SByte4
  parent: piine
  children:
  - piine.SByte4.#ctor(piine.SByte2,piine.SByte2)
  - piine.SByte4.#ctor(System.SByte)
  - piine.SByte4.#ctor(System.SByte,System.SByte,System.SByte,System.SByte)
  - piine.SByte4.Absolute(piine.SByte4)
  - piine.SByte4.Contains(System.SByte)
  - piine.SByte4.Deconstruct(System.SByte@,System.SByte@,System.SByte@,System.SByte@)
  - piine.SByte4.Distance(piine.SByte4,piine.SByte4)
  - piine.SByte4.Dot(piine.SByte4,piine.SByte4)
  - piine.SByte4.Equals(piine.SByte4)
  - piine.SByte4.Equals(System.Object)
  - piine.SByte4.GetHashCode
  - piine.SByte4.GetUnsafe(System.Int32)
  - piine.SByte4.Item(System.Int32)
  - piine.SByte4.Length
  - piine.SByte4.LengthSquared
  - piine.SByte4.Normalize(piine.SByte4)
  - piine.SByte4.One
  - piine.SByte4.op_Addition(piine.SByte4,piine.SByte4)
  - piine.SByte4.op_Division(piine.SByte4,System.Single)
  - piine.SByte4.op_Equality(piine.SByte4,piine.SByte4)
  - piine.SByte4.op_Explicit(piine.Byte4)~piine.SByte4
  - piine.SByte4.op_Explicit(piine.Double4)~piine.SByte4
  - piine.SByte4.op_Explicit(piine.Float4)~piine.SByte4
  - piine.SByte4.op_Explicit(piine.Int4)~piine.SByte4
  - piine.SByte4.op_Explicit(piine.Long4)~piine.SByte4
  - piine.SByte4.op_Explicit(piine.Short4)~piine.SByte4
  - piine.SByte4.op_Explicit(piine.UInt4)~piine.SByte4
  - piine.SByte4.op_Explicit(piine.ULong4)~piine.SByte4
  - piine.SByte4.op_Explicit(piine.UShort4)~piine.SByte4
  - piine.SByte4.op_Explicit(System.Numerics.Vector4)~piine.SByte4
  - piine.SByte4.op_GreaterThan(piine.SByte4,piine.SByte4)
  - piine.SByte4.op_GreaterThanOrEqual(piine.SByte4,piine.SByte4)
  - piine.SByte4.op_Implicit(piine.SByte4)~System.Numerics.Vector4
  - piine.SByte4.op_Implicit(piine.SByte4)~System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte}
  - piine.SByte4.op_Implicit(System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte})~piine.SByte4
  - piine.SByte4.op_Inequality(piine.SByte4,piine.SByte4)
  - piine.SByte4.op_LessThan(piine.SByte4,piine.SByte4)
  - piine.SByte4.op_LessThanOrEqual(piine.SByte4,piine.SByte4)
  - piine.SByte4.op_Multiply(piine.SByte4,System.Single)
  - piine.SByte4.op_Subtraction(piine.SByte4,piine.SByte4)
  - piine.SByte4.op_UnaryNegation(piine.SByte4)
  - piine.SByte4.Reverse(piine.SByte4)
  - piine.SByte4.SetUnsafe(System.Int32,System.SByte)
  - piine.SByte4.Size
  - piine.SByte4.Sum
  - piine.SByte4.ToString
  - piine.SByte4.UnitW
  - piine.SByte4.UnitX
  - piine.SByte4.UnitY
  - piine.SByte4.UnitZ
  - piine.SByte4.Volume
  - piine.SByte4.w
  - piine.SByte4.x
  - piine.SByte4.XY
  - piine.SByte4.XYZ
  - piine.SByte4.XZ
  - piine.SByte4.XZY
  - piine.SByte4.y
  - piine.SByte4.YXZ
  - piine.SByte4.YZ
  - piine.SByte4.YZX
  - piine.SByte4.z
  - piine.SByte4.Zero
  - piine.SByte4.ZXY
  - piine.SByte4.ZYX
  langs:
  - csharp
  - vb
  name: SByte4
  nameWithType: SByte4
  fullName: piine.SByte4
  type: Struct
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: SByte4
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1036
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: >-
      [CLSCompliant(true)]

      public struct SByte4 : IEquatable<SByte4>
    content.vb: >-
      <CLSCompliant(True)>

      Public Structure SByte4
          Implements IEquatable(Of SByte4)
  implements:
  - System.IEquatable{piine.SByte4}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: piine.SByte4.Size
  commentId: F:piine.SByte4.Size
  id: Size
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: SByte4.Size
  fullName: piine.SByte4.Size
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Size
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1040
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public const int Size = 4
    return:
      type: System.Int32
    content.vb: Public Const Size As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: piine.SByte4.Zero
  commentId: P:piine.SByte4.Zero
  id: Zero
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: SByte4.Zero
  fullName: piine.SByte4.Zero
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Zero
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1049
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 Zero { get; }
    parameters: []
    return:
      type: piine.SByte4
    content.vb: Public Shared ReadOnly Property Zero As SByte4
  overload: piine.SByte4.Zero*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.SByte4.One
  commentId: P:piine.SByte4.One
  id: One
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: One
  nameWithType: SByte4.One
  fullName: piine.SByte4.One
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: One
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1050
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 One { get; }
    parameters: []
    return:
      type: piine.SByte4
    content.vb: Public Shared ReadOnly Property One As SByte4
  overload: piine.SByte4.One*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.SByte4.UnitX
  commentId: P:piine.SByte4.UnitX
  id: UnitX
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: SByte4.UnitX
  fullName: piine.SByte4.UnitX
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitX
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1051
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 UnitX { get; }
    parameters: []
    return:
      type: piine.SByte4
    content.vb: Public Shared ReadOnly Property UnitX As SByte4
  overload: piine.SByte4.UnitX*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.SByte4.UnitY
  commentId: P:piine.SByte4.UnitY
  id: UnitY
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: SByte4.UnitY
  fullName: piine.SByte4.UnitY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitY
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1052
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 UnitY { get; }
    parameters: []
    return:
      type: piine.SByte4
    content.vb: Public Shared ReadOnly Property UnitY As SByte4
  overload: piine.SByte4.UnitY*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.SByte4.UnitZ
  commentId: P:piine.SByte4.UnitZ
  id: UnitZ
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: SByte4.UnitZ
  fullName: piine.SByte4.UnitZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1053
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 UnitZ { get; }
    parameters: []
    return:
      type: piine.SByte4
    content.vb: Public Shared ReadOnly Property UnitZ As SByte4
  overload: piine.SByte4.UnitZ*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.SByte4.UnitW
  commentId: P:piine.SByte4.UnitW
  id: UnitW
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: UnitW
  nameWithType: SByte4.UnitW
  fullName: piine.SByte4.UnitW
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitW
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1054
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 UnitW { get; }
    parameters: []
    return:
      type: piine.SByte4
    content.vb: Public Shared ReadOnly Property UnitW As SByte4
  overload: piine.SByte4.UnitW*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.SByte4.x
  commentId: F:piine.SByte4.x
  id: x
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: x
  nameWithType: SByte4.x
  fullName: piine.SByte4.x
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: x
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1061
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public sbyte x
    return:
      type: System.SByte
    content.vb: Public x As SByte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.y
  commentId: F:piine.SByte4.y
  id: y
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: y
  nameWithType: SByte4.y
  fullName: piine.SByte4.y
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: y
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1063
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public sbyte y
    return:
      type: System.SByte
    content.vb: Public y As SByte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.z
  commentId: F:piine.SByte4.z
  id: z
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: z
  nameWithType: SByte4.z
  fullName: piine.SByte4.z
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: z
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1065
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public sbyte z
    return:
      type: System.SByte
    content.vb: Public z As SByte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.w
  commentId: F:piine.SByte4.w
  id: w
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: w
  nameWithType: SByte4.w
  fullName: piine.SByte4.w
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: w
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1067
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public sbyte w
    return:
      type: System.SByte
    content.vb: Public w As SByte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.XY
  commentId: P:piine.SByte4.XY
  id: XY
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: XY
  nameWithType: SByte4.XY
  fullName: piine.SByte4.XY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XY
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1070
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte2 XY { get; }
    parameters: []
    return:
      type: piine.SByte2
    content.vb: Public ReadOnly Property XY As SByte2
  overload: piine.SByte4.XY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.SByte4.XZ
  commentId: P:piine.SByte4.XZ
  id: XZ
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: XZ
  nameWithType: SByte4.XZ
  fullName: piine.SByte4.XZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1071
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte2 XZ { get; }
    parameters: []
    return:
      type: piine.SByte2
    content.vb: Public ReadOnly Property XZ As SByte2
  overload: piine.SByte4.XZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.SByte4.YZ
  commentId: P:piine.SByte4.YZ
  id: YZ
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: YZ
  nameWithType: SByte4.YZ
  fullName: piine.SByte4.YZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: YZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1072
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte2 YZ { get; }
    parameters: []
    return:
      type: piine.SByte2
    content.vb: Public ReadOnly Property YZ As SByte2
  overload: piine.SByte4.YZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.SByte4.XYZ
  commentId: P:piine.SByte4.XYZ
  id: XYZ
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: XYZ
  nameWithType: SByte4.XYZ
  fullName: piine.SByte4.XYZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XYZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1074
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte3 XYZ { get; }
    parameters: []
    return:
      type: piine.SByte3
    content.vb: Public ReadOnly Property XYZ As SByte3
  overload: piine.SByte4.XYZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.SByte4.XZY
  commentId: P:piine.SByte4.XZY
  id: XZY
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: XZY
  nameWithType: SByte4.XZY
  fullName: piine.SByte4.XZY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XZY
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1075
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte3 XZY { get; }
    parameters: []
    return:
      type: piine.SByte3
    content.vb: Public ReadOnly Property XZY As SByte3
  overload: piine.SByte4.XZY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.SByte4.YXZ
  commentId: P:piine.SByte4.YXZ
  id: YXZ
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: YXZ
  nameWithType: SByte4.YXZ
  fullName: piine.SByte4.YXZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: YXZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1076
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte3 YXZ { get; }
    parameters: []
    return:
      type: piine.SByte3
    content.vb: Public ReadOnly Property YXZ As SByte3
  overload: piine.SByte4.YXZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.SByte4.YZX
  commentId: P:piine.SByte4.YZX
  id: YZX
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: YZX
  nameWithType: SByte4.YZX
  fullName: piine.SByte4.YZX
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: YZX
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1077
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte3 YZX { get; }
    parameters: []
    return:
      type: piine.SByte3
    content.vb: Public ReadOnly Property YZX As SByte3
  overload: piine.SByte4.YZX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.SByte4.ZXY
  commentId: P:piine.SByte4.ZXY
  id: ZXY
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: ZXY
  nameWithType: SByte4.ZXY
  fullName: piine.SByte4.ZXY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: ZXY
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1078
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte3 ZXY { get; }
    parameters: []
    return:
      type: piine.SByte3
    content.vb: Public ReadOnly Property ZXY As SByte3
  overload: piine.SByte4.ZXY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.SByte4.ZYX
  commentId: P:piine.SByte4.ZYX
  id: ZYX
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: ZYX
  nameWithType: SByte4.ZYX
  fullName: piine.SByte4.ZYX
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: ZYX
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1079
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte3 ZYX { get; }
    parameters: []
    return:
      type: piine.SByte3
    content.vb: Public ReadOnly Property ZYX As SByte3
  overload: piine.SByte4.ZYX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.SByte4.Item(System.Int32)
  commentId: P:piine.SByte4.Item(System.Int32)
  id: Item(System.Int32)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: SByte4.Item[Int32]
  fullName: piine.SByte4.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: this[]
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1081
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public sbyte this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.SByte
    content.vb: Public Property Item(index As Integer) As SByte
  overload: piine.SByte4.Item*
  nameWithType.vb: SByte4.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: piine.SByte4.Item(System.Int32)
  name.vb: Item(Int32)
- uid: piine.SByte4.#ctor(System.SByte,System.SByte,System.SByte,System.SByte)
  commentId: M:piine.SByte4.#ctor(System.SByte,System.SByte,System.SByte,System.SByte)
  id: '#ctor(System.SByte,System.SByte,System.SByte,System.SByte)'
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: SByte4(SByte, SByte, SByte, SByte)
  nameWithType: SByte4.SByte4(SByte, SByte, SByte, SByte)
  fullName: piine.SByte4.SByte4(System.SByte, System.SByte, System.SByte, System.SByte)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1099
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte4(sbyte x, sbyte y, sbyte z, sbyte w)
    parameters:
    - id: x
      type: System.SByte
    - id: y
      type: System.SByte
    - id: z
      type: System.SByte
    - id: w
      type: System.SByte
    content.vb: Public Sub New(x As SByte, y As SByte, z As SByte, w As SByte)
  overload: piine.SByte4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.#ctor(piine.SByte2,piine.SByte2)
  commentId: M:piine.SByte4.#ctor(piine.SByte2,piine.SByte2)
  id: '#ctor(piine.SByte2,piine.SByte2)'
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: SByte4(SByte2, SByte2)
  nameWithType: SByte4.SByte4(SByte2, SByte2)
  fullName: piine.SByte4.SByte4(piine.SByte2, piine.SByte2)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1107
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte4(SByte2 leftPart, SByte2 rightPart)
    parameters:
    - id: leftPart
      type: piine.SByte2
    - id: rightPart
      type: piine.SByte2
    content.vb: Public Sub New(leftPart As SByte2, rightPart As SByte2)
  overload: piine.SByte4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.#ctor(System.SByte)
  commentId: M:piine.SByte4.#ctor(System.SByte)
  id: '#ctor(System.SByte)'
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: SByte4(SByte)
  nameWithType: SByte4.SByte4(SByte)
  fullName: piine.SByte4.SByte4(System.SByte)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1115
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public SByte4(sbyte all)
    parameters:
    - id: all
      type: System.SByte
    content.vb: Public Sub New(all As SByte)
  overload: piine.SByte4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.GetUnsafe(System.Int32)
  commentId: M:piine.SByte4.GetUnsafe(System.Int32)
  id: GetUnsafe(System.Int32)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: GetUnsafe(Int32)
  nameWithType: SByte4.GetUnsafe(Int32)
  fullName: piine.SByte4.GetUnsafe(System.Int32)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: GetUnsafe
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1123
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public sbyte GetUnsafe(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.SByte
    content.vb: Public Function GetUnsafe(index As Integer) As SByte
  overload: piine.SByte4.GetUnsafe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.SetUnsafe(System.Int32,System.SByte)
  commentId: M:piine.SByte4.SetUnsafe(System.Int32,System.SByte)
  id: SetUnsafe(System.Int32,System.SByte)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: SetUnsafe(Int32, SByte)
  nameWithType: SByte4.SetUnsafe(Int32, SByte)
  fullName: piine.SByte4.SetUnsafe(System.Int32, System.SByte)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: SetUnsafe
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1125
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public void SetUnsafe(int index, sbyte value)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.SByte
    content.vb: Public Sub SetUnsafe(index As Integer, value As SByte)
  overload: piine.SByte4.SetUnsafe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.Normalize(piine.SByte4)
  commentId: M:piine.SByte4.Normalize(piine.SByte4)
  id: Normalize(piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Normalize(SByte4)
  nameWithType: SByte4.Normalize(SByte4)
  fullName: piine.SByte4.Normalize(piine.SByte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Normalize
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1127
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 Normalize(SByte4 v)
    parameters:
    - id: v
      type: piine.SByte4
    return:
      type: piine.SByte4
    content.vb: Public Shared Function Normalize(v As SByte4) As SByte4
  overload: piine.SByte4.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.Absolute(piine.SByte4)
  commentId: M:piine.SByte4.Absolute(piine.SByte4)
  id: Absolute(piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Absolute(SByte4)
  nameWithType: SByte4.Absolute(SByte4)
  fullName: piine.SByte4.Absolute(piine.SByte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Absolute
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1139
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 Absolute(SByte4 v)
    parameters:
    - id: v
      type: piine.SByte4
    return:
      type: piine.SByte4
    content.vb: Public Shared Function Absolute(v As SByte4) As SByte4
  overload: piine.SByte4.Absolute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.Distance(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.Distance(piine.SByte4,piine.SByte4)
  id: Distance(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Distance(SByte4, SByte4)
  nameWithType: SByte4.Distance(SByte4, SByte4)
  fullName: piine.SByte4.Distance(piine.SByte4, piine.SByte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Distance
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1141
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static float Distance(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: System.Single
    content.vb: Public Shared Function Distance(a As SByte4, b As SByte4) As Single
  overload: piine.SByte4.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.Dot(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.Dot(piine.SByte4,piine.SByte4)
  id: Dot(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Dot(SByte4, SByte4)
  nameWithType: SByte4.Dot(SByte4, SByte4)
  fullName: piine.SByte4.Dot(piine.SByte4, piine.SByte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Dot
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1143
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static float Dot(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: System.Single
    content.vb: Public Shared Function Dot(a As SByte4, b As SByte4) As Single
  overload: piine.SByte4.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.Reverse(piine.SByte4)
  commentId: M:piine.SByte4.Reverse(piine.SByte4)
  id: Reverse(piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Reverse(SByte4)
  nameWithType: SByte4.Reverse(SByte4)
  fullName: piine.SByte4.Reverse(piine.SByte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Reverse
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1145
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 Reverse(SByte4 v)
    parameters:
    - id: v
      type: piine.SByte4
    return:
      type: piine.SByte4
    content.vb: Public Shared Function Reverse(v As SByte4) As SByte4
  overload: piine.SByte4.Reverse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.Sum
  commentId: M:piine.SByte4.Sum
  id: Sum
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Sum()
  nameWithType: SByte4.Sum()
  fullName: piine.SByte4.Sum()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Sum
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1147
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public int Sum()
    return:
      type: System.Int32
    content.vb: Public Function Sum As Integer
  overload: piine.SByte4.Sum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.Volume
  commentId: M:piine.SByte4.Volume
  id: Volume
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Volume()
  nameWithType: SByte4.Volume()
  fullName: piine.SByte4.Volume()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Volume
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1149
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public int Volume()
    return:
      type: System.Int32
    content.vb: Public Function Volume As Integer
  overload: piine.SByte4.Volume*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.Length
  commentId: M:piine.SByte4.Length
  id: Length
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Length()
  nameWithType: SByte4.Length()
  fullName: piine.SByte4.Length()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Length
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1151
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public float Length()
    return:
      type: System.Single
    content.vb: Public Function Length As Single
  overload: piine.SByte4.Length*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.LengthSquared
  commentId: M:piine.SByte4.LengthSquared
  id: LengthSquared
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: LengthSquared()
  nameWithType: SByte4.LengthSquared()
  fullName: piine.SByte4.LengthSquared()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: LengthSquared
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1153
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public float LengthSquared()
    return:
      type: System.Single
    content.vb: Public Function LengthSquared As Single
  overload: piine.SByte4.LengthSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.Contains(System.SByte)
  commentId: M:piine.SByte4.Contains(System.SByte)
  id: Contains(System.SByte)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Contains(SByte)
  nameWithType: SByte4.Contains(SByte)
  fullName: piine.SByte4.Contains(System.SByte)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Contains
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1155
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public bool Contains(sbyte value)
    parameters:
    - id: value
      type: System.SByte
    return:
      type: System.Boolean
    content.vb: Public Function Contains(value As SByte) As Boolean
  overload: piine.SByte4.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.op_Equality(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.op_Equality(piine.SByte4,piine.SByte4)
  id: op_Equality(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Equality(SByte4, SByte4)
  nameWithType: SByte4.Equality(SByte4, SByte4)
  fullName: piine.SByte4.Equality(piine.SByte4, piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Equality
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1157
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator ==(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As SByte4, b As SByte4) As Boolean
  overload: piine.SByte4.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_Inequality(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.op_Inequality(piine.SByte4,piine.SByte4)
  id: op_Inequality(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Inequality(SByte4, SByte4)
  nameWithType: SByte4.Inequality(SByte4, SByte4)
  fullName: piine.SByte4.Inequality(piine.SByte4, piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Inequality
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1159
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator !=(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As SByte4, b As SByte4) As Boolean
  overload: piine.SByte4.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_Addition(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.op_Addition(piine.SByte4,piine.SByte4)
  id: op_Addition(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Addition(SByte4, SByte4)
  nameWithType: SByte4.Addition(SByte4, SByte4)
  fullName: piine.SByte4.Addition(piine.SByte4, piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Addition
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1161
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 operator +(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: piine.SByte4
    content.vb: Public Shared Operator +(a As SByte4, b As SByte4) As SByte4
  overload: piine.SByte4.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_Subtraction(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.op_Subtraction(piine.SByte4,piine.SByte4)
  id: op_Subtraction(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Subtraction(SByte4, SByte4)
  nameWithType: SByte4.Subtraction(SByte4, SByte4)
  fullName: piine.SByte4.Subtraction(piine.SByte4, piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Subtraction
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1163
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 operator -(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: piine.SByte4
    content.vb: Public Shared Operator -(a As SByte4, b As SByte4) As SByte4
  overload: piine.SByte4.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_UnaryNegation(piine.SByte4)
  commentId: M:piine.SByte4.op_UnaryNegation(piine.SByte4)
  id: op_UnaryNegation(piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: UnaryNegation(SByte4)
  nameWithType: SByte4.UnaryNegation(SByte4)
  fullName: piine.SByte4.UnaryNegation(piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_UnaryNegation
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1165
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 operator -(SByte4 v)
    parameters:
    - id: v
      type: piine.SByte4
    return:
      type: piine.SByte4
    content.vb: Public Shared Operator -(v As SByte4) As SByte4
  overload: piine.SByte4.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_Multiply(piine.SByte4,System.Single)
  commentId: M:piine.SByte4.op_Multiply(piine.SByte4,System.Single)
  id: op_Multiply(piine.SByte4,System.Single)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Multiply(SByte4, Single)
  nameWithType: SByte4.Multiply(SByte4, Single)
  fullName: piine.SByte4.Multiply(piine.SByte4, System.Single)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Multiply
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1167
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 operator *(SByte4 a, float b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: System.Single
    return:
      type: piine.SByte4
    content.vb: Public Shared Operator *(a As SByte4, b As Single) As SByte4
  overload: piine.SByte4.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_Division(piine.SByte4,System.Single)
  commentId: M:piine.SByte4.op_Division(piine.SByte4,System.Single)
  id: op_Division(piine.SByte4,System.Single)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Division(SByte4, Single)
  nameWithType: SByte4.Division(SByte4, Single)
  fullName: piine.SByte4.Division(piine.SByte4, System.Single)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Division
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1169
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static SByte4 operator /(SByte4 a, float b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: System.Single
    return:
      type: piine.SByte4
    content.vb: Public Shared Operator /(a As SByte4, b As Single) As SByte4
  overload: piine.SByte4.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_GreaterThan(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.op_GreaterThan(piine.SByte4,piine.SByte4)
  id: op_GreaterThan(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: GreaterThan(SByte4, SByte4)
  nameWithType: SByte4.GreaterThan(SByte4, SByte4)
  fullName: piine.SByte4.GreaterThan(piine.SByte4, piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_GreaterThan
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1171
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator>(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator>(a As SByte4, b As SByte4) As Boolean
  overload: piine.SByte4.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_LessThan(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.op_LessThan(piine.SByte4,piine.SByte4)
  id: op_LessThan(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: LessThan(SByte4, SByte4)
  nameWithType: SByte4.LessThan(SByte4, SByte4)
  fullName: piine.SByte4.LessThan(piine.SByte4, piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_LessThan
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1173
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator <(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(a As SByte4, b As SByte4) As Boolean
  overload: piine.SByte4.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_GreaterThanOrEqual(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.op_GreaterThanOrEqual(piine.SByte4,piine.SByte4)
  id: op_GreaterThanOrEqual(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(SByte4, SByte4)
  nameWithType: SByte4.GreaterThanOrEqual(SByte4, SByte4)
  fullName: piine.SByte4.GreaterThanOrEqual(piine.SByte4, piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_GreaterThanOrEqual
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1175
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator >=(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(a As SByte4, b As SByte4) As Boolean
  overload: piine.SByte4.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.op_LessThanOrEqual(piine.SByte4,piine.SByte4)
  commentId: M:piine.SByte4.op_LessThanOrEqual(piine.SByte4,piine.SByte4)
  id: op_LessThanOrEqual(piine.SByte4,piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(SByte4, SByte4)
  nameWithType: SByte4.LessThanOrEqual(SByte4, SByte4)
  fullName: piine.SByte4.LessThanOrEqual(piine.SByte4, piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_LessThanOrEqual
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1177
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator <=(SByte4 a, SByte4 b)
    parameters:
    - id: a
      type: piine.SByte4
    - id: b
      type: piine.SByte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(a As SByte4, b As SByte4) As Boolean
  overload: piine.SByte4.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.SByte4.Deconstruct(System.SByte@,System.SByte@,System.SByte@,System.SByte@)
  commentId: M:piine.SByte4.Deconstruct(System.SByte@,System.SByte@,System.SByte@,System.SByte@)
  id: Deconstruct(System.SByte@,System.SByte@,System.SByte@,System.SByte@)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Deconstruct(out SByte, out SByte, out SByte, out SByte)
  nameWithType: SByte4.Deconstruct(out SByte, out SByte, out SByte, out SByte)
  fullName: piine.SByte4.Deconstruct(out System.SByte, out System.SByte, out System.SByte, out System.SByte)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Deconstruct
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1179
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public void Deconstruct(out sbyte x, out sbyte y, out sbyte z, out sbyte w)
    parameters:
    - id: x
      type: System.SByte
    - id: y
      type: System.SByte
    - id: z
      type: System.SByte
    - id: w
      type: System.SByte
    content.vb: Public Sub Deconstruct(ByRef x As SByte, ByRef y As SByte, ByRef z As SByte, ByRef w As SByte)
  overload: piine.SByte4.Deconstruct*
  nameWithType.vb: SByte4.Deconstruct(ByRef SByte, ByRef SByte, ByRef SByte, ByRef SByte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.SByte4.Deconstruct(ByRef System.SByte, ByRef System.SByte, ByRef System.SByte, ByRef System.SByte)
  name.vb: Deconstruct(ByRef SByte, ByRef SByte, ByRef SByte, ByRef SByte)
- uid: piine.SByte4.ToString
  commentId: M:piine.SByte4.ToString
  id: ToString
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SByte4.ToString()
  fullName: piine.SByte4.ToString()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: ToString
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1187
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: piine.SByte4.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.SByte4.Equals(piine.SByte4)
  commentId: M:piine.SByte4.Equals(piine.SByte4)
  id: Equals(piine.SByte4)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Equals(SByte4)
  nameWithType: SByte4.Equals(SByte4)
  fullName: piine.SByte4.Equals(piine.SByte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Equals
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1189
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public bool Equals(SByte4 other)
    parameters:
    - id: other
      type: piine.SByte4
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As SByte4) As Boolean
  overload: piine.SByte4.Equals*
  implements:
  - System.IEquatable{piine.SByte4}.Equals(piine.SByte4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.SByte4.Equals(System.Object)
  commentId: M:piine.SByte4.Equals(System.Object)
  id: Equals(System.Object)
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SByte4.Equals(Object)
  fullName: piine.SByte4.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Equals
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1191
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: piine.SByte4.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.SByte4.GetHashCode
  commentId: M:piine.SByte4.GetHashCode
  id: GetHashCode
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SByte4.GetHashCode()
  fullName: piine.SByte4.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: GetHashCode
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1201
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: piine.SByte4.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.SByte4.op_Implicit(piine.SByte4)~System.Numerics.Vector4
  commentId: M:piine.SByte4.op_Implicit(piine.SByte4)~System.Numerics.Vector4
  id: op_Implicit(piine.SByte4)~System.Numerics.Vector4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Implicit(SByte4 to Vector4)
  nameWithType: SByte4.Implicit(SByte4 to Vector4)
  fullName: piine.SByte4.Implicit(piine.SByte4 to System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1205
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Vector4(SByte4 v)
    parameters:
    - id: v
      type: piine.SByte4
    return:
      type: System.Numerics.Vector4
    content.vb: Public Shared Widening Operator CType(v As SByte4) As Vector4
  overload: piine.SByte4.op_Implicit*
  nameWithType.vb: SByte4.Widening(SByte4 to Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Widening(piine.SByte4 to System.Numerics.Vector4)
  name.vb: Widening(SByte4 to Vector4)
- uid: piine.SByte4.op_Explicit(System.Numerics.Vector4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(System.Numerics.Vector4)~piine.SByte4
  id: op_Explicit(System.Numerics.Vector4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(Vector4 to SByte4)
  nameWithType: SByte4.Explicit(Vector4 to SByte4)
  fullName: piine.SByte4.Explicit(System.Numerics.Vector4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1206
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(Vector4 v)
    parameters:
    - id: v
      type: System.Numerics.Vector4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As Vector4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(Vector4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(System.Numerics.Vector4 to piine.SByte4)
  name.vb: Narrowing(Vector4 to SByte4)
- uid: piine.SByte4.op_Implicit(System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte})~piine.SByte4
  commentId: M:piine.SByte4.op_Implicit(System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte})~piine.SByte4
  id: op_Implicit(System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte})~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Implicit((SByte x, SByte y, SByte z, SByte w) to SByte4)
  nameWithType: SByte4.Implicit((SByte x, SByte y, SByte z, SByte w) to SByte4)
  fullName: piine.SByte4.Implicit(System.ValueTuple<System.SByte, System.SByte, System.SByte, System.SByte> to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1209
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator SByte4((sbyte x, sbyte y, sbyte z, sbyte w)v)
    parameters:
    - id: v
      type: System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte}
    return:
      type: piine.SByte4
    content.vb: Public Shared Widening Operator CType(v As(x As SByte, y As SByte, z As SByte, w As SByte)) As SByte4
  overload: piine.SByte4.op_Implicit*
  nameWithType.vb: SByte4.Widening((x As SByte, y As SByte, z As SByte, w As SByte) to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Widening(System.ValueTuple(Of System.SByte, System.SByte, System.SByte, System.SByte) to piine.SByte4)
  name.vb: Widening((x As SByte, y As SByte, z As SByte, w As SByte) to SByte4)
- uid: piine.SByte4.op_Implicit(piine.SByte4)~System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte}
  commentId: M:piine.SByte4.op_Implicit(piine.SByte4)~System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte}
  id: op_Implicit(piine.SByte4)~System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte}
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Implicit(SByte4 to (SByte, SByte, SByte, SByte))
  nameWithType: SByte4.Implicit(SByte4 to (SByte, SByte, SByte, SByte))
  fullName: piine.SByte4.Implicit(piine.SByte4 to System.ValueTuple<System.SByte, System.SByte, System.SByte, System.SByte>)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1211
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator (sbyte, sbyte, sbyte, sbyte)(SByte4 v)
    parameters:
    - id: v
      type: piine.SByte4
    return:
      type: System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte}
    content.vb: Public Shared Widening Operator CType(v As SByte4) As(SByte, SByte, SByte, SByte)
  overload: piine.SByte4.op_Implicit*
  nameWithType.vb: SByte4.Widening(SByte4 to (SByte, SByte, SByte, SByte))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Widening(piine.SByte4 to System.ValueTuple(Of System.SByte, System.SByte, System.SByte, System.SByte))
  name.vb: Widening(SByte4 to (SByte, SByte, SByte, SByte))
- uid: piine.SByte4.op_Explicit(piine.Float4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(piine.Float4)~piine.SByte4
  id: op_Explicit(piine.Float4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(Float4 to SByte4)
  nameWithType: SByte4.Explicit(Float4 to SByte4)
  fullName: piine.SByte4.Explicit(piine.Float4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1215
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(Float4 v)
    parameters:
    - id: v
      type: piine.Float4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As Float4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(Float4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(piine.Float4 to piine.SByte4)
  name.vb: Narrowing(Float4 to SByte4)
- uid: piine.SByte4.op_Explicit(piine.Double4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(piine.Double4)~piine.SByte4
  id: op_Explicit(piine.Double4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(Double4 to SByte4)
  nameWithType: SByte4.Explicit(Double4 to SByte4)
  fullName: piine.SByte4.Explicit(piine.Double4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1218
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(Double4 v)
    parameters:
    - id: v
      type: piine.Double4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As Double4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(Double4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(piine.Double4 to piine.SByte4)
  name.vb: Narrowing(Double4 to SByte4)
- uid: piine.SByte4.op_Explicit(piine.Int4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(piine.Int4)~piine.SByte4
  id: op_Explicit(piine.Int4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(Int4 to SByte4)
  nameWithType: SByte4.Explicit(Int4 to SByte4)
  fullName: piine.SByte4.Explicit(piine.Int4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1221
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(Int4 v)
    parameters:
    - id: v
      type: piine.Int4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As Int4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(Int4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(piine.Int4 to piine.SByte4)
  name.vb: Narrowing(Int4 to SByte4)
- uid: piine.SByte4.op_Explicit(piine.UInt4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(piine.UInt4)~piine.SByte4
  id: op_Explicit(piine.UInt4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(UInt4 to SByte4)
  nameWithType: SByte4.Explicit(UInt4 to SByte4)
  fullName: piine.SByte4.Explicit(piine.UInt4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1224
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(UInt4 v)
    parameters:
    - id: v
      type: piine.UInt4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As UInt4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(UInt4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(piine.UInt4 to piine.SByte4)
  name.vb: Narrowing(UInt4 to SByte4)
- uid: piine.SByte4.op_Explicit(piine.Byte4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(piine.Byte4)~piine.SByte4
  id: op_Explicit(piine.Byte4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(Byte4 to SByte4)
  nameWithType: SByte4.Explicit(Byte4 to SByte4)
  fullName: piine.SByte4.Explicit(piine.Byte4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1227
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(Byte4 v)
    parameters:
    - id: v
      type: piine.Byte4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As Byte4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(Byte4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(piine.Byte4 to piine.SByte4)
  name.vb: Narrowing(Byte4 to SByte4)
- uid: piine.SByte4.op_Explicit(piine.Short4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(piine.Short4)~piine.SByte4
  id: op_Explicit(piine.Short4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(Short4 to SByte4)
  nameWithType: SByte4.Explicit(Short4 to SByte4)
  fullName: piine.SByte4.Explicit(piine.Short4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1230
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(Short4 v)
    parameters:
    - id: v
      type: piine.Short4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As Short4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(Short4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(piine.Short4 to piine.SByte4)
  name.vb: Narrowing(Short4 to SByte4)
- uid: piine.SByte4.op_Explicit(piine.UShort4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(piine.UShort4)~piine.SByte4
  id: op_Explicit(piine.UShort4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(UShort4 to SByte4)
  nameWithType: SByte4.Explicit(UShort4 to SByte4)
  fullName: piine.SByte4.Explicit(piine.UShort4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1233
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(UShort4 v)
    parameters:
    - id: v
      type: piine.UShort4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As UShort4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(UShort4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(piine.UShort4 to piine.SByte4)
  name.vb: Narrowing(UShort4 to SByte4)
- uid: piine.SByte4.op_Explicit(piine.Long4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(piine.Long4)~piine.SByte4
  id: op_Explicit(piine.Long4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(Long4 to SByte4)
  nameWithType: SByte4.Explicit(Long4 to SByte4)
  fullName: piine.SByte4.Explicit(piine.Long4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1236
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(Long4 v)
    parameters:
    - id: v
      type: piine.Long4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As Long4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(Long4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(piine.Long4 to piine.SByte4)
  name.vb: Narrowing(Long4 to SByte4)
- uid: piine.SByte4.op_Explicit(piine.ULong4)~piine.SByte4
  commentId: M:piine.SByte4.op_Explicit(piine.ULong4)~piine.SByte4
  id: op_Explicit(piine.ULong4)~piine.SByte4
  parent: piine.SByte4
  langs:
  - csharp
  - vb
  name: Explicit(ULong4 to SByte4)
  nameWithType: SByte4.Explicit(ULong4 to SByte4)
  fullName: piine.SByte4.Explicit(piine.ULong4 to piine.SByte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1239
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator SByte4(ULong4 v)
    parameters:
    - id: v
      type: piine.ULong4
    return:
      type: piine.SByte4
    content.vb: Public Shared Narrowing Operator CType(v As ULong4) As SByte4
  overload: piine.SByte4.op_Explicit*
  nameWithType.vb: SByte4.Narrowing(ULong4 to SByte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.SByte4.Narrowing(piine.ULong4 to piine.SByte4)
  name.vb: Narrowing(ULong4 to SByte4)
references:
- uid: piine
  commentId: N:piine
  name: piine
  nameWithType: piine
  fullName: piine
- uid: System.IEquatable{piine.SByte4}
  commentId: T:System.IEquatable{piine.SByte4}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<SByte4>
  nameWithType: IEquatable<SByte4>
  fullName: System.IEquatable<piine.SByte4>
  nameWithType.vb: IEquatable(Of SByte4)
  fullName.vb: System.IEquatable(Of piine.SByte4)
  name.vb: IEquatable(Of SByte4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: piine.SByte4
    name: SByte4
    nameWithType: SByte4
    fullName: piine.SByte4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: piine.SByte4
    name: SByte4
    nameWithType: SByte4
    fullName: piine.SByte4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: piine.SByte4.Zero*
  commentId: Overload:piine.SByte4.Zero
  name: Zero
  nameWithType: SByte4.Zero
  fullName: piine.SByte4.Zero
- uid: piine.SByte4
  commentId: T:piine.SByte4
  parent: piine
  name: SByte4
  nameWithType: SByte4
  fullName: piine.SByte4
- uid: piine.SByte4.One*
  commentId: Overload:piine.SByte4.One
  name: One
  nameWithType: SByte4.One
  fullName: piine.SByte4.One
- uid: piine.SByte4.UnitX*
  commentId: Overload:piine.SByte4.UnitX
  name: UnitX
  nameWithType: SByte4.UnitX
  fullName: piine.SByte4.UnitX
- uid: piine.SByte4.UnitY*
  commentId: Overload:piine.SByte4.UnitY
  name: UnitY
  nameWithType: SByte4.UnitY
  fullName: piine.SByte4.UnitY
- uid: piine.SByte4.UnitZ*
  commentId: Overload:piine.SByte4.UnitZ
  name: UnitZ
  nameWithType: SByte4.UnitZ
  fullName: piine.SByte4.UnitZ
- uid: piine.SByte4.UnitW*
  commentId: Overload:piine.SByte4.UnitW
  name: UnitW
  nameWithType: SByte4.UnitW
  fullName: piine.SByte4.UnitW
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: piine.SByte4.XY*
  commentId: Overload:piine.SByte4.XY
  name: XY
  nameWithType: SByte4.XY
  fullName: piine.SByte4.XY
- uid: piine.SByte2
  commentId: T:piine.SByte2
  parent: piine
  name: SByte2
  nameWithType: SByte2
  fullName: piine.SByte2
- uid: piine.SByte4.XZ*
  commentId: Overload:piine.SByte4.XZ
  name: XZ
  nameWithType: SByte4.XZ
  fullName: piine.SByte4.XZ
- uid: piine.SByte4.YZ*
  commentId: Overload:piine.SByte4.YZ
  name: YZ
  nameWithType: SByte4.YZ
  fullName: piine.SByte4.YZ
- uid: piine.SByte4.XYZ*
  commentId: Overload:piine.SByte4.XYZ
  name: XYZ
  nameWithType: SByte4.XYZ
  fullName: piine.SByte4.XYZ
- uid: piine.SByte3
  commentId: T:piine.SByte3
  parent: piine
  name: SByte3
  nameWithType: SByte3
  fullName: piine.SByte3
- uid: piine.SByte4.XZY*
  commentId: Overload:piine.SByte4.XZY
  name: XZY
  nameWithType: SByte4.XZY
  fullName: piine.SByte4.XZY
- uid: piine.SByte4.YXZ*
  commentId: Overload:piine.SByte4.YXZ
  name: YXZ
  nameWithType: SByte4.YXZ
  fullName: piine.SByte4.YXZ
- uid: piine.SByte4.YZX*
  commentId: Overload:piine.SByte4.YZX
  name: YZX
  nameWithType: SByte4.YZX
  fullName: piine.SByte4.YZX
- uid: piine.SByte4.ZXY*
  commentId: Overload:piine.SByte4.ZXY
  name: ZXY
  nameWithType: SByte4.ZXY
  fullName: piine.SByte4.ZXY
- uid: piine.SByte4.ZYX*
  commentId: Overload:piine.SByte4.ZYX
  name: ZYX
  nameWithType: SByte4.ZYX
  fullName: piine.SByte4.ZYX
- uid: piine.SByte4.Item*
  commentId: Overload:piine.SByte4.Item
  name: Item
  nameWithType: SByte4.Item
  fullName: piine.SByte4.Item
- uid: piine.SByte4.#ctor*
  commentId: Overload:piine.SByte4.#ctor
  name: SByte4
  nameWithType: SByte4.SByte4
  fullName: piine.SByte4.SByte4
- uid: piine.SByte4.GetUnsafe*
  commentId: Overload:piine.SByte4.GetUnsafe
  name: GetUnsafe
  nameWithType: SByte4.GetUnsafe
  fullName: piine.SByte4.GetUnsafe
- uid: piine.SByte4.SetUnsafe*
  commentId: Overload:piine.SByte4.SetUnsafe
  name: SetUnsafe
  nameWithType: SByte4.SetUnsafe
  fullName: piine.SByte4.SetUnsafe
- uid: piine.SByte4.Normalize*
  commentId: Overload:piine.SByte4.Normalize
  name: Normalize
  nameWithType: SByte4.Normalize
  fullName: piine.SByte4.Normalize
- uid: piine.SByte4.Absolute*
  commentId: Overload:piine.SByte4.Absolute
  name: Absolute
  nameWithType: SByte4.Absolute
  fullName: piine.SByte4.Absolute
- uid: piine.SByte4.Distance*
  commentId: Overload:piine.SByte4.Distance
  name: Distance
  nameWithType: SByte4.Distance
  fullName: piine.SByte4.Distance
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: piine.SByte4.Dot*
  commentId: Overload:piine.SByte4.Dot
  name: Dot
  nameWithType: SByte4.Dot
  fullName: piine.SByte4.Dot
- uid: piine.SByte4.Reverse*
  commentId: Overload:piine.SByte4.Reverse
  name: Reverse
  nameWithType: SByte4.Reverse
  fullName: piine.SByte4.Reverse
- uid: piine.SByte4.Sum*
  commentId: Overload:piine.SByte4.Sum
  name: Sum
  nameWithType: SByte4.Sum
  fullName: piine.SByte4.Sum
- uid: piine.SByte4.Volume*
  commentId: Overload:piine.SByte4.Volume
  name: Volume
  nameWithType: SByte4.Volume
  fullName: piine.SByte4.Volume
- uid: piine.SByte4.Length*
  commentId: Overload:piine.SByte4.Length
  name: Length
  nameWithType: SByte4.Length
  fullName: piine.SByte4.Length
- uid: piine.SByte4.LengthSquared*
  commentId: Overload:piine.SByte4.LengthSquared
  name: LengthSquared
  nameWithType: SByte4.LengthSquared
  fullName: piine.SByte4.LengthSquared
- uid: piine.SByte4.Contains*
  commentId: Overload:piine.SByte4.Contains
  name: Contains
  nameWithType: SByte4.Contains
  fullName: piine.SByte4.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: piine.SByte4.op_Equality*
  commentId: Overload:piine.SByte4.op_Equality
  name: Equality
  nameWithType: SByte4.Equality
  fullName: piine.SByte4.Equality
- uid: piine.SByte4.op_Inequality*
  commentId: Overload:piine.SByte4.op_Inequality
  name: Inequality
  nameWithType: SByte4.Inequality
  fullName: piine.SByte4.Inequality
- uid: piine.SByte4.op_Addition*
  commentId: Overload:piine.SByte4.op_Addition
  name: Addition
  nameWithType: SByte4.Addition
  fullName: piine.SByte4.Addition
- uid: piine.SByte4.op_Subtraction*
  commentId: Overload:piine.SByte4.op_Subtraction
  name: Subtraction
  nameWithType: SByte4.Subtraction
  fullName: piine.SByte4.Subtraction
- uid: piine.SByte4.op_UnaryNegation*
  commentId: Overload:piine.SByte4.op_UnaryNegation
  name: UnaryNegation
  nameWithType: SByte4.UnaryNegation
  fullName: piine.SByte4.UnaryNegation
- uid: piine.SByte4.op_Multiply*
  commentId: Overload:piine.SByte4.op_Multiply
  name: Multiply
  nameWithType: SByte4.Multiply
  fullName: piine.SByte4.Multiply
- uid: piine.SByte4.op_Division*
  commentId: Overload:piine.SByte4.op_Division
  name: Division
  nameWithType: SByte4.Division
  fullName: piine.SByte4.Division
- uid: piine.SByte4.op_GreaterThan*
  commentId: Overload:piine.SByte4.op_GreaterThan
  name: GreaterThan
  nameWithType: SByte4.GreaterThan
  fullName: piine.SByte4.GreaterThan
- uid: piine.SByte4.op_LessThan*
  commentId: Overload:piine.SByte4.op_LessThan
  name: LessThan
  nameWithType: SByte4.LessThan
  fullName: piine.SByte4.LessThan
- uid: piine.SByte4.op_GreaterThanOrEqual*
  commentId: Overload:piine.SByte4.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: SByte4.GreaterThanOrEqual
  fullName: piine.SByte4.GreaterThanOrEqual
- uid: piine.SByte4.op_LessThanOrEqual*
  commentId: Overload:piine.SByte4.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: SByte4.LessThanOrEqual
  fullName: piine.SByte4.LessThanOrEqual
- uid: piine.SByte4.Deconstruct*
  commentId: Overload:piine.SByte4.Deconstruct
  name: Deconstruct
  nameWithType: SByte4.Deconstruct
  fullName: piine.SByte4.Deconstruct
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.SByte4.ToString*
  commentId: Overload:piine.SByte4.ToString
  name: ToString
  nameWithType: SByte4.ToString
  fullName: piine.SByte4.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: piine.SByte4.Equals*
  commentId: Overload:piine.SByte4.Equals
  name: Equals
  nameWithType: SByte4.Equals
  fullName: piine.SByte4.Equals
- uid: System.IEquatable{piine.SByte4}.Equals(piine.SByte4)
  commentId: M:System.IEquatable{piine.SByte4}.Equals(piine.SByte4)
  parent: System.IEquatable{piine.SByte4}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(SByte4)
  nameWithType: IEquatable<SByte4>.Equals(SByte4)
  fullName: System.IEquatable<piine.SByte4>.Equals(piine.SByte4)
  nameWithType.vb: IEquatable(Of SByte4).Equals(SByte4)
  fullName.vb: System.IEquatable(Of piine.SByte4).Equals(piine.SByte4)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<SByte4>.Equals
    fullName: System.IEquatable<piine.SByte4>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.SByte4
    name: SByte4
    nameWithType: SByte4
    fullName: piine.SByte4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of SByte4).Equals
    fullName: System.IEquatable(Of piine.SByte4).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.SByte4
    name: SByte4
    nameWithType: SByte4
    fullName: piine.SByte4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.SByte4.GetHashCode*
  commentId: Overload:piine.SByte4.GetHashCode
  name: GetHashCode
  nameWithType: SByte4.GetHashCode
  fullName: piine.SByte4.GetHashCode
- uid: piine.SByte4.op_Implicit*
  commentId: Overload:piine.SByte4.op_Implicit
  name: Implicit
  nameWithType: SByte4.Implicit
  fullName: piine.SByte4.Implicit
  nameWithType.vb: SByte4.Widening
  fullName.vb: piine.SByte4.Widening
  name.vb: Widening
- uid: System.Numerics.Vector4
  commentId: T:System.Numerics.Vector4
  parent: System.Numerics
  isExternal: true
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: piine.SByte4.op_Explicit*
  commentId: Overload:piine.SByte4.op_Explicit
  name: Explicit
  nameWithType: SByte4.Explicit
  fullName: piine.SByte4.Explicit
  nameWithType.vb: SByte4.Narrowing
  fullName.vb: piine.SByte4.Narrowing
  name.vb: Narrowing
- uid: System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte}
  commentId: T:System.ValueTuple{System.SByte,System.SByte,System.SByte,System.SByte}
  parent: System
  isExternal: true
  name: ValueTuple<SByte, SByte, SByte, SByte>
  nameWithType: ValueTuple<SByte, SByte, SByte, SByte>
  fullName: System.ValueTuple<System.SByte, System.SByte, System.SByte, System.SByte>
  nameWithType.vb: ValueTuple(Of SByte, SByte, SByte, SByte)
  fullName.vb: System.ValueTuple(Of System.SByte, System.SByte, System.SByte, System.SByte)
  name.vb: ValueTuple(Of SByte, SByte, SByte, SByte)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.SByte
    name: SByte
    nameWithType: SByte
    fullName: System.SByte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Float4
  commentId: T:piine.Float4
  parent: piine
  name: Float4
  nameWithType: Float4
  fullName: piine.Float4
- uid: piine.Double4
  commentId: T:piine.Double4
  parent: piine
  name: Double4
  nameWithType: Double4
  fullName: piine.Double4
- uid: piine.Int4
  commentId: T:piine.Int4
  parent: piine
  name: Int4
  nameWithType: Int4
  fullName: piine.Int4
- uid: piine.UInt4
  commentId: T:piine.UInt4
  parent: piine
  name: UInt4
  nameWithType: UInt4
  fullName: piine.UInt4
- uid: piine.Byte4
  commentId: T:piine.Byte4
  parent: piine
  name: Byte4
  nameWithType: Byte4
  fullName: piine.Byte4
- uid: piine.Short4
  commentId: T:piine.Short4
  parent: piine
  name: Short4
  nameWithType: Short4
  fullName: piine.Short4
- uid: piine.UShort4
  commentId: T:piine.UShort4
  parent: piine
  name: UShort4
  nameWithType: UShort4
  fullName: piine.UShort4
- uid: piine.Long4
  commentId: T:piine.Long4
  parent: piine
  name: Long4
  nameWithType: Long4
  fullName: piine.Long4
- uid: piine.ULong4
  commentId: T:piine.ULong4
  parent: piine
  name: ULong4
  nameWithType: ULong4
  fullName: piine.ULong4
