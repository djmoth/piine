### YamlMime:ManagedReference
items:
- uid: piine.Voxels.TempVoxelGrid`1
  commentId: T:piine.Voxels.TempVoxelGrid`1
  id: TempVoxelGrid`1
  parent: piine.Voxels
  children:
  - piine.Voxels.TempVoxelGrid`1.#ctor(System.Span{`0},piine.Int3)
  - piine.Voxels.TempVoxelGrid`1.CalculateIndex(piine.Int3)
  - piine.Voxels.TempVoxelGrid`1.Depth
  - piine.Voxels.TempVoxelGrid`1.Dimensions
  - piine.Voxels.TempVoxelGrid`1.GetVoxel(piine.Int3)
  - piine.Voxels.TempVoxelGrid`1.GetVoxel(System.Int32)
  - piine.Voxels.TempVoxelGrid`1.Height
  - piine.Voxels.TempVoxelGrid`1.Item(piine.Int3)
  - piine.Voxels.TempVoxelGrid`1.Item(System.Int32)
  - piine.Voxels.TempVoxelGrid`1.SetVoxel(piine.Int3,`0)
  - piine.Voxels.TempVoxelGrid`1.SetVoxel(System.Int32,`0)
  - piine.Voxels.TempVoxelGrid`1.Volume
  - piine.Voxels.TempVoxelGrid`1.Width
  langs:
  - csharp
  - vb
  name: TempVoxelGrid<T>
  nameWithType: TempVoxelGrid<T>
  fullName: piine.Voxels.TempVoxelGrid<T>
  type: Struct
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TempVoxelGrid
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 6
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public struct TempVoxelGrid<T>
    typeParameters:
    - id: T
    content.vb: Public Structure TempVoxelGrid(Of T)
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: TempVoxelGrid(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T)
  name.vb: TempVoxelGrid(Of T)
- uid: piine.Voxels.TempVoxelGrid`1.Width
  commentId: P:piine.Voxels.TempVoxelGrid`1.Width
  id: Width
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: TempVoxelGrid<T>.Width
  fullName: piine.Voxels.TempVoxelGrid<T>.Width
  type: Property
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Width
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 10
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: piine.Voxels.TempVoxelGrid`1.Width*
  nameWithType.vb: TempVoxelGrid(Of T).Width
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Width
- uid: piine.Voxels.TempVoxelGrid`1.Height
  commentId: P:piine.Voxels.TempVoxelGrid`1.Height
  id: Height
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: TempVoxelGrid<T>.Height
  fullName: piine.Voxels.TempVoxelGrid<T>.Height
  type: Property
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Height
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 11
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: piine.Voxels.TempVoxelGrid`1.Height*
  nameWithType.vb: TempVoxelGrid(Of T).Height
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Height
- uid: piine.Voxels.TempVoxelGrid`1.Depth
  commentId: P:piine.Voxels.TempVoxelGrid`1.Depth
  id: Depth
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: TempVoxelGrid<T>.Depth
  fullName: piine.Voxels.TempVoxelGrid<T>.Depth
  type: Property
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Depth
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 12
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public int Depth { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Depth As Integer
  overload: piine.Voxels.TempVoxelGrid`1.Depth*
  nameWithType.vb: TempVoxelGrid(Of T).Depth
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Depth
- uid: piine.Voxels.TempVoxelGrid`1.Volume
  commentId: P:piine.Voxels.TempVoxelGrid`1.Volume
  id: Volume
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Volume
  nameWithType: TempVoxelGrid<T>.Volume
  fullName: piine.Voxels.TempVoxelGrid<T>.Volume
  type: Property
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Volume
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 13
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public int Volume { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Volume As Integer
  overload: piine.Voxels.TempVoxelGrid`1.Volume*
  nameWithType.vb: TempVoxelGrid(Of T).Volume
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Volume
- uid: piine.Voxels.TempVoxelGrid`1.Dimensions
  commentId: P:piine.Voxels.TempVoxelGrid`1.Dimensions
  id: Dimensions
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Dimensions
  nameWithType: TempVoxelGrid<T>.Dimensions
  fullName: piine.Voxels.TempVoxelGrid<T>.Dimensions
  type: Property
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Dimensions
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 14
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public Int3 Dimensions { get; }
    parameters: []
    return:
      type: piine.Int3
    content.vb: Public ReadOnly Property Dimensions As Int3
  overload: piine.Voxels.TempVoxelGrid`1.Dimensions*
  nameWithType.vb: TempVoxelGrid(Of T).Dimensions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Dimensions
- uid: piine.Voxels.TempVoxelGrid`1.Item(System.Int32)
  commentId: P:piine.Voxels.TempVoxelGrid`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: TempVoxelGrid<T>.Item[Int32]
  fullName: piine.Voxels.TempVoxelGrid<T>.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: this[]
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 20
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public T this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
    content.vb: Public Property Item(index As Integer) As T
  overload: piine.Voxels.TempVoxelGrid`1.Item*
  nameWithType.vb: TempVoxelGrid(Of T).Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Item(System.Int32)
  name.vb: Item(Int32)
- uid: piine.Voxels.TempVoxelGrid`1.Item(piine.Int3)
  commentId: P:piine.Voxels.TempVoxelGrid`1.Item(piine.Int3)
  id: Item(piine.Int3)
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: Item[Int3]
  nameWithType: TempVoxelGrid<T>.Item[Int3]
  fullName: piine.Voxels.TempVoxelGrid<T>.Item[piine.Int3]
  type: Property
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: this[]
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 26
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public T this[Int3 position] { get; set; }
    parameters:
    - id: position
      type: piine.Int3
    return:
      type: '{T}'
    content.vb: Public Property Item(position As Int3) As T
  overload: piine.Voxels.TempVoxelGrid`1.Item*
  nameWithType.vb: TempVoxelGrid(Of T).Item(Int3)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Item(piine.Int3)
  name.vb: Item(Int3)
- uid: piine.Voxels.TempVoxelGrid`1.#ctor(System.Span{`0},piine.Int3)
  commentId: M:piine.Voxels.TempVoxelGrid`1.#ctor(System.Span{`0},piine.Int3)
  id: '#ctor(System.Span{`0},piine.Int3)'
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: TempVoxelGrid(Span<T>, Int3)
  nameWithType: TempVoxelGrid<T>.TempVoxelGrid(Span<T>, Int3)
  fullName: piine.Voxels.TempVoxelGrid<T>.TempVoxelGrid(System.Span<T>, piine.Int3)
  type: Constructor
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 28
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public TempVoxelGrid(Span<T> source, Int3 dimensions)
    parameters:
    - id: source
      type: System.Span{{T}}
    - id: dimensions
      type: piine.Int3
    content.vb: Public Sub New(source As Span(Of T), dimensions As Int3)
  overload: piine.Voxels.TempVoxelGrid`1.#ctor*
  nameWithType.vb: TempVoxelGrid(Of T).TempVoxelGrid(Span(Of T), Int3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).TempVoxelGrid(System.Span(Of T), piine.Int3)
  name.vb: TempVoxelGrid(Span(Of T), Int3)
- uid: piine.Voxels.TempVoxelGrid`1.GetVoxel(System.Int32)
  commentId: M:piine.Voxels.TempVoxelGrid`1.GetVoxel(System.Int32)
  id: GetVoxel(System.Int32)
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: GetVoxel(Int32)
  nameWithType: TempVoxelGrid<T>.GetVoxel(Int32)
  fullName: piine.Voxels.TempVoxelGrid<T>.GetVoxel(System.Int32)
  type: Method
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: GetVoxel
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 42
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public T GetVoxel(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
    content.vb: Public Function GetVoxel(index As Integer) As T
  overload: piine.Voxels.TempVoxelGrid`1.GetVoxel*
  nameWithType.vb: TempVoxelGrid(Of T).GetVoxel(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).GetVoxel(System.Int32)
- uid: piine.Voxels.TempVoxelGrid`1.GetVoxel(piine.Int3)
  commentId: M:piine.Voxels.TempVoxelGrid`1.GetVoxel(piine.Int3)
  id: GetVoxel(piine.Int3)
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: GetVoxel(Int3)
  nameWithType: TempVoxelGrid<T>.GetVoxel(Int3)
  fullName: piine.Voxels.TempVoxelGrid<T>.GetVoxel(piine.Int3)
  type: Method
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: GetVoxel
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 44
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public T GetVoxel(Int3 voxel)
    parameters:
    - id: voxel
      type: piine.Int3
    return:
      type: '{T}'
    content.vb: Public Function GetVoxel(voxel As Int3) As T
  overload: piine.Voxels.TempVoxelGrid`1.GetVoxel*
  nameWithType.vb: TempVoxelGrid(Of T).GetVoxel(Int3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).GetVoxel(piine.Int3)
- uid: piine.Voxels.TempVoxelGrid`1.SetVoxel(System.Int32,`0)
  commentId: M:piine.Voxels.TempVoxelGrid`1.SetVoxel(System.Int32,`0)
  id: SetVoxel(System.Int32,`0)
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: SetVoxel(Int32, T)
  nameWithType: TempVoxelGrid<T>.SetVoxel(Int32, T)
  fullName: piine.Voxels.TempVoxelGrid<T>.SetVoxel(System.Int32, T)
  type: Method
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: SetVoxel
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 52
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public void SetVoxel(int index, T data)
    parameters:
    - id: index
      type: System.Int32
    - id: data
      type: '{T}'
    content.vb: Public Sub SetVoxel(index As Integer, data As T)
  overload: piine.Voxels.TempVoxelGrid`1.SetVoxel*
  nameWithType.vb: TempVoxelGrid(Of T).SetVoxel(Int32, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).SetVoxel(System.Int32, T)
- uid: piine.Voxels.TempVoxelGrid`1.SetVoxel(piine.Int3,`0)
  commentId: M:piine.Voxels.TempVoxelGrid`1.SetVoxel(piine.Int3,`0)
  id: SetVoxel(piine.Int3,`0)
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: SetVoxel(Int3, T)
  nameWithType: TempVoxelGrid<T>.SetVoxel(Int3, T)
  fullName: piine.Voxels.TempVoxelGrid<T>.SetVoxel(piine.Int3, T)
  type: Method
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: SetVoxel
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 54
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public void SetVoxel(Int3 voxel, T data)
    parameters:
    - id: voxel
      type: piine.Int3
    - id: data
      type: '{T}'
    content.vb: Public Sub SetVoxel(voxel As Int3, data As T)
  overload: piine.Voxels.TempVoxelGrid`1.SetVoxel*
  nameWithType.vb: TempVoxelGrid(Of T).SetVoxel(Int3, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).SetVoxel(piine.Int3, T)
- uid: piine.Voxels.TempVoxelGrid`1.CalculateIndex(piine.Int3)
  commentId: M:piine.Voxels.TempVoxelGrid`1.CalculateIndex(piine.Int3)
  id: CalculateIndex(piine.Int3)
  parent: piine.Voxels.TempVoxelGrid`1
  langs:
  - csharp
  - vb
  name: CalculateIndex(Int3)
  nameWithType: TempVoxelGrid<T>.CalculateIndex(Int3)
  fullName: piine.Voxels.TempVoxelGrid<T>.CalculateIndex(piine.Int3)
  type: Method
  source:
    remote:
      path: src/Voxels/Volumes/TempVoxelGrid.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: CalculateIndex
    path: src/Voxels/Volumes/TempVoxelGrid.cs
    startLine: 62
  assemblies:
  - piine
  namespace: piine.Voxels
  syntax:
    content: public int CalculateIndex(Int3 voxel)
    parameters:
    - id: voxel
      type: piine.Int3
    return:
      type: System.Int32
    content.vb: Public Function CalculateIndex(voxel As Int3) As Integer
  overload: piine.Voxels.TempVoxelGrid`1.CalculateIndex*
  nameWithType.vb: TempVoxelGrid(Of T).CalculateIndex(Int3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).CalculateIndex(piine.Int3)
references:
- uid: piine.Voxels
  commentId: N:piine.Voxels
  name: piine.Voxels
  nameWithType: piine.Voxels
  fullName: piine.Voxels
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: piine.Voxels.TempVoxelGrid`1.Width*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.Width
  name: Width
  nameWithType: TempVoxelGrid<T>.Width
  fullName: piine.Voxels.TempVoxelGrid<T>.Width
  nameWithType.vb: TempVoxelGrid(Of T).Width
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Width
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: piine.Voxels.TempVoxelGrid`1.Height*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.Height
  name: Height
  nameWithType: TempVoxelGrid<T>.Height
  fullName: piine.Voxels.TempVoxelGrid<T>.Height
  nameWithType.vb: TempVoxelGrid(Of T).Height
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Height
- uid: piine.Voxels.TempVoxelGrid`1.Depth*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.Depth
  name: Depth
  nameWithType: TempVoxelGrid<T>.Depth
  fullName: piine.Voxels.TempVoxelGrid<T>.Depth
  nameWithType.vb: TempVoxelGrid(Of T).Depth
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Depth
- uid: piine.Voxels.TempVoxelGrid`1.Volume*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.Volume
  name: Volume
  nameWithType: TempVoxelGrid<T>.Volume
  fullName: piine.Voxels.TempVoxelGrid<T>.Volume
  nameWithType.vb: TempVoxelGrid(Of T).Volume
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Volume
- uid: piine.Voxels.TempVoxelGrid`1.Dimensions*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.Dimensions
  name: Dimensions
  nameWithType: TempVoxelGrid<T>.Dimensions
  fullName: piine.Voxels.TempVoxelGrid<T>.Dimensions
  nameWithType.vb: TempVoxelGrid(Of T).Dimensions
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Dimensions
- uid: piine.Int3
  commentId: T:piine.Int3
  parent: piine
  name: Int3
  nameWithType: Int3
  fullName: piine.Int3
- uid: piine
  commentId: N:piine
  name: piine
  nameWithType: piine
  fullName: piine
- uid: piine.Voxels.TempVoxelGrid`1.Item*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.Item
  name: Item
  nameWithType: TempVoxelGrid<T>.Item
  fullName: piine.Voxels.TempVoxelGrid<T>.Item
  nameWithType.vb: TempVoxelGrid(Of T).Item
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).Item
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: piine.Voxels.TempVoxelGrid`1.#ctor*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.#ctor
  name: TempVoxelGrid
  nameWithType: TempVoxelGrid<T>.TempVoxelGrid
  fullName: piine.Voxels.TempVoxelGrid<T>.TempVoxelGrid
  nameWithType.vb: TempVoxelGrid(Of T).TempVoxelGrid
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).TempVoxelGrid
- uid: System.Span{{T}}
  commentId: T:System.Span{``0}
  parent: System
  definition: System.Span`1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    nameWithType: Span
    fullName: System.Span
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    nameWithType: Span
    fullName: System.Span
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    nameWithType: Span
    fullName: System.Span
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    nameWithType: Span
    fullName: System.Span
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Voxels.TempVoxelGrid`1.GetVoxel*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.GetVoxel
  name: GetVoxel
  nameWithType: TempVoxelGrid<T>.GetVoxel
  fullName: piine.Voxels.TempVoxelGrid<T>.GetVoxel
  nameWithType.vb: TempVoxelGrid(Of T).GetVoxel
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).GetVoxel
- uid: piine.Voxels.TempVoxelGrid`1.SetVoxel*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.SetVoxel
  name: SetVoxel
  nameWithType: TempVoxelGrid<T>.SetVoxel
  fullName: piine.Voxels.TempVoxelGrid<T>.SetVoxel
  nameWithType.vb: TempVoxelGrid(Of T).SetVoxel
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).SetVoxel
- uid: piine.Voxels.TempVoxelGrid`1.CalculateIndex*
  commentId: Overload:piine.Voxels.TempVoxelGrid`1.CalculateIndex
  name: CalculateIndex
  nameWithType: TempVoxelGrid<T>.CalculateIndex
  fullName: piine.Voxels.TempVoxelGrid<T>.CalculateIndex
  nameWithType.vb: TempVoxelGrid(Of T).CalculateIndex
  fullName.vb: piine.Voxels.TempVoxelGrid(Of T).CalculateIndex
