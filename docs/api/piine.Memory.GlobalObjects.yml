### YamlMime:ManagedReference
items:
- uid: piine.Memory.GlobalObjects
  commentId: T:piine.Memory.GlobalObjects
  id: GlobalObjects
  parent: piine.Memory
  children:
  - piine.Memory.GlobalObjects.Get``1(System.String)
  - piine.Memory.GlobalObjects.HasValue(System.String)
  - piine.Memory.GlobalObjects.Remove(System.String)
  - piine.Memory.GlobalObjects.Set(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: GlobalObjects
  nameWithType: GlobalObjects
  fullName: piine.Memory.GlobalObjects
  type: Class
  source:
    remote:
      path: src/Memory/GlobalObjects.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: GlobalObjects
    path: src/Memory/GlobalObjects.cs
    startLine: 6
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public static class GlobalObjects
    content.vb: Public Module GlobalObjects
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: piine.Memory.GlobalObjects.Set(System.String,System.Object)
  commentId: M:piine.Memory.GlobalObjects.Set(System.String,System.Object)
  id: Set(System.String,System.Object)
  parent: piine.Memory.GlobalObjects
  langs:
  - csharp
  - vb
  name: Set(String, Object)
  nameWithType: GlobalObjects.Set(String, Object)
  fullName: piine.Memory.GlobalObjects.Set(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/Memory/GlobalObjects.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Set
    path: src/Memory/GlobalObjects.cs
    startLine: 10
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public static void Set(string name, object obj)
    parameters:
    - id: name
      type: System.String
    - id: obj
      type: System.Object
    content.vb: Public Shared Sub Set(name As String, obj As Object)
  overload: piine.Memory.GlobalObjects.Set*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Memory.GlobalObjects.Get``1(System.String)
  commentId: M:piine.Memory.GlobalObjects.Get``1(System.String)
  id: Get``1(System.String)
  parent: piine.Memory.GlobalObjects
  langs:
  - csharp
  - vb
  name: Get<T>(String)
  nameWithType: GlobalObjects.Get<T>(String)
  fullName: piine.Memory.GlobalObjects.Get<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Memory/GlobalObjects.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Get
    path: src/Memory/GlobalObjects.cs
    startLine: 16
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public static T Get<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function Get(Of T)(name As String) As T
  overload: piine.Memory.GlobalObjects.Get*
  nameWithType.vb: GlobalObjects.Get(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Memory.GlobalObjects.Get(Of T)(System.String)
  name.vb: Get(Of T)(String)
- uid: piine.Memory.GlobalObjects.Remove(System.String)
  commentId: M:piine.Memory.GlobalObjects.Remove(System.String)
  id: Remove(System.String)
  parent: piine.Memory.GlobalObjects
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: GlobalObjects.Remove(String)
  fullName: piine.Memory.GlobalObjects.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/Memory/GlobalObjects.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: Remove
    path: src/Memory/GlobalObjects.cs
    startLine: 27
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public static bool Remove(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function Remove(name As String) As Boolean
  overload: piine.Memory.GlobalObjects.Remove*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Memory.GlobalObjects.HasValue(System.String)
  commentId: M:piine.Memory.GlobalObjects.HasValue(System.String)
  id: HasValue(System.String)
  parent: piine.Memory.GlobalObjects
  langs:
  - csharp
  - vb
  name: HasValue(String)
  nameWithType: GlobalObjects.HasValue(String)
  fullName: piine.Memory.GlobalObjects.HasValue(System.String)
  type: Method
  source:
    remote:
      path: src/Memory/GlobalObjects.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: HasValue
    path: src/Memory/GlobalObjects.cs
    startLine: 33
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public static bool HasValue(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasValue(name As String) As Boolean
  overload: piine.Memory.GlobalObjects.HasValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: piine.Memory
  commentId: N:piine.Memory
  name: piine.Memory
  nameWithType: piine.Memory
  fullName: piine.Memory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: piine.Memory.GlobalObjects.Set*
  commentId: Overload:piine.Memory.GlobalObjects.Set
  name: Set
  nameWithType: GlobalObjects.Set
  fullName: piine.Memory.GlobalObjects.Set
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: piine.Memory.GlobalObjects.Get*
  commentId: Overload:piine.Memory.GlobalObjects.Get
  name: Get
  nameWithType: GlobalObjects.Get
  fullName: piine.Memory.GlobalObjects.Get
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: piine.Memory.GlobalObjects.Remove*
  commentId: Overload:piine.Memory.GlobalObjects.Remove
  name: Remove
  nameWithType: GlobalObjects.Remove
  fullName: piine.Memory.GlobalObjects.Remove
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: piine.Memory.GlobalObjects.HasValue*
  commentId: Overload:piine.Memory.GlobalObjects.HasValue
  name: HasValue
  nameWithType: GlobalObjects.HasValue
  fullName: piine.Memory.GlobalObjects.HasValue
