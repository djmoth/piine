### YamlMime:ManagedReference
items:
- uid: piine.Byte4
  commentId: T:piine.Byte4
  id: Byte4
  parent: piine
  children:
  - piine.Byte4.#ctor(piine.Byte2,piine.Byte2)
  - piine.Byte4.#ctor(System.Byte)
  - piine.Byte4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  - piine.Byte4.Absolute(piine.Byte4)
  - piine.Byte4.Contains(System.Byte)
  - piine.Byte4.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  - piine.Byte4.Distance(piine.Byte4,piine.Byte4)
  - piine.Byte4.Dot(piine.Byte4,piine.Byte4)
  - piine.Byte4.Equals(piine.Byte4)
  - piine.Byte4.Equals(System.Object)
  - piine.Byte4.GetHashCode
  - piine.Byte4.GetUnsafe(System.Int32)
  - piine.Byte4.Item(System.Int32)
  - piine.Byte4.Length
  - piine.Byte4.LengthSquared
  - piine.Byte4.Normalize(piine.Byte4)
  - piine.Byte4.One
  - piine.Byte4.op_Addition(piine.Byte4,piine.Byte4)
  - piine.Byte4.op_Division(piine.Byte4,System.Single)
  - piine.Byte4.op_Equality(piine.Byte4,piine.Byte4)
  - piine.Byte4.op_Explicit(piine.Double4)~piine.Byte4
  - piine.Byte4.op_Explicit(piine.Float4)~piine.Byte4
  - piine.Byte4.op_Explicit(piine.Int4)~piine.Byte4
  - piine.Byte4.op_Explicit(piine.Long4)~piine.Byte4
  - piine.Byte4.op_Explicit(piine.SByte4)~piine.Byte4
  - piine.Byte4.op_Explicit(piine.Short4)~piine.Byte4
  - piine.Byte4.op_Explicit(piine.UInt4)~piine.Byte4
  - piine.Byte4.op_Explicit(piine.ULong4)~piine.Byte4
  - piine.Byte4.op_Explicit(piine.UShort4)~piine.Byte4
  - piine.Byte4.op_Explicit(System.Numerics.Vector4)~piine.Byte4
  - piine.Byte4.op_GreaterThan(piine.Byte4,piine.Byte4)
  - piine.Byte4.op_GreaterThanOrEqual(piine.Byte4,piine.Byte4)
  - piine.Byte4.op_Implicit(piine.Byte4)~System.Numerics.Vector4
  - piine.Byte4.op_Implicit(piine.Byte4)~System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  - piine.Byte4.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~piine.Byte4
  - piine.Byte4.op_Inequality(piine.Byte4,piine.Byte4)
  - piine.Byte4.op_LessThan(piine.Byte4,piine.Byte4)
  - piine.Byte4.op_LessThanOrEqual(piine.Byte4,piine.Byte4)
  - piine.Byte4.op_Multiply(piine.Byte4,System.Single)
  - piine.Byte4.op_Subtraction(piine.Byte4,piine.Byte4)
  - piine.Byte4.Reverse(piine.Byte4)
  - piine.Byte4.SetUnsafe(System.Int32,System.Byte)
  - piine.Byte4.Size
  - piine.Byte4.Sum
  - piine.Byte4.ToString
  - piine.Byte4.UnitW
  - piine.Byte4.UnitX
  - piine.Byte4.UnitY
  - piine.Byte4.UnitZ
  - piine.Byte4.Volume
  - piine.Byte4.w
  - piine.Byte4.x
  - piine.Byte4.XY
  - piine.Byte4.XYZ
  - piine.Byte4.XZ
  - piine.Byte4.XZY
  - piine.Byte4.y
  - piine.Byte4.YXZ
  - piine.Byte4.YZ
  - piine.Byte4.YZX
  - piine.Byte4.z
  - piine.Byte4.Zero
  - piine.Byte4.ZXY
  - piine.Byte4.ZYX
  langs:
  - csharp
  - vb
  name: Byte4
  nameWithType: Byte4
  fullName: piine.Byte4
  type: Struct
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Byte4
    path: src/Numerics/Vectors/Type4.cs
    startLine: 831
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: >-
      [CLSCompliant(false)]

      public struct Byte4 : IEquatable<Byte4>
    content.vb: >-
      <CLSCompliant(False)>

      Public Structure Byte4
          Implements IEquatable(Of Byte4)
  implements:
  - System.IEquatable{piine.Byte4}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: piine.Byte4.Size
  commentId: F:piine.Byte4.Size
  id: Size
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Byte4.Size
  fullName: piine.Byte4.Size
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Size
    path: src/Numerics/Vectors/Type4.cs
    startLine: 835
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public const int Size = 4
    return:
      type: System.Int32
    content.vb: Public Const Size As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: piine.Byte4.Zero
  commentId: P:piine.Byte4.Zero
  id: Zero
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Byte4.Zero
  fullName: piine.Byte4.Zero
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Zero
    path: src/Numerics/Vectors/Type4.cs
    startLine: 844
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 Zero { get; }
    parameters: []
    return:
      type: piine.Byte4
    content.vb: Public Shared ReadOnly Property Zero As Byte4
  overload: piine.Byte4.Zero*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Byte4.One
  commentId: P:piine.Byte4.One
  id: One
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Byte4.One
  fullName: piine.Byte4.One
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: One
    path: src/Numerics/Vectors/Type4.cs
    startLine: 845
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 One { get; }
    parameters: []
    return:
      type: piine.Byte4
    content.vb: Public Shared ReadOnly Property One As Byte4
  overload: piine.Byte4.One*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Byte4.UnitX
  commentId: P:piine.Byte4.UnitX
  id: UnitX
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Byte4.UnitX
  fullName: piine.Byte4.UnitX
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitX
    path: src/Numerics/Vectors/Type4.cs
    startLine: 846
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 UnitX { get; }
    parameters: []
    return:
      type: piine.Byte4
    content.vb: Public Shared ReadOnly Property UnitX As Byte4
  overload: piine.Byte4.UnitX*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Byte4.UnitY
  commentId: P:piine.Byte4.UnitY
  id: UnitY
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Byte4.UnitY
  fullName: piine.Byte4.UnitY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitY
    path: src/Numerics/Vectors/Type4.cs
    startLine: 847
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 UnitY { get; }
    parameters: []
    return:
      type: piine.Byte4
    content.vb: Public Shared ReadOnly Property UnitY As Byte4
  overload: piine.Byte4.UnitY*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Byte4.UnitZ
  commentId: P:piine.Byte4.UnitZ
  id: UnitZ
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Byte4.UnitZ
  fullName: piine.Byte4.UnitZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 848
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 UnitZ { get; }
    parameters: []
    return:
      type: piine.Byte4
    content.vb: Public Shared ReadOnly Property UnitZ As Byte4
  overload: piine.Byte4.UnitZ*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Byte4.UnitW
  commentId: P:piine.Byte4.UnitW
  id: UnitW
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: UnitW
  nameWithType: Byte4.UnitW
  fullName: piine.Byte4.UnitW
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitW
    path: src/Numerics/Vectors/Type4.cs
    startLine: 849
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 UnitW { get; }
    parameters: []
    return:
      type: piine.Byte4
    content.vb: Public Shared ReadOnly Property UnitW As Byte4
  overload: piine.Byte4.UnitW*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Byte4.x
  commentId: F:piine.Byte4.x
  id: x
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Byte4.x
  fullName: piine.Byte4.x
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: x
    path: src/Numerics/Vectors/Type4.cs
    startLine: 856
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public byte x
    return:
      type: System.Byte
    content.vb: Public x As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.y
  commentId: F:piine.Byte4.y
  id: y
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Byte4.y
  fullName: piine.Byte4.y
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: y
    path: src/Numerics/Vectors/Type4.cs
    startLine: 858
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public byte y
    return:
      type: System.Byte
    content.vb: Public y As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.z
  commentId: F:piine.Byte4.z
  id: z
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: z
  nameWithType: Byte4.z
  fullName: piine.Byte4.z
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: z
    path: src/Numerics/Vectors/Type4.cs
    startLine: 860
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public byte z
    return:
      type: System.Byte
    content.vb: Public z As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.w
  commentId: F:piine.Byte4.w
  id: w
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: w
  nameWithType: Byte4.w
  fullName: piine.Byte4.w
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: w
    path: src/Numerics/Vectors/Type4.cs
    startLine: 862
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public byte w
    return:
      type: System.Byte
    content.vb: Public w As Byte
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.XY
  commentId: P:piine.Byte4.XY
  id: XY
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: XY
  nameWithType: Byte4.XY
  fullName: piine.Byte4.XY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XY
    path: src/Numerics/Vectors/Type4.cs
    startLine: 865
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte2 XY { get; }
    parameters: []
    return:
      type: piine.Byte2
    content.vb: Public ReadOnly Property XY As Byte2
  overload: piine.Byte4.XY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Byte4.XZ
  commentId: P:piine.Byte4.XZ
  id: XZ
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: XZ
  nameWithType: Byte4.XZ
  fullName: piine.Byte4.XZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 866
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte2 XZ { get; }
    parameters: []
    return:
      type: piine.Byte2
    content.vb: Public ReadOnly Property XZ As Byte2
  overload: piine.Byte4.XZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Byte4.YZ
  commentId: P:piine.Byte4.YZ
  id: YZ
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: YZ
  nameWithType: Byte4.YZ
  fullName: piine.Byte4.YZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: YZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 867
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte2 YZ { get; }
    parameters: []
    return:
      type: piine.Byte2
    content.vb: Public ReadOnly Property YZ As Byte2
  overload: piine.Byte4.YZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Byte4.XYZ
  commentId: P:piine.Byte4.XYZ
  id: XYZ
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: XYZ
  nameWithType: Byte4.XYZ
  fullName: piine.Byte4.XYZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XYZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 869
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte3 XYZ { get; }
    parameters: []
    return:
      type: piine.Byte3
    content.vb: Public ReadOnly Property XYZ As Byte3
  overload: piine.Byte4.XYZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Byte4.XZY
  commentId: P:piine.Byte4.XZY
  id: XZY
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: XZY
  nameWithType: Byte4.XZY
  fullName: piine.Byte4.XZY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XZY
    path: src/Numerics/Vectors/Type4.cs
    startLine: 870
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte3 XZY { get; }
    parameters: []
    return:
      type: piine.Byte3
    content.vb: Public ReadOnly Property XZY As Byte3
  overload: piine.Byte4.XZY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Byte4.YXZ
  commentId: P:piine.Byte4.YXZ
  id: YXZ
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: YXZ
  nameWithType: Byte4.YXZ
  fullName: piine.Byte4.YXZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: YXZ
    path: src/Numerics/Vectors/Type4.cs
    startLine: 871
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte3 YXZ { get; }
    parameters: []
    return:
      type: piine.Byte3
    content.vb: Public ReadOnly Property YXZ As Byte3
  overload: piine.Byte4.YXZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Byte4.YZX
  commentId: P:piine.Byte4.YZX
  id: YZX
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: YZX
  nameWithType: Byte4.YZX
  fullName: piine.Byte4.YZX
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: YZX
    path: src/Numerics/Vectors/Type4.cs
    startLine: 872
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte3 YZX { get; }
    parameters: []
    return:
      type: piine.Byte3
    content.vb: Public ReadOnly Property YZX As Byte3
  overload: piine.Byte4.YZX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Byte4.ZXY
  commentId: P:piine.Byte4.ZXY
  id: ZXY
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: ZXY
  nameWithType: Byte4.ZXY
  fullName: piine.Byte4.ZXY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: ZXY
    path: src/Numerics/Vectors/Type4.cs
    startLine: 873
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte3 ZXY { get; }
    parameters: []
    return:
      type: piine.Byte3
    content.vb: Public ReadOnly Property ZXY As Byte3
  overload: piine.Byte4.ZXY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Byte4.ZYX
  commentId: P:piine.Byte4.ZYX
  id: ZYX
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: ZYX
  nameWithType: Byte4.ZYX
  fullName: piine.Byte4.ZYX
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: ZYX
    path: src/Numerics/Vectors/Type4.cs
    startLine: 874
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte3 ZYX { get; }
    parameters: []
    return:
      type: piine.Byte3
    content.vb: Public ReadOnly Property ZYX As Byte3
  overload: piine.Byte4.ZYX*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Byte4.Item(System.Int32)
  commentId: P:piine.Byte4.Item(System.Int32)
  id: Item(System.Int32)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Byte4.Item[Int32]
  fullName: piine.Byte4.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: this[]
    path: src/Numerics/Vectors/Type4.cs
    startLine: 876
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public byte this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Byte
    content.vb: Public Property Item(index As Integer) As Byte
  overload: piine.Byte4.Item*
  nameWithType.vb: Byte4.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: piine.Byte4.Item(System.Int32)
  name.vb: Item(Int32)
- uid: piine.Byte4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  commentId: M:piine.Byte4.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)
  id: '#ctor(System.Byte,System.Byte,System.Byte,System.Byte)'
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Byte4(Byte, Byte, Byte, Byte)
  nameWithType: Byte4.Byte4(Byte, Byte, Byte, Byte)
  fullName: piine.Byte4.Byte4(System.Byte, System.Byte, System.Byte, System.Byte)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Vectors/Type4.cs
    startLine: 894
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte4(byte x, byte y, byte z, byte w)
    parameters:
    - id: x
      type: System.Byte
    - id: y
      type: System.Byte
    - id: z
      type: System.Byte
    - id: w
      type: System.Byte
    content.vb: Public Sub New(x As Byte, y As Byte, z As Byte, w As Byte)
  overload: piine.Byte4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.#ctor(piine.Byte2,piine.Byte2)
  commentId: M:piine.Byte4.#ctor(piine.Byte2,piine.Byte2)
  id: '#ctor(piine.Byte2,piine.Byte2)'
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Byte4(Byte2, Byte2)
  nameWithType: Byte4.Byte4(Byte2, Byte2)
  fullName: piine.Byte4.Byte4(piine.Byte2, piine.Byte2)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Vectors/Type4.cs
    startLine: 902
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte4(Byte2 leftPart, Byte2 rightPart)
    parameters:
    - id: leftPart
      type: piine.Byte2
    - id: rightPart
      type: piine.Byte2
    content.vb: Public Sub New(leftPart As Byte2, rightPart As Byte2)
  overload: piine.Byte4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.#ctor(System.Byte)
  commentId: M:piine.Byte4.#ctor(System.Byte)
  id: '#ctor(System.Byte)'
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Byte4(Byte)
  nameWithType: Byte4.Byte4(Byte)
  fullName: piine.Byte4.Byte4(System.Byte)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Vectors/Type4.cs
    startLine: 910
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Byte4(byte all)
    parameters:
    - id: all
      type: System.Byte
    content.vb: Public Sub New(all As Byte)
  overload: piine.Byte4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.GetUnsafe(System.Int32)
  commentId: M:piine.Byte4.GetUnsafe(System.Int32)
  id: GetUnsafe(System.Int32)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: GetUnsafe(Int32)
  nameWithType: Byte4.GetUnsafe(Int32)
  fullName: piine.Byte4.GetUnsafe(System.Int32)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: GetUnsafe
    path: src/Numerics/Vectors/Type4.cs
    startLine: 918
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public byte GetUnsafe(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Byte
    content.vb: Public Function GetUnsafe(index As Integer) As Byte
  overload: piine.Byte4.GetUnsafe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.SetUnsafe(System.Int32,System.Byte)
  commentId: M:piine.Byte4.SetUnsafe(System.Int32,System.Byte)
  id: SetUnsafe(System.Int32,System.Byte)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: SetUnsafe(Int32, Byte)
  nameWithType: Byte4.SetUnsafe(Int32, Byte)
  fullName: piine.Byte4.SetUnsafe(System.Int32, System.Byte)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: SetUnsafe
    path: src/Numerics/Vectors/Type4.cs
    startLine: 920
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public void SetUnsafe(int index, byte value)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Byte
    content.vb: Public Sub SetUnsafe(index As Integer, value As Byte)
  overload: piine.Byte4.SetUnsafe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.Normalize(piine.Byte4)
  commentId: M:piine.Byte4.Normalize(piine.Byte4)
  id: Normalize(piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Normalize(Byte4)
  nameWithType: Byte4.Normalize(Byte4)
  fullName: piine.Byte4.Normalize(piine.Byte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Normalize
    path: src/Numerics/Vectors/Type4.cs
    startLine: 922
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 Normalize(Byte4 v)
    parameters:
    - id: v
      type: piine.Byte4
    return:
      type: piine.Byte4
    content.vb: Public Shared Function Normalize(v As Byte4) As Byte4
  overload: piine.Byte4.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.Absolute(piine.Byte4)
  commentId: M:piine.Byte4.Absolute(piine.Byte4)
  id: Absolute(piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Absolute(Byte4)
  nameWithType: Byte4.Absolute(Byte4)
  fullName: piine.Byte4.Absolute(piine.Byte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Absolute
    path: src/Numerics/Vectors/Type4.cs
    startLine: 934
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 Absolute(Byte4 v)
    parameters:
    - id: v
      type: piine.Byte4
    return:
      type: piine.Byte4
    content.vb: Public Shared Function Absolute(v As Byte4) As Byte4
  overload: piine.Byte4.Absolute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.Distance(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.Distance(piine.Byte4,piine.Byte4)
  id: Distance(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Distance(Byte4, Byte4)
  nameWithType: Byte4.Distance(Byte4, Byte4)
  fullName: piine.Byte4.Distance(piine.Byte4, piine.Byte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Distance
    path: src/Numerics/Vectors/Type4.cs
    startLine: 936
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static float Distance(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: System.Single
    content.vb: Public Shared Function Distance(a As Byte4, b As Byte4) As Single
  overload: piine.Byte4.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.Dot(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.Dot(piine.Byte4,piine.Byte4)
  id: Dot(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Dot(Byte4, Byte4)
  nameWithType: Byte4.Dot(Byte4, Byte4)
  fullName: piine.Byte4.Dot(piine.Byte4, piine.Byte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Dot
    path: src/Numerics/Vectors/Type4.cs
    startLine: 938
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static float Dot(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: System.Single
    content.vb: Public Shared Function Dot(a As Byte4, b As Byte4) As Single
  overload: piine.Byte4.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.Reverse(piine.Byte4)
  commentId: M:piine.Byte4.Reverse(piine.Byte4)
  id: Reverse(piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Reverse(Byte4)
  nameWithType: Byte4.Reverse(Byte4)
  fullName: piine.Byte4.Reverse(piine.Byte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Reverse
    path: src/Numerics/Vectors/Type4.cs
    startLine: 940
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 Reverse(Byte4 v)
    parameters:
    - id: v
      type: piine.Byte4
    return:
      type: piine.Byte4
    content.vb: Public Shared Function Reverse(v As Byte4) As Byte4
  overload: piine.Byte4.Reverse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.Sum
  commentId: M:piine.Byte4.Sum
  id: Sum
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Sum()
  nameWithType: Byte4.Sum()
  fullName: piine.Byte4.Sum()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Sum
    path: src/Numerics/Vectors/Type4.cs
    startLine: 942
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public int Sum()
    return:
      type: System.Int32
    content.vb: Public Function Sum As Integer
  overload: piine.Byte4.Sum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.Volume
  commentId: M:piine.Byte4.Volume
  id: Volume
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Volume()
  nameWithType: Byte4.Volume()
  fullName: piine.Byte4.Volume()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Volume
    path: src/Numerics/Vectors/Type4.cs
    startLine: 944
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public int Volume()
    return:
      type: System.Int32
    content.vb: Public Function Volume As Integer
  overload: piine.Byte4.Volume*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.Length
  commentId: M:piine.Byte4.Length
  id: Length
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Length()
  nameWithType: Byte4.Length()
  fullName: piine.Byte4.Length()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Length
    path: src/Numerics/Vectors/Type4.cs
    startLine: 946
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public float Length()
    return:
      type: System.Single
    content.vb: Public Function Length As Single
  overload: piine.Byte4.Length*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.LengthSquared
  commentId: M:piine.Byte4.LengthSquared
  id: LengthSquared
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: LengthSquared()
  nameWithType: Byte4.LengthSquared()
  fullName: piine.Byte4.LengthSquared()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: LengthSquared
    path: src/Numerics/Vectors/Type4.cs
    startLine: 948
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public float LengthSquared()
    return:
      type: System.Single
    content.vb: Public Function LengthSquared As Single
  overload: piine.Byte4.LengthSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.Contains(System.Byte)
  commentId: M:piine.Byte4.Contains(System.Byte)
  id: Contains(System.Byte)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Contains(Byte)
  nameWithType: Byte4.Contains(Byte)
  fullName: piine.Byte4.Contains(System.Byte)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Contains
    path: src/Numerics/Vectors/Type4.cs
    startLine: 950
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public bool Contains(byte value)
    parameters:
    - id: value
      type: System.Byte
    return:
      type: System.Boolean
    content.vb: Public Function Contains(value As Byte) As Boolean
  overload: piine.Byte4.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.op_Equality(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.op_Equality(piine.Byte4,piine.Byte4)
  id: op_Equality(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Equality(Byte4, Byte4)
  nameWithType: Byte4.Equality(Byte4, Byte4)
  fullName: piine.Byte4.Equality(piine.Byte4, piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Equality
    path: src/Numerics/Vectors/Type4.cs
    startLine: 952
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator ==(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Byte4, b As Byte4) As Boolean
  overload: piine.Byte4.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.op_Inequality(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.op_Inequality(piine.Byte4,piine.Byte4)
  id: op_Inequality(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Inequality(Byte4, Byte4)
  nameWithType: Byte4.Inequality(Byte4, Byte4)
  fullName: piine.Byte4.Inequality(piine.Byte4, piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Inequality
    path: src/Numerics/Vectors/Type4.cs
    startLine: 954
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator !=(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Byte4, b As Byte4) As Boolean
  overload: piine.Byte4.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.op_Addition(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.op_Addition(piine.Byte4,piine.Byte4)
  id: op_Addition(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Addition(Byte4, Byte4)
  nameWithType: Byte4.Addition(Byte4, Byte4)
  fullName: piine.Byte4.Addition(piine.Byte4, piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Addition
    path: src/Numerics/Vectors/Type4.cs
    startLine: 956
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 operator +(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: piine.Byte4
    content.vb: Public Shared Operator +(a As Byte4, b As Byte4) As Byte4
  overload: piine.Byte4.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.op_Subtraction(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.op_Subtraction(piine.Byte4,piine.Byte4)
  id: op_Subtraction(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Subtraction(Byte4, Byte4)
  nameWithType: Byte4.Subtraction(Byte4, Byte4)
  fullName: piine.Byte4.Subtraction(piine.Byte4, piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Subtraction
    path: src/Numerics/Vectors/Type4.cs
    startLine: 958
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 operator -(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: piine.Byte4
    content.vb: Public Shared Operator -(a As Byte4, b As Byte4) As Byte4
  overload: piine.Byte4.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.op_Multiply(piine.Byte4,System.Single)
  commentId: M:piine.Byte4.op_Multiply(piine.Byte4,System.Single)
  id: op_Multiply(piine.Byte4,System.Single)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Multiply(Byte4, Single)
  nameWithType: Byte4.Multiply(Byte4, Single)
  fullName: piine.Byte4.Multiply(piine.Byte4, System.Single)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Multiply
    path: src/Numerics/Vectors/Type4.cs
    startLine: 961
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 operator *(Byte4 a, float b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: System.Single
    return:
      type: piine.Byte4
    content.vb: Public Shared Operator *(a As Byte4, b As Single) As Byte4
  overload: piine.Byte4.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.op_Division(piine.Byte4,System.Single)
  commentId: M:piine.Byte4.op_Division(piine.Byte4,System.Single)
  id: op_Division(piine.Byte4,System.Single)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Division(Byte4, Single)
  nameWithType: Byte4.Division(Byte4, Single)
  fullName: piine.Byte4.Division(piine.Byte4, System.Single)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Division
    path: src/Numerics/Vectors/Type4.cs
    startLine: 963
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Byte4 operator /(Byte4 a, float b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: System.Single
    return:
      type: piine.Byte4
    content.vb: Public Shared Operator /(a As Byte4, b As Single) As Byte4
  overload: piine.Byte4.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.op_GreaterThan(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.op_GreaterThan(piine.Byte4,piine.Byte4)
  id: op_GreaterThan(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: GreaterThan(Byte4, Byte4)
  nameWithType: Byte4.GreaterThan(Byte4, Byte4)
  fullName: piine.Byte4.GreaterThan(piine.Byte4, piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_GreaterThan
    path: src/Numerics/Vectors/Type4.cs
    startLine: 965
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator>(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator>(a As Byte4, b As Byte4) As Boolean
  overload: piine.Byte4.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.op_LessThan(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.op_LessThan(piine.Byte4,piine.Byte4)
  id: op_LessThan(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: LessThan(Byte4, Byte4)
  nameWithType: Byte4.LessThan(Byte4, Byte4)
  fullName: piine.Byte4.LessThan(piine.Byte4, piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_LessThan
    path: src/Numerics/Vectors/Type4.cs
    startLine: 967
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator <(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(a As Byte4, b As Byte4) As Boolean
  overload: piine.Byte4.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.op_GreaterThanOrEqual(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.op_GreaterThanOrEqual(piine.Byte4,piine.Byte4)
  id: op_GreaterThanOrEqual(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Byte4, Byte4)
  nameWithType: Byte4.GreaterThanOrEqual(Byte4, Byte4)
  fullName: piine.Byte4.GreaterThanOrEqual(piine.Byte4, piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_GreaterThanOrEqual
    path: src/Numerics/Vectors/Type4.cs
    startLine: 969
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator >=(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(a As Byte4, b As Byte4) As Boolean
  overload: piine.Byte4.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.op_LessThanOrEqual(piine.Byte4,piine.Byte4)
  commentId: M:piine.Byte4.op_LessThanOrEqual(piine.Byte4,piine.Byte4)
  id: op_LessThanOrEqual(piine.Byte4,piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Byte4, Byte4)
  nameWithType: Byte4.LessThanOrEqual(Byte4, Byte4)
  fullName: piine.Byte4.LessThanOrEqual(piine.Byte4, piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_LessThanOrEqual
    path: src/Numerics/Vectors/Type4.cs
    startLine: 971
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator <=(Byte4 a, Byte4 b)
    parameters:
    - id: a
      type: piine.Byte4
    - id: b
      type: piine.Byte4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(a As Byte4, b As Byte4) As Boolean
  overload: piine.Byte4.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Byte4.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  commentId: M:piine.Byte4.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  id: Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Deconstruct(out Byte, out Byte, out Byte, out Byte)
  nameWithType: Byte4.Deconstruct(out Byte, out Byte, out Byte, out Byte)
  fullName: piine.Byte4.Deconstruct(out System.Byte, out System.Byte, out System.Byte, out System.Byte)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Deconstruct
    path: src/Numerics/Vectors/Type4.cs
    startLine: 973
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public void Deconstruct(out byte x, out byte y, out byte z, out byte w)
    parameters:
    - id: x
      type: System.Byte
    - id: y
      type: System.Byte
    - id: z
      type: System.Byte
    - id: w
      type: System.Byte
    content.vb: Public Sub Deconstruct(ByRef x As Byte, ByRef y As Byte, ByRef z As Byte, ByRef w As Byte)
  overload: piine.Byte4.Deconstruct*
  nameWithType.vb: Byte4.Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte, ByRef Byte)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Byte4.Deconstruct(ByRef System.Byte, ByRef System.Byte, ByRef System.Byte, ByRef System.Byte)
  name.vb: Deconstruct(ByRef Byte, ByRef Byte, ByRef Byte, ByRef Byte)
- uid: piine.Byte4.ToString
  commentId: M:piine.Byte4.ToString
  id: ToString
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Byte4.ToString()
  fullName: piine.Byte4.ToString()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: ToString
    path: src/Numerics/Vectors/Type4.cs
    startLine: 981
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: piine.Byte4.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.Byte4.Equals(piine.Byte4)
  commentId: M:piine.Byte4.Equals(piine.Byte4)
  id: Equals(piine.Byte4)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Equals(Byte4)
  nameWithType: Byte4.Equals(Byte4)
  fullName: piine.Byte4.Equals(piine.Byte4)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Equals
    path: src/Numerics/Vectors/Type4.cs
    startLine: 983
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public bool Equals(Byte4 other)
    parameters:
    - id: other
      type: piine.Byte4
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Byte4) As Boolean
  overload: piine.Byte4.Equals*
  implements:
  - System.IEquatable{piine.Byte4}.Equals(piine.Byte4)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Byte4.Equals(System.Object)
  commentId: M:piine.Byte4.Equals(System.Object)
  id: Equals(System.Object)
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Byte4.Equals(Object)
  fullName: piine.Byte4.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Equals
    path: src/Numerics/Vectors/Type4.cs
    startLine: 985
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: piine.Byte4.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.Byte4.GetHashCode
  commentId: M:piine.Byte4.GetHashCode
  id: GetHashCode
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Byte4.GetHashCode()
  fullName: piine.Byte4.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: GetHashCode
    path: src/Numerics/Vectors/Type4.cs
    startLine: 995
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: piine.Byte4.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.Byte4.op_Implicit(piine.Byte4)~System.Numerics.Vector4
  commentId: M:piine.Byte4.op_Implicit(piine.Byte4)~System.Numerics.Vector4
  id: op_Implicit(piine.Byte4)~System.Numerics.Vector4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Implicit(Byte4 to Vector4)
  nameWithType: Byte4.Implicit(Byte4 to Vector4)
  fullName: piine.Byte4.Implicit(piine.Byte4 to System.Numerics.Vector4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 999
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Vector4(Byte4 v)
    parameters:
    - id: v
      type: piine.Byte4
    return:
      type: System.Numerics.Vector4
    content.vb: Public Shared Widening Operator CType(v As Byte4) As Vector4
  overload: piine.Byte4.op_Implicit*
  nameWithType.vb: Byte4.Widening(Byte4 to Vector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Widening(piine.Byte4 to System.Numerics.Vector4)
  name.vb: Widening(Byte4 to Vector4)
- uid: piine.Byte4.op_Explicit(System.Numerics.Vector4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(System.Numerics.Vector4)~piine.Byte4
  id: op_Explicit(System.Numerics.Vector4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(Vector4 to Byte4)
  nameWithType: Byte4.Explicit(Vector4 to Byte4)
  fullName: piine.Byte4.Explicit(System.Numerics.Vector4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1000
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(Vector4 v)
    parameters:
    - id: v
      type: System.Numerics.Vector4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As Vector4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(Vector4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(System.Numerics.Vector4 to piine.Byte4)
  name.vb: Narrowing(Vector4 to Byte4)
- uid: piine.Byte4.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~piine.Byte4
  commentId: M:piine.Byte4.op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~piine.Byte4
  id: op_Implicit(System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte})~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Implicit((Byte x, Byte y, Byte z, Byte w) to Byte4)
  nameWithType: Byte4.Implicit((Byte x, Byte y, Byte z, Byte w) to Byte4)
  fullName: piine.Byte4.Implicit(System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte> to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1003
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Byte4((byte x, byte y, byte z, byte w)v)
    parameters:
    - id: v
      type: System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
    return:
      type: piine.Byte4
    content.vb: Public Shared Widening Operator CType(v As(x As Byte, y As Byte, z As Byte, w As Byte)) As Byte4
  overload: piine.Byte4.op_Implicit*
  nameWithType.vb: Byte4.Widening((x As Byte, y As Byte, z As Byte, w As Byte) to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Widening(System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte) to piine.Byte4)
  name.vb: Widening((x As Byte, y As Byte, z As Byte, w As Byte) to Byte4)
- uid: piine.Byte4.op_Implicit(piine.Byte4)~System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  commentId: M:piine.Byte4.op_Implicit(piine.Byte4)~System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  id: op_Implicit(piine.Byte4)~System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Implicit(Byte4 to (Byte, Byte, Byte, Byte))
  nameWithType: Byte4.Implicit(Byte4 to (Byte, Byte, Byte, Byte))
  fullName: piine.Byte4.Implicit(piine.Byte4 to System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte>)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1005
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator (byte, byte, byte, byte)(Byte4 v)
    parameters:
    - id: v
      type: piine.Byte4
    return:
      type: System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
    content.vb: Public Shared Widening Operator CType(v As Byte4) As(Byte, Byte, Byte, Byte)
  overload: piine.Byte4.op_Implicit*
  nameWithType.vb: Byte4.Widening(Byte4 to (Byte, Byte, Byte, Byte))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Widening(piine.Byte4 to System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte))
  name.vb: Widening(Byte4 to (Byte, Byte, Byte, Byte))
- uid: piine.Byte4.op_Explicit(piine.Float4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(piine.Float4)~piine.Byte4
  id: op_Explicit(piine.Float4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(Float4 to Byte4)
  nameWithType: Byte4.Explicit(Float4 to Byte4)
  fullName: piine.Byte4.Explicit(piine.Float4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1009
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(Float4 v)
    parameters:
    - id: v
      type: piine.Float4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As Float4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(Float4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(piine.Float4 to piine.Byte4)
  name.vb: Narrowing(Float4 to Byte4)
- uid: piine.Byte4.op_Explicit(piine.Double4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(piine.Double4)~piine.Byte4
  id: op_Explicit(piine.Double4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(Double4 to Byte4)
  nameWithType: Byte4.Explicit(Double4 to Byte4)
  fullName: piine.Byte4.Explicit(piine.Double4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1012
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(Double4 v)
    parameters:
    - id: v
      type: piine.Double4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As Double4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(Double4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(piine.Double4 to piine.Byte4)
  name.vb: Narrowing(Double4 to Byte4)
- uid: piine.Byte4.op_Explicit(piine.Int4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(piine.Int4)~piine.Byte4
  id: op_Explicit(piine.Int4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(Int4 to Byte4)
  nameWithType: Byte4.Explicit(Int4 to Byte4)
  fullName: piine.Byte4.Explicit(piine.Int4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1015
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(Int4 v)
    parameters:
    - id: v
      type: piine.Int4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As Int4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(Int4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(piine.Int4 to piine.Byte4)
  name.vb: Narrowing(Int4 to Byte4)
- uid: piine.Byte4.op_Explicit(piine.UInt4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(piine.UInt4)~piine.Byte4
  id: op_Explicit(piine.UInt4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(UInt4 to Byte4)
  nameWithType: Byte4.Explicit(UInt4 to Byte4)
  fullName: piine.Byte4.Explicit(piine.UInt4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1018
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(UInt4 v)
    parameters:
    - id: v
      type: piine.UInt4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As UInt4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(UInt4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(piine.UInt4 to piine.Byte4)
  name.vb: Narrowing(UInt4 to Byte4)
- uid: piine.Byte4.op_Explicit(piine.SByte4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(piine.SByte4)~piine.Byte4
  id: op_Explicit(piine.SByte4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(SByte4 to Byte4)
  nameWithType: Byte4.Explicit(SByte4 to Byte4)
  fullName: piine.Byte4.Explicit(piine.SByte4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1021
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(SByte4 v)
    parameters:
    - id: v
      type: piine.SByte4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As SByte4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(SByte4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(piine.SByte4 to piine.Byte4)
  name.vb: Narrowing(SByte4 to Byte4)
- uid: piine.Byte4.op_Explicit(piine.Short4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(piine.Short4)~piine.Byte4
  id: op_Explicit(piine.Short4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(Short4 to Byte4)
  nameWithType: Byte4.Explicit(Short4 to Byte4)
  fullName: piine.Byte4.Explicit(piine.Short4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1024
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(Short4 v)
    parameters:
    - id: v
      type: piine.Short4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As Short4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(Short4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(piine.Short4 to piine.Byte4)
  name.vb: Narrowing(Short4 to Byte4)
- uid: piine.Byte4.op_Explicit(piine.UShort4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(piine.UShort4)~piine.Byte4
  id: op_Explicit(piine.UShort4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(UShort4 to Byte4)
  nameWithType: Byte4.Explicit(UShort4 to Byte4)
  fullName: piine.Byte4.Explicit(piine.UShort4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1027
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(UShort4 v)
    parameters:
    - id: v
      type: piine.UShort4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As UShort4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(UShort4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(piine.UShort4 to piine.Byte4)
  name.vb: Narrowing(UShort4 to Byte4)
- uid: piine.Byte4.op_Explicit(piine.Long4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(piine.Long4)~piine.Byte4
  id: op_Explicit(piine.Long4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(Long4 to Byte4)
  nameWithType: Byte4.Explicit(Long4 to Byte4)
  fullName: piine.Byte4.Explicit(piine.Long4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1030
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(Long4 v)
    parameters:
    - id: v
      type: piine.Long4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As Long4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(Long4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(piine.Long4 to piine.Byte4)
  name.vb: Narrowing(Long4 to Byte4)
- uid: piine.Byte4.op_Explicit(piine.ULong4)~piine.Byte4
  commentId: M:piine.Byte4.op_Explicit(piine.ULong4)~piine.Byte4
  id: op_Explicit(piine.ULong4)~piine.Byte4
  parent: piine.Byte4
  langs:
  - csharp
  - vb
  name: Explicit(ULong4 to Byte4)
  nameWithType: Byte4.Explicit(ULong4 to Byte4)
  fullName: piine.Byte4.Explicit(piine.ULong4 to piine.Byte4)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type4.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type4.cs
    startLine: 1033
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Byte4(ULong4 v)
    parameters:
    - id: v
      type: piine.ULong4
    return:
      type: piine.Byte4
    content.vb: Public Shared Narrowing Operator CType(v As ULong4) As Byte4
  overload: piine.Byte4.op_Explicit*
  nameWithType.vb: Byte4.Narrowing(ULong4 to Byte4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Byte4.Narrowing(piine.ULong4 to piine.Byte4)
  name.vb: Narrowing(ULong4 to Byte4)
references:
- uid: piine
  commentId: N:piine
  name: piine
  nameWithType: piine
  fullName: piine
- uid: System.IEquatable{piine.Byte4}
  commentId: T:System.IEquatable{piine.Byte4}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Byte4>
  nameWithType: IEquatable<Byte4>
  fullName: System.IEquatable<piine.Byte4>
  nameWithType.vb: IEquatable(Of Byte4)
  fullName.vb: System.IEquatable(Of piine.Byte4)
  name.vb: IEquatable(Of Byte4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: piine.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: piine.Byte4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: piine.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: piine.Byte4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: piine.Byte4.Zero*
  commentId: Overload:piine.Byte4.Zero
  name: Zero
  nameWithType: Byte4.Zero
  fullName: piine.Byte4.Zero
- uid: piine.Byte4
  commentId: T:piine.Byte4
  parent: piine
  name: Byte4
  nameWithType: Byte4
  fullName: piine.Byte4
- uid: piine.Byte4.One*
  commentId: Overload:piine.Byte4.One
  name: One
  nameWithType: Byte4.One
  fullName: piine.Byte4.One
- uid: piine.Byte4.UnitX*
  commentId: Overload:piine.Byte4.UnitX
  name: UnitX
  nameWithType: Byte4.UnitX
  fullName: piine.Byte4.UnitX
- uid: piine.Byte4.UnitY*
  commentId: Overload:piine.Byte4.UnitY
  name: UnitY
  nameWithType: Byte4.UnitY
  fullName: piine.Byte4.UnitY
- uid: piine.Byte4.UnitZ*
  commentId: Overload:piine.Byte4.UnitZ
  name: UnitZ
  nameWithType: Byte4.UnitZ
  fullName: piine.Byte4.UnitZ
- uid: piine.Byte4.UnitW*
  commentId: Overload:piine.Byte4.UnitW
  name: UnitW
  nameWithType: Byte4.UnitW
  fullName: piine.Byte4.UnitW
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: piine.Byte4.XY*
  commentId: Overload:piine.Byte4.XY
  name: XY
  nameWithType: Byte4.XY
  fullName: piine.Byte4.XY
- uid: piine.Byte2
  commentId: T:piine.Byte2
  parent: piine
  name: Byte2
  nameWithType: Byte2
  fullName: piine.Byte2
- uid: piine.Byte4.XZ*
  commentId: Overload:piine.Byte4.XZ
  name: XZ
  nameWithType: Byte4.XZ
  fullName: piine.Byte4.XZ
- uid: piine.Byte4.YZ*
  commentId: Overload:piine.Byte4.YZ
  name: YZ
  nameWithType: Byte4.YZ
  fullName: piine.Byte4.YZ
- uid: piine.Byte4.XYZ*
  commentId: Overload:piine.Byte4.XYZ
  name: XYZ
  nameWithType: Byte4.XYZ
  fullName: piine.Byte4.XYZ
- uid: piine.Byte3
  commentId: T:piine.Byte3
  parent: piine
  name: Byte3
  nameWithType: Byte3
  fullName: piine.Byte3
- uid: piine.Byte4.XZY*
  commentId: Overload:piine.Byte4.XZY
  name: XZY
  nameWithType: Byte4.XZY
  fullName: piine.Byte4.XZY
- uid: piine.Byte4.YXZ*
  commentId: Overload:piine.Byte4.YXZ
  name: YXZ
  nameWithType: Byte4.YXZ
  fullName: piine.Byte4.YXZ
- uid: piine.Byte4.YZX*
  commentId: Overload:piine.Byte4.YZX
  name: YZX
  nameWithType: Byte4.YZX
  fullName: piine.Byte4.YZX
- uid: piine.Byte4.ZXY*
  commentId: Overload:piine.Byte4.ZXY
  name: ZXY
  nameWithType: Byte4.ZXY
  fullName: piine.Byte4.ZXY
- uid: piine.Byte4.ZYX*
  commentId: Overload:piine.Byte4.ZYX
  name: ZYX
  nameWithType: Byte4.ZYX
  fullName: piine.Byte4.ZYX
- uid: piine.Byte4.Item*
  commentId: Overload:piine.Byte4.Item
  name: Item
  nameWithType: Byte4.Item
  fullName: piine.Byte4.Item
- uid: piine.Byte4.#ctor*
  commentId: Overload:piine.Byte4.#ctor
  name: Byte4
  nameWithType: Byte4.Byte4
  fullName: piine.Byte4.Byte4
- uid: piine.Byte4.GetUnsafe*
  commentId: Overload:piine.Byte4.GetUnsafe
  name: GetUnsafe
  nameWithType: Byte4.GetUnsafe
  fullName: piine.Byte4.GetUnsafe
- uid: piine.Byte4.SetUnsafe*
  commentId: Overload:piine.Byte4.SetUnsafe
  name: SetUnsafe
  nameWithType: Byte4.SetUnsafe
  fullName: piine.Byte4.SetUnsafe
- uid: piine.Byte4.Normalize*
  commentId: Overload:piine.Byte4.Normalize
  name: Normalize
  nameWithType: Byte4.Normalize
  fullName: piine.Byte4.Normalize
- uid: piine.Byte4.Absolute*
  commentId: Overload:piine.Byte4.Absolute
  name: Absolute
  nameWithType: Byte4.Absolute
  fullName: piine.Byte4.Absolute
- uid: piine.Byte4.Distance*
  commentId: Overload:piine.Byte4.Distance
  name: Distance
  nameWithType: Byte4.Distance
  fullName: piine.Byte4.Distance
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: piine.Byte4.Dot*
  commentId: Overload:piine.Byte4.Dot
  name: Dot
  nameWithType: Byte4.Dot
  fullName: piine.Byte4.Dot
- uid: piine.Byte4.Reverse*
  commentId: Overload:piine.Byte4.Reverse
  name: Reverse
  nameWithType: Byte4.Reverse
  fullName: piine.Byte4.Reverse
- uid: piine.Byte4.Sum*
  commentId: Overload:piine.Byte4.Sum
  name: Sum
  nameWithType: Byte4.Sum
  fullName: piine.Byte4.Sum
- uid: piine.Byte4.Volume*
  commentId: Overload:piine.Byte4.Volume
  name: Volume
  nameWithType: Byte4.Volume
  fullName: piine.Byte4.Volume
- uid: piine.Byte4.Length*
  commentId: Overload:piine.Byte4.Length
  name: Length
  nameWithType: Byte4.Length
  fullName: piine.Byte4.Length
- uid: piine.Byte4.LengthSquared*
  commentId: Overload:piine.Byte4.LengthSquared
  name: LengthSquared
  nameWithType: Byte4.LengthSquared
  fullName: piine.Byte4.LengthSquared
- uid: piine.Byte4.Contains*
  commentId: Overload:piine.Byte4.Contains
  name: Contains
  nameWithType: Byte4.Contains
  fullName: piine.Byte4.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: piine.Byte4.op_Equality*
  commentId: Overload:piine.Byte4.op_Equality
  name: Equality
  nameWithType: Byte4.Equality
  fullName: piine.Byte4.Equality
- uid: piine.Byte4.op_Inequality*
  commentId: Overload:piine.Byte4.op_Inequality
  name: Inequality
  nameWithType: Byte4.Inequality
  fullName: piine.Byte4.Inequality
- uid: piine.Byte4.op_Addition*
  commentId: Overload:piine.Byte4.op_Addition
  name: Addition
  nameWithType: Byte4.Addition
  fullName: piine.Byte4.Addition
- uid: piine.Byte4.op_Subtraction*
  commentId: Overload:piine.Byte4.op_Subtraction
  name: Subtraction
  nameWithType: Byte4.Subtraction
  fullName: piine.Byte4.Subtraction
- uid: piine.Byte4.op_Multiply*
  commentId: Overload:piine.Byte4.op_Multiply
  name: Multiply
  nameWithType: Byte4.Multiply
  fullName: piine.Byte4.Multiply
- uid: piine.Byte4.op_Division*
  commentId: Overload:piine.Byte4.op_Division
  name: Division
  nameWithType: Byte4.Division
  fullName: piine.Byte4.Division
- uid: piine.Byte4.op_GreaterThan*
  commentId: Overload:piine.Byte4.op_GreaterThan
  name: GreaterThan
  nameWithType: Byte4.GreaterThan
  fullName: piine.Byte4.GreaterThan
- uid: piine.Byte4.op_LessThan*
  commentId: Overload:piine.Byte4.op_LessThan
  name: LessThan
  nameWithType: Byte4.LessThan
  fullName: piine.Byte4.LessThan
- uid: piine.Byte4.op_GreaterThanOrEqual*
  commentId: Overload:piine.Byte4.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: Byte4.GreaterThanOrEqual
  fullName: piine.Byte4.GreaterThanOrEqual
- uid: piine.Byte4.op_LessThanOrEqual*
  commentId: Overload:piine.Byte4.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: Byte4.LessThanOrEqual
  fullName: piine.Byte4.LessThanOrEqual
- uid: piine.Byte4.Deconstruct*
  commentId: Overload:piine.Byte4.Deconstruct
  name: Deconstruct
  nameWithType: Byte4.Deconstruct
  fullName: piine.Byte4.Deconstruct
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Byte4.ToString*
  commentId: Overload:piine.Byte4.ToString
  name: ToString
  nameWithType: Byte4.ToString
  fullName: piine.Byte4.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: piine.Byte4.Equals*
  commentId: Overload:piine.Byte4.Equals
  name: Equals
  nameWithType: Byte4.Equals
  fullName: piine.Byte4.Equals
- uid: System.IEquatable{piine.Byte4}.Equals(piine.Byte4)
  commentId: M:System.IEquatable{piine.Byte4}.Equals(piine.Byte4)
  parent: System.IEquatable{piine.Byte4}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Byte4)
  nameWithType: IEquatable<Byte4>.Equals(Byte4)
  fullName: System.IEquatable<piine.Byte4>.Equals(piine.Byte4)
  nameWithType.vb: IEquatable(Of Byte4).Equals(Byte4)
  fullName.vb: System.IEquatable(Of piine.Byte4).Equals(piine.Byte4)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Byte4>.Equals
    fullName: System.IEquatable<piine.Byte4>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: piine.Byte4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Byte4).Equals
    fullName: System.IEquatable(Of piine.Byte4).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Byte4
    name: Byte4
    nameWithType: Byte4
    fullName: piine.Byte4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Byte4.GetHashCode*
  commentId: Overload:piine.Byte4.GetHashCode
  name: GetHashCode
  nameWithType: Byte4.GetHashCode
  fullName: piine.Byte4.GetHashCode
- uid: piine.Byte4.op_Implicit*
  commentId: Overload:piine.Byte4.op_Implicit
  name: Implicit
  nameWithType: Byte4.Implicit
  fullName: piine.Byte4.Implicit
  nameWithType.vb: Byte4.Widening
  fullName.vb: piine.Byte4.Widening
  name.vb: Widening
- uid: System.Numerics.Vector4
  commentId: T:System.Numerics.Vector4
  parent: System.Numerics
  isExternal: true
  name: Vector4
  nameWithType: Vector4
  fullName: System.Numerics.Vector4
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: piine.Byte4.op_Explicit*
  commentId: Overload:piine.Byte4.op_Explicit
  name: Explicit
  nameWithType: Byte4.Explicit
  fullName: piine.Byte4.Explicit
  nameWithType.vb: Byte4.Narrowing
  fullName.vb: piine.Byte4.Narrowing
  name.vb: Narrowing
- uid: System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  commentId: T:System.ValueTuple{System.Byte,System.Byte,System.Byte,System.Byte}
  parent: System
  isExternal: true
  name: ValueTuple<Byte, Byte, Byte, Byte>
  nameWithType: ValueTuple<Byte, Byte, Byte, Byte>
  fullName: System.ValueTuple<System.Byte, System.Byte, System.Byte, System.Byte>
  nameWithType.vb: ValueTuple(Of Byte, Byte, Byte, Byte)
  fullName.vb: System.ValueTuple(Of System.Byte, System.Byte, System.Byte, System.Byte)
  name.vb: ValueTuple(Of Byte, Byte, Byte, Byte)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Float4
  commentId: T:piine.Float4
  parent: piine
  name: Float4
  nameWithType: Float4
  fullName: piine.Float4
- uid: piine.Double4
  commentId: T:piine.Double4
  parent: piine
  name: Double4
  nameWithType: Double4
  fullName: piine.Double4
- uid: piine.Int4
  commentId: T:piine.Int4
  parent: piine
  name: Int4
  nameWithType: Int4
  fullName: piine.Int4
- uid: piine.UInt4
  commentId: T:piine.UInt4
  parent: piine
  name: UInt4
  nameWithType: UInt4
  fullName: piine.UInt4
- uid: piine.SByte4
  commentId: T:piine.SByte4
  parent: piine
  name: SByte4
  nameWithType: SByte4
  fullName: piine.SByte4
- uid: piine.Short4
  commentId: T:piine.Short4
  parent: piine
  name: Short4
  nameWithType: Short4
  fullName: piine.Short4
- uid: piine.UShort4
  commentId: T:piine.UShort4
  parent: piine
  name: UShort4
  nameWithType: UShort4
  fullName: piine.UShort4
- uid: piine.Long4
  commentId: T:piine.Long4
  parent: piine
  name: Long4
  nameWithType: Long4
  fullName: piine.Long4
- uid: piine.ULong4
  commentId: T:piine.ULong4
  parent: piine
  name: ULong4
  nameWithType: ULong4
  fullName: piine.ULong4
