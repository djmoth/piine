### YamlMime:ManagedReference
items:
- uid: tests.Voxels.VoxelVolumeTests
  commentId: T:tests.Voxels.VoxelVolumeTests
  id: VoxelVolumeTests
  parent: tests.Voxels
  children:
  - tests.Voxels.VoxelVolumeTests.ForeachTest
  - tests.Voxels.VoxelVolumeTests.HashCodeTest
  - tests.Voxels.VoxelVolumeTests.TestIndexPositions
  langs:
  - csharp
  - vb
  name: VoxelVolumeTests
  nameWithType: VoxelVolumeTests
  fullName: tests.Voxels.VoxelVolumeTests
  type: Class
  source:
    remote:
      path: tests/Voxels/VoxelVolumeTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: VoxelVolumeTests
    path: tests/Voxels/VoxelVolumeTests.cs
    startLine: 7
  assemblies:
  - tests
  namespace: tests.Voxels
  syntax:
    content: public class VoxelVolumeTests
    content.vb: Public Class VoxelVolumeTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: tests.Voxels.VoxelVolumeTests.TestIndexPositions
  commentId: M:tests.Voxels.VoxelVolumeTests.TestIndexPositions
  id: TestIndexPositions
  parent: tests.Voxels.VoxelVolumeTests
  langs:
  - csharp
  - vb
  name: TestIndexPositions()
  nameWithType: VoxelVolumeTests.TestIndexPositions()
  fullName: tests.Voxels.VoxelVolumeTests.TestIndexPositions()
  type: Method
  source:
    remote:
      path: tests/Voxels/VoxelVolumeTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestIndexPositions
    path: tests/Voxels/VoxelVolumeTests.cs
    startLine: 9
  assemblies:
  - tests
  namespace: tests.Voxels
  syntax:
    content: >-
      [Test]

      public void TestIndexPositions()
    content.vb: >-
      <Test>

      Public Sub TestIndexPositions
  overload: tests.Voxels.VoxelVolumeTests.TestIndexPositions*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: tests.Voxels.VoxelVolumeTests.ForeachTest
  commentId: M:tests.Voxels.VoxelVolumeTests.ForeachTest
  id: ForeachTest
  parent: tests.Voxels.VoxelVolumeTests
  langs:
  - csharp
  - vb
  name: ForeachTest()
  nameWithType: VoxelVolumeTests.ForeachTest()
  fullName: tests.Voxels.VoxelVolumeTests.ForeachTest()
  type: Method
  source:
    remote:
      path: tests/Voxels/VoxelVolumeTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: ForeachTest
    path: tests/Voxels/VoxelVolumeTests.cs
    startLine: 24
  assemblies:
  - tests
  namespace: tests.Voxels
  syntax:
    content: >-
      [Test]

      public void ForeachTest()
    content.vb: >-
      <Test>

      Public Sub ForeachTest
  overload: tests.Voxels.VoxelVolumeTests.ForeachTest*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: tests.Voxels.VoxelVolumeTests.HashCodeTest
  commentId: M:tests.Voxels.VoxelVolumeTests.HashCodeTest
  id: HashCodeTest
  parent: tests.Voxels.VoxelVolumeTests
  langs:
  - csharp
  - vb
  name: HashCodeTest()
  nameWithType: VoxelVolumeTests.HashCodeTest()
  fullName: tests.Voxels.VoxelVolumeTests.HashCodeTest()
  type: Method
  source:
    remote:
      path: tests/Voxels/VoxelVolumeTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: HashCodeTest
    path: tests/Voxels/VoxelVolumeTests.cs
    startLine: 30
  assemblies:
  - tests
  namespace: tests.Voxels
  syntax:
    content: >-
      [Test]

      public void HashCodeTest()
    content.vb: >-
      <Test>

      Public Sub HashCodeTest
  overload: tests.Voxels.VoxelVolumeTests.HashCodeTest*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: tests.Voxels
  commentId: N:tests.Voxels
  name: tests.Voxels
  nameWithType: tests.Voxels
  fullName: tests.Voxels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: tests.Voxels.VoxelVolumeTests.TestIndexPositions*
  commentId: Overload:tests.Voxels.VoxelVolumeTests.TestIndexPositions
  name: TestIndexPositions
  nameWithType: VoxelVolumeTests.TestIndexPositions
  fullName: tests.Voxels.VoxelVolumeTests.TestIndexPositions
- uid: tests.Voxels.VoxelVolumeTests.ForeachTest*
  commentId: Overload:tests.Voxels.VoxelVolumeTests.ForeachTest
  name: ForeachTest
  nameWithType: VoxelVolumeTests.ForeachTest
  fullName: tests.Voxels.VoxelVolumeTests.ForeachTest
- uid: tests.Voxels.VoxelVolumeTests.HashCodeTest*
  commentId: Overload:tests.Voxels.VoxelVolumeTests.HashCodeTest
  name: HashCodeTest
  nameWithType: VoxelVolumeTests.HashCodeTest
  fullName: tests.Voxels.VoxelVolumeTests.HashCodeTest
