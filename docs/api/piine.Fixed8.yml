### YamlMime:ManagedReference
items:
- uid: piine.Fixed8
  commentId: T:piine.Fixed8
  id: Fixed8
  parent: piine
  children:
  - piine.Fixed8.#ctor(System.Int32)
  - piine.Fixed8.#ctor(System.Single)
  - piine.Fixed8.Equals(piine.Fixed8)
  - piine.Fixed8.Equals(System.Object)
  - piine.Fixed8.FromRawValue(System.SByte)
  - piine.Fixed8.GetHashCode
  - piine.Fixed8.MaxValue
  - piine.Fixed8.MinFraction
  - piine.Fixed8.MinValue
  - piine.Fixed8.op_Addition(piine.Fixed8,piine.Fixed8)
  - piine.Fixed8.op_Division(piine.Fixed8,piine.Fixed8)
  - piine.Fixed8.op_Equality(piine.Fixed8,piine.Fixed8)
  - piine.Fixed8.op_Explicit(piine.Fixed8)~System.Int32
  - piine.Fixed8.op_Implicit(piine.Fixed8)~System.Single
  - piine.Fixed8.op_Implicit(System.Int32)~piine.Fixed8
  - piine.Fixed8.op_Implicit(System.Single)~piine.Fixed8
  - piine.Fixed8.op_Inequality(piine.Fixed8,piine.Fixed8)
  - piine.Fixed8.op_Multiply(piine.Fixed8,piine.Fixed8)
  - piine.Fixed8.op_Multiply(piine.Fixed8,System.Int32)
  - piine.Fixed8.op_Subtraction(piine.Fixed8,piine.Fixed8)
  - piine.Fixed8.Precision
  - piine.Fixed8.raw
  - piine.Fixed8.ToString
  langs:
  - csharp
  - vb
  name: Fixed8
  nameWithType: Fixed8
  fullName: piine.Fixed8
  type: Struct
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Fixed8
    path: src/Numerics/Fixed8.cs
    startLine: 6
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: 'public struct Fixed8 : IEquatable<Fixed8>'
    content.vb: >-
      Public Structure Fixed8
          Implements IEquatable(Of Fixed8)
  implements:
  - System.IEquatable{piine.Fixed8}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: piine.Fixed8.Precision
  commentId: F:piine.Fixed8.Precision
  id: Precision
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Precision
  nameWithType: Fixed8.Precision
  fullName: piine.Fixed8.Precision
  type: Field
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Precision
    path: src/Numerics/Fixed8.cs
    startLine: 10
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public const int Precision = 64
    return:
      type: System.Int32
    content.vb: Public Const Precision As Integer = 64
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: piine.Fixed8.MinFraction
  commentId: F:piine.Fixed8.MinFraction
  id: MinFraction
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: MinFraction
  nameWithType: Fixed8.MinFraction
  fullName: piine.Fixed8.MinFraction
  type: Field
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: MinFraction
    path: src/Numerics/Fixed8.cs
    startLine: 12
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public const float MinFraction = 0.015625F
    return:
      type: System.Single
    content.vb: Public Const MinFraction As Single = 0.015625F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: piine.Fixed8.MaxValue
  commentId: F:piine.Fixed8.MaxValue
  id: MaxValue
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Fixed8.MaxValue
  fullName: piine.Fixed8.MaxValue
  type: Field
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: MaxValue
    path: src/Numerics/Fixed8.cs
    startLine: 13
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public const float MaxValue = 1.984375F
    return:
      type: System.Single
    content.vb: Public Const MaxValue As Single = 1.984375F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: piine.Fixed8.MinValue
  commentId: F:piine.Fixed8.MinValue
  id: MinValue
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Fixed8.MinValue
  fullName: piine.Fixed8.MinValue
  type: Field
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: MinValue
    path: src/Numerics/Fixed8.cs
    startLine: 14
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public const float MinValue = -2F
    return:
      type: System.Single
    content.vb: Public Const MinValue As Single = -2F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: piine.Fixed8.raw
  commentId: F:piine.Fixed8.raw
  id: raw
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: raw
  nameWithType: Fixed8.raw
  fullName: piine.Fixed8.raw
  type: Field
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: raw
    path: src/Numerics/Fixed8.cs
    startLine: 16
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public readonly sbyte raw
    return:
      type: System.SByte
    content.vb: Public ReadOnly raw As SByte
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Fixed8.#ctor(System.Single)
  commentId: M:piine.Fixed8.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Fixed8(Single)
  nameWithType: Fixed8.Fixed8(Single)
  fullName: piine.Fixed8.Fixed8(System.Single)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Fixed8.cs
    startLine: 18
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Fixed8(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub New(value As Single)
  overload: piine.Fixed8.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Fixed8.#ctor(System.Int32)
  commentId: M:piine.Fixed8.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Fixed8(Int32)
  nameWithType: Fixed8.Fixed8(Int32)
  fullName: piine.Fixed8.Fixed8(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Fixed8.cs
    startLine: 19
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Fixed8(int value)
    parameters:
    - id: value
      type: System.Int32
    content.vb: Public Sub New(value As Integer)
  overload: piine.Fixed8.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Fixed8.FromRawValue(System.SByte)
  commentId: M:piine.Fixed8.FromRawValue(System.SByte)
  id: FromRawValue(System.SByte)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: FromRawValue(SByte)
  nameWithType: Fixed8.FromRawValue(SByte)
  fullName: piine.Fixed8.FromRawValue(System.SByte)
  type: Method
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: FromRawValue
    path: src/Numerics/Fixed8.cs
    startLine: 23
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Fixed8 FromRawValue(sbyte rawValue)
    parameters:
    - id: rawValue
      type: System.SByte
    return:
      type: piine.Fixed8
    content.vb: Public Shared Function FromRawValue(rawValue As SByte) As Fixed8
  overload: piine.Fixed8.FromRawValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Fixed8.op_Implicit(System.Single)~piine.Fixed8
  commentId: M:piine.Fixed8.op_Implicit(System.Single)~piine.Fixed8
  id: op_Implicit(System.Single)~piine.Fixed8
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Implicit(Single to Fixed8)
  nameWithType: Fixed8.Implicit(Single to Fixed8)
  fullName: piine.Fixed8.Implicit(System.Single to piine.Fixed8)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Fixed8.cs
    startLine: 25
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Fixed8(float value)
    parameters:
    - id: value
      type: System.Single
    return:
      type: piine.Fixed8
    content.vb: Public Shared Widening Operator CType(value As Single) As Fixed8
  overload: piine.Fixed8.op_Implicit*
  nameWithType.vb: Fixed8.Widening(Single to Fixed8)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Fixed8.Widening(System.Single to piine.Fixed8)
  name.vb: Widening(Single to Fixed8)
- uid: piine.Fixed8.op_Implicit(piine.Fixed8)~System.Single
  commentId: M:piine.Fixed8.op_Implicit(piine.Fixed8)~System.Single
  id: op_Implicit(piine.Fixed8)~System.Single
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Implicit(Fixed8 to Single)
  nameWithType: Fixed8.Implicit(Fixed8 to Single)
  fullName: piine.Fixed8.Implicit(piine.Fixed8 to System.Single)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Fixed8.cs
    startLine: 27
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator float (Fixed8 value)
    parameters:
    - id: value
      type: piine.Fixed8
    return:
      type: System.Single
    content.vb: Public Shared Widening Operator CType(value As Fixed8) As Single
  overload: piine.Fixed8.op_Implicit*
  nameWithType.vb: Fixed8.Widening(Fixed8 to Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Fixed8.Widening(piine.Fixed8 to System.Single)
  name.vb: Widening(Fixed8 to Single)
- uid: piine.Fixed8.op_Implicit(System.Int32)~piine.Fixed8
  commentId: M:piine.Fixed8.op_Implicit(System.Int32)~piine.Fixed8
  id: op_Implicit(System.Int32)~piine.Fixed8
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Implicit(Int32 to Fixed8)
  nameWithType: Fixed8.Implicit(Int32 to Fixed8)
  fullName: piine.Fixed8.Implicit(System.Int32 to piine.Fixed8)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Fixed8.cs
    startLine: 29
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Fixed8(int value)
    parameters:
    - id: value
      type: System.Int32
    return:
      type: piine.Fixed8
    content.vb: Public Shared Widening Operator CType(value As Integer) As Fixed8
  overload: piine.Fixed8.op_Implicit*
  nameWithType.vb: Fixed8.Widening(Int32 to Fixed8)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Fixed8.Widening(System.Int32 to piine.Fixed8)
  name.vb: Widening(Int32 to Fixed8)
- uid: piine.Fixed8.op_Explicit(piine.Fixed8)~System.Int32
  commentId: M:piine.Fixed8.op_Explicit(piine.Fixed8)~System.Int32
  id: op_Explicit(piine.Fixed8)~System.Int32
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Explicit(Fixed8 to Int32)
  nameWithType: Fixed8.Explicit(Fixed8 to Int32)
  fullName: piine.Fixed8.Explicit(piine.Fixed8 to System.Int32)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Fixed8.cs
    startLine: 31
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator int (Fixed8 value)
    parameters:
    - id: value
      type: piine.Fixed8
    return:
      type: System.Int32
    content.vb: Public Shared Narrowing Operator CType(value As Fixed8) As Integer
  overload: piine.Fixed8.op_Explicit*
  nameWithType.vb: Fixed8.Narrowing(Fixed8 to Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Fixed8.Narrowing(piine.Fixed8 to System.Int32)
  name.vb: Narrowing(Fixed8 to Int32)
- uid: piine.Fixed8.op_Addition(piine.Fixed8,piine.Fixed8)
  commentId: M:piine.Fixed8.op_Addition(piine.Fixed8,piine.Fixed8)
  id: op_Addition(piine.Fixed8,piine.Fixed8)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Addition(Fixed8, Fixed8)
  nameWithType: Fixed8.Addition(Fixed8, Fixed8)
  fullName: piine.Fixed8.Addition(piine.Fixed8, piine.Fixed8)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Addition
    path: src/Numerics/Fixed8.cs
    startLine: 33
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Fixed8 operator +(Fixed8 a, Fixed8 b)
    parameters:
    - id: a
      type: piine.Fixed8
    - id: b
      type: piine.Fixed8
    return:
      type: piine.Fixed8
    content.vb: Public Shared Operator +(a As Fixed8, b As Fixed8) As Fixed8
  overload: piine.Fixed8.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Fixed8.op_Subtraction(piine.Fixed8,piine.Fixed8)
  commentId: M:piine.Fixed8.op_Subtraction(piine.Fixed8,piine.Fixed8)
  id: op_Subtraction(piine.Fixed8,piine.Fixed8)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Subtraction(Fixed8, Fixed8)
  nameWithType: Fixed8.Subtraction(Fixed8, Fixed8)
  fullName: piine.Fixed8.Subtraction(piine.Fixed8, piine.Fixed8)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Subtraction
    path: src/Numerics/Fixed8.cs
    startLine: 34
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Fixed8 operator -(Fixed8 a, Fixed8 b)
    parameters:
    - id: a
      type: piine.Fixed8
    - id: b
      type: piine.Fixed8
    return:
      type: piine.Fixed8
    content.vb: Public Shared Operator -(a As Fixed8, b As Fixed8) As Fixed8
  overload: piine.Fixed8.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Fixed8.op_Multiply(piine.Fixed8,piine.Fixed8)
  commentId: M:piine.Fixed8.op_Multiply(piine.Fixed8,piine.Fixed8)
  id: op_Multiply(piine.Fixed8,piine.Fixed8)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Multiply(Fixed8, Fixed8)
  nameWithType: Fixed8.Multiply(Fixed8, Fixed8)
  fullName: piine.Fixed8.Multiply(piine.Fixed8, piine.Fixed8)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Multiply
    path: src/Numerics/Fixed8.cs
    startLine: 35
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Fixed8 operator *(Fixed8 a, Fixed8 b)
    parameters:
    - id: a
      type: piine.Fixed8
    - id: b
      type: piine.Fixed8
    return:
      type: piine.Fixed8
    content.vb: Public Shared Operator *(a As Fixed8, b As Fixed8) As Fixed8
  overload: piine.Fixed8.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Fixed8.op_Multiply(piine.Fixed8,System.Int32)
  commentId: M:piine.Fixed8.op_Multiply(piine.Fixed8,System.Int32)
  id: op_Multiply(piine.Fixed8,System.Int32)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Multiply(Fixed8, Int32)
  nameWithType: Fixed8.Multiply(Fixed8, Int32)
  fullName: piine.Fixed8.Multiply(piine.Fixed8, System.Int32)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Multiply
    path: src/Numerics/Fixed8.cs
    startLine: 36
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Fixed8 operator *(Fixed8 a, int b)
    parameters:
    - id: a
      type: piine.Fixed8
    - id: b
      type: System.Int32
    return:
      type: piine.Fixed8
    content.vb: Public Shared Operator *(a As Fixed8, b As Integer) As Fixed8
  overload: piine.Fixed8.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Fixed8.op_Division(piine.Fixed8,piine.Fixed8)
  commentId: M:piine.Fixed8.op_Division(piine.Fixed8,piine.Fixed8)
  id: op_Division(piine.Fixed8,piine.Fixed8)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Division(Fixed8, Fixed8)
  nameWithType: Fixed8.Division(Fixed8, Fixed8)
  fullName: piine.Fixed8.Division(piine.Fixed8, piine.Fixed8)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Division
    path: src/Numerics/Fixed8.cs
    startLine: 37
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Fixed8 operator /(Fixed8 a, Fixed8 b)
    parameters:
    - id: a
      type: piine.Fixed8
    - id: b
      type: piine.Fixed8
    return:
      type: piine.Fixed8
    content.vb: Public Shared Operator /(a As Fixed8, b As Fixed8) As Fixed8
  overload: piine.Fixed8.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Fixed8.op_Equality(piine.Fixed8,piine.Fixed8)
  commentId: M:piine.Fixed8.op_Equality(piine.Fixed8,piine.Fixed8)
  id: op_Equality(piine.Fixed8,piine.Fixed8)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Equality(Fixed8, Fixed8)
  nameWithType: Fixed8.Equality(Fixed8, Fixed8)
  fullName: piine.Fixed8.Equality(piine.Fixed8, piine.Fixed8)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Equality
    path: src/Numerics/Fixed8.cs
    startLine: 39
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator ==(Fixed8 a, Fixed8 b)
    parameters:
    - id: a
      type: piine.Fixed8
    - id: b
      type: piine.Fixed8
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Fixed8, b As Fixed8) As Boolean
  overload: piine.Fixed8.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Fixed8.op_Inequality(piine.Fixed8,piine.Fixed8)
  commentId: M:piine.Fixed8.op_Inequality(piine.Fixed8,piine.Fixed8)
  id: op_Inequality(piine.Fixed8,piine.Fixed8)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Inequality(Fixed8, Fixed8)
  nameWithType: Fixed8.Inequality(Fixed8, Fixed8)
  fullName: piine.Fixed8.Inequality(piine.Fixed8, piine.Fixed8)
  type: Operator
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Inequality
    path: src/Numerics/Fixed8.cs
    startLine: 40
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator !=(Fixed8 a, Fixed8 b)
    parameters:
    - id: a
      type: piine.Fixed8
    - id: b
      type: piine.Fixed8
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Fixed8, b As Fixed8) As Boolean
  overload: piine.Fixed8.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Fixed8.Equals(piine.Fixed8)
  commentId: M:piine.Fixed8.Equals(piine.Fixed8)
  id: Equals(piine.Fixed8)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Equals(Fixed8)
  nameWithType: Fixed8.Equals(Fixed8)
  fullName: piine.Fixed8.Equals(piine.Fixed8)
  type: Method
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Equals
    path: src/Numerics/Fixed8.cs
    startLine: 42
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public bool Equals(Fixed8 other)
    parameters:
    - id: other
      type: piine.Fixed8
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Fixed8) As Boolean
  overload: piine.Fixed8.Equals*
  implements:
  - System.IEquatable{piine.Fixed8}.Equals(piine.Fixed8)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Fixed8.Equals(System.Object)
  commentId: M:piine.Fixed8.Equals(System.Object)
  id: Equals(System.Object)
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Fixed8.Equals(Object)
  fullName: piine.Fixed8.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Equals
    path: src/Numerics/Fixed8.cs
    startLine: 44
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: piine.Fixed8.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.Fixed8.GetHashCode
  commentId: M:piine.Fixed8.GetHashCode
  id: GetHashCode
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Fixed8.GetHashCode()
  fullName: piine.Fixed8.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: GetHashCode
    path: src/Numerics/Fixed8.cs
    startLine: 46
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: piine.Fixed8.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.Fixed8.ToString
  commentId: M:piine.Fixed8.ToString
  id: ToString
  parent: piine.Fixed8
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Fixed8.ToString()
  fullName: piine.Fixed8.ToString()
  type: Method
  source:
    remote:
      path: src/Numerics/Fixed8.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: ToString
    path: src/Numerics/Fixed8.cs
    startLine: 48
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: piine.Fixed8.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: piine
  commentId: N:piine
  name: piine
  nameWithType: piine
  fullName: piine
- uid: System.IEquatable{piine.Fixed8}
  commentId: T:System.IEquatable{piine.Fixed8}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Fixed8>
  nameWithType: IEquatable<Fixed8>
  fullName: System.IEquatable<piine.Fixed8>
  nameWithType.vb: IEquatable(Of Fixed8)
  fullName.vb: System.IEquatable(Of piine.Fixed8)
  name.vb: IEquatable(Of Fixed8)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: piine.Fixed8
    name: Fixed8
    nameWithType: Fixed8
    fullName: piine.Fixed8
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: piine.Fixed8
    name: Fixed8
    nameWithType: Fixed8
    fullName: piine.Fixed8
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: piine.Fixed8.#ctor*
  commentId: Overload:piine.Fixed8.#ctor
  name: Fixed8
  nameWithType: Fixed8.Fixed8
  fullName: piine.Fixed8.Fixed8
- uid: piine.Fixed8.FromRawValue*
  commentId: Overload:piine.Fixed8.FromRawValue
  name: FromRawValue
  nameWithType: Fixed8.FromRawValue
  fullName: piine.Fixed8.FromRawValue
- uid: piine.Fixed8
  commentId: T:piine.Fixed8
  parent: piine
  name: Fixed8
  nameWithType: Fixed8
  fullName: piine.Fixed8
- uid: piine.Fixed8.op_Implicit*
  commentId: Overload:piine.Fixed8.op_Implicit
  name: Implicit
  nameWithType: Fixed8.Implicit
  fullName: piine.Fixed8.Implicit
  nameWithType.vb: Fixed8.Widening
  fullName.vb: piine.Fixed8.Widening
  name.vb: Widening
- uid: piine.Fixed8.op_Explicit*
  commentId: Overload:piine.Fixed8.op_Explicit
  name: Explicit
  nameWithType: Fixed8.Explicit
  fullName: piine.Fixed8.Explicit
  nameWithType.vb: Fixed8.Narrowing
  fullName.vb: piine.Fixed8.Narrowing
  name.vb: Narrowing
- uid: piine.Fixed8.op_Addition*
  commentId: Overload:piine.Fixed8.op_Addition
  name: Addition
  nameWithType: Fixed8.Addition
  fullName: piine.Fixed8.Addition
- uid: piine.Fixed8.op_Subtraction*
  commentId: Overload:piine.Fixed8.op_Subtraction
  name: Subtraction
  nameWithType: Fixed8.Subtraction
  fullName: piine.Fixed8.Subtraction
- uid: piine.Fixed8.op_Multiply*
  commentId: Overload:piine.Fixed8.op_Multiply
  name: Multiply
  nameWithType: Fixed8.Multiply
  fullName: piine.Fixed8.Multiply
- uid: piine.Fixed8.op_Division*
  commentId: Overload:piine.Fixed8.op_Division
  name: Division
  nameWithType: Fixed8.Division
  fullName: piine.Fixed8.Division
- uid: piine.Fixed8.op_Equality*
  commentId: Overload:piine.Fixed8.op_Equality
  name: Equality
  nameWithType: Fixed8.Equality
  fullName: piine.Fixed8.Equality
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: piine.Fixed8.op_Inequality*
  commentId: Overload:piine.Fixed8.op_Inequality
  name: Inequality
  nameWithType: Fixed8.Inequality
  fullName: piine.Fixed8.Inequality
- uid: piine.Fixed8.Equals*
  commentId: Overload:piine.Fixed8.Equals
  name: Equals
  nameWithType: Fixed8.Equals
  fullName: piine.Fixed8.Equals
- uid: System.IEquatable{piine.Fixed8}.Equals(piine.Fixed8)
  commentId: M:System.IEquatable{piine.Fixed8}.Equals(piine.Fixed8)
  parent: System.IEquatable{piine.Fixed8}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Fixed8)
  nameWithType: IEquatable<Fixed8>.Equals(Fixed8)
  fullName: System.IEquatable<piine.Fixed8>.Equals(piine.Fixed8)
  nameWithType.vb: IEquatable(Of Fixed8).Equals(Fixed8)
  fullName.vb: System.IEquatable(Of piine.Fixed8).Equals(piine.Fixed8)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Fixed8>.Equals
    fullName: System.IEquatable<piine.Fixed8>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Fixed8
    name: Fixed8
    nameWithType: Fixed8
    fullName: piine.Fixed8
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Fixed8).Equals
    fullName: System.IEquatable(Of piine.Fixed8).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Fixed8
    name: Fixed8
    nameWithType: Fixed8
    fullName: piine.Fixed8
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Fixed8.GetHashCode*
  commentId: Overload:piine.Fixed8.GetHashCode
  name: GetHashCode
  nameWithType: Fixed8.GetHashCode
  fullName: piine.Fixed8.GetHashCode
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Fixed8.ToString*
  commentId: Overload:piine.Fixed8.ToString
  name: ToString
  nameWithType: Fixed8.ToString
  fullName: piine.Fixed8.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
