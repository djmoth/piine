### YamlMime:ManagedReference
items:
- uid: Tests.Memory.UnmanagedListTests
  commentId: T:Tests.Memory.UnmanagedListTests
  id: UnmanagedListTests
  parent: Tests.Memory
  children:
  - Tests.Memory.UnmanagedListTests.GetRandomizedlist(System.Int32)
  - Tests.Memory.UnmanagedListTests.TestAccess
  - Tests.Memory.UnmanagedListTests.TestAdd
  - Tests.Memory.UnmanagedListTests.TestCreateNew
  - Tests.Memory.UnmanagedListTests.TestDispose
  - Tests.Memory.UnmanagedListTests.TestForeach
  - Tests.Memory.UnmanagedListTests.TestIndexOf
  - Tests.Memory.UnmanagedListTests.TestInsert
  - Tests.Memory.UnmanagedListTests.TestInsertAtMaxCapacity
  - Tests.Memory.UnmanagedListTests.TestOutOfRangeAccess
  - Tests.Memory.UnmanagedListTests.TestRemove
  - Tests.Memory.UnmanagedListTests.TestRemoveAt
  langs:
  - csharp
  - vb
  name: UnmanagedListTests
  nameWithType: UnmanagedListTests
  fullName: Tests.Memory.UnmanagedListTests
  type: Class
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: UnmanagedListTests
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 6
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: public class UnmanagedListTests
    content.vb: Public Class UnmanagedListTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Tests.Memory.UnmanagedListTests.TestCreateNew
  commentId: M:Tests.Memory.UnmanagedListTests.TestCreateNew
  id: TestCreateNew
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestCreateNew()
  nameWithType: UnmanagedListTests.TestCreateNew()
  fullName: Tests.Memory.UnmanagedListTests.TestCreateNew()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestCreateNew
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 8
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestCreateNew()
    content.vb: >-
      <Test>

      Public Sub TestCreateNew
  overload: Tests.Memory.UnmanagedListTests.TestCreateNew*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestAdd
  commentId: M:Tests.Memory.UnmanagedListTests.TestAdd
  id: TestAdd
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestAdd()
  nameWithType: UnmanagedListTests.TestAdd()
  fullName: Tests.Memory.UnmanagedListTests.TestAdd()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestAdd
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 14
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestAdd()
    content.vb: >-
      <Test>

      Public Sub TestAdd
  overload: Tests.Memory.UnmanagedListTests.TestAdd*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestInsert
  commentId: M:Tests.Memory.UnmanagedListTests.TestInsert
  id: TestInsert
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestInsert()
  nameWithType: UnmanagedListTests.TestInsert()
  fullName: Tests.Memory.UnmanagedListTests.TestInsert()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestInsert
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 35
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestInsert()
    content.vb: >-
      <Test>

      Public Sub TestInsert
  overload: Tests.Memory.UnmanagedListTests.TestInsert*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestInsertAtMaxCapacity
  commentId: M:Tests.Memory.UnmanagedListTests.TestInsertAtMaxCapacity
  id: TestInsertAtMaxCapacity
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestInsertAtMaxCapacity()
  nameWithType: UnmanagedListTests.TestInsertAtMaxCapacity()
  fullName: Tests.Memory.UnmanagedListTests.TestInsertAtMaxCapacity()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestInsertAtMaxCapacity
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 63
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestInsertAtMaxCapacity()
    content.vb: >-
      <Test>

      Public Sub TestInsertAtMaxCapacity
  overload: Tests.Memory.UnmanagedListTests.TestInsertAtMaxCapacity*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestRemove
  commentId: M:Tests.Memory.UnmanagedListTests.TestRemove
  id: TestRemove
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestRemove()
  nameWithType: UnmanagedListTests.TestRemove()
  fullName: Tests.Memory.UnmanagedListTests.TestRemove()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestRemove
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 89
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestRemove()
    content.vb: >-
      <Test>

      Public Sub TestRemove
  overload: Tests.Memory.UnmanagedListTests.TestRemove*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestRemoveAt
  commentId: M:Tests.Memory.UnmanagedListTests.TestRemoveAt
  id: TestRemoveAt
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestRemoveAt()
  nameWithType: UnmanagedListTests.TestRemoveAt()
  fullName: Tests.Memory.UnmanagedListTests.TestRemoveAt()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestRemoveAt
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 112
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestRemoveAt()
    content.vb: >-
      <Test>

      Public Sub TestRemoveAt
  overload: Tests.Memory.UnmanagedListTests.TestRemoveAt*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestOutOfRangeAccess
  commentId: M:Tests.Memory.UnmanagedListTests.TestOutOfRangeAccess
  id: TestOutOfRangeAccess
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestOutOfRangeAccess()
  nameWithType: UnmanagedListTests.TestOutOfRangeAccess()
  fullName: Tests.Memory.UnmanagedListTests.TestOutOfRangeAccess()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestOutOfRangeAccess
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 129
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestOutOfRangeAccess()
    content.vb: >-
      <Test>

      Public Sub TestOutOfRangeAccess
  overload: Tests.Memory.UnmanagedListTests.TestOutOfRangeAccess*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestAccess
  commentId: M:Tests.Memory.UnmanagedListTests.TestAccess
  id: TestAccess
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestAccess()
  nameWithType: UnmanagedListTests.TestAccess()
  fullName: Tests.Memory.UnmanagedListTests.TestAccess()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestAccess
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 146
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestAccess()
    content.vb: >-
      <Test>

      Public Sub TestAccess
  overload: Tests.Memory.UnmanagedListTests.TestAccess*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestDispose
  commentId: M:Tests.Memory.UnmanagedListTests.TestDispose
  id: TestDispose
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestDispose()
  nameWithType: UnmanagedListTests.TestDispose()
  fullName: Tests.Memory.UnmanagedListTests.TestDispose()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestDispose
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 164
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestDispose()
    content.vb: >-
      <Test>

      Public Sub TestDispose
  overload: Tests.Memory.UnmanagedListTests.TestDispose*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestIndexOf
  commentId: M:Tests.Memory.UnmanagedListTests.TestIndexOf
  id: TestIndexOf
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestIndexOf()
  nameWithType: UnmanagedListTests.TestIndexOf()
  fullName: Tests.Memory.UnmanagedListTests.TestIndexOf()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestIndexOf
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 174
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestIndexOf()
    content.vb: >-
      <Test>

      Public Sub TestIndexOf
  overload: Tests.Memory.UnmanagedListTests.TestIndexOf*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.TestForeach
  commentId: M:Tests.Memory.UnmanagedListTests.TestForeach
  id: TestForeach
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: TestForeach()
  nameWithType: UnmanagedListTests.TestForeach()
  fullName: Tests.Memory.UnmanagedListTests.TestForeach()
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: TestForeach
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 187
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: >-
      [Test]

      public void TestForeach()
    content.vb: >-
      <Test>

      Public Sub TestForeach
  overload: Tests.Memory.UnmanagedListTests.TestForeach*
  attributes:
  - type: NUnit.Framework.TestAttribute
    ctor: NUnit.Framework.TestAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Tests.Memory.UnmanagedListTests.GetRandomizedlist(System.Int32)
  commentId: M:Tests.Memory.UnmanagedListTests.GetRandomizedlist(System.Int32)
  id: GetRandomizedlist(System.Int32)
  parent: Tests.Memory.UnmanagedListTests
  langs:
  - csharp
  - vb
  name: GetRandomizedlist(Int32)
  nameWithType: UnmanagedListTests.GetRandomizedlist(Int32)
  fullName: Tests.Memory.UnmanagedListTests.GetRandomizedlist(System.Int32)
  type: Method
  source:
    remote:
      path: tests/Memory/UnmanagedListTests.cs
      branch: master
      repo: https://github.com/djmoth/piine.git
    id: GetRandomizedlist
    path: tests/Memory/UnmanagedListTests.cs
    startLine: 209
  assemblies:
  - tests
  namespace: Tests.Memory
  syntax:
    content: public UnmanagedList<int> GetRandomizedlist(int size)
    parameters:
    - id: size
      type: System.Int32
    return:
      type: piine.Memory.UnmanagedList{System.Int32}
    content.vb: Public Function GetRandomizedlist(size As Integer) As UnmanagedList(Of Integer)
  overload: Tests.Memory.UnmanagedListTests.GetRandomizedlist*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Tests.Memory
  commentId: N:Tests.Memory
  name: Tests.Memory
  nameWithType: Tests.Memory
  fullName: Tests.Memory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Tests.Memory.UnmanagedListTests.TestCreateNew*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestCreateNew
  name: TestCreateNew
  nameWithType: UnmanagedListTests.TestCreateNew
  fullName: Tests.Memory.UnmanagedListTests.TestCreateNew
- uid: Tests.Memory.UnmanagedListTests.TestAdd*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestAdd
  name: TestAdd
  nameWithType: UnmanagedListTests.TestAdd
  fullName: Tests.Memory.UnmanagedListTests.TestAdd
- uid: Tests.Memory.UnmanagedListTests.TestInsert*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestInsert
  name: TestInsert
  nameWithType: UnmanagedListTests.TestInsert
  fullName: Tests.Memory.UnmanagedListTests.TestInsert
- uid: Tests.Memory.UnmanagedListTests.TestInsertAtMaxCapacity*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestInsertAtMaxCapacity
  name: TestInsertAtMaxCapacity
  nameWithType: UnmanagedListTests.TestInsertAtMaxCapacity
  fullName: Tests.Memory.UnmanagedListTests.TestInsertAtMaxCapacity
- uid: Tests.Memory.UnmanagedListTests.TestRemove*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestRemove
  name: TestRemove
  nameWithType: UnmanagedListTests.TestRemove
  fullName: Tests.Memory.UnmanagedListTests.TestRemove
- uid: Tests.Memory.UnmanagedListTests.TestRemoveAt*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestRemoveAt
  name: TestRemoveAt
  nameWithType: UnmanagedListTests.TestRemoveAt
  fullName: Tests.Memory.UnmanagedListTests.TestRemoveAt
- uid: Tests.Memory.UnmanagedListTests.TestOutOfRangeAccess*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestOutOfRangeAccess
  name: TestOutOfRangeAccess
  nameWithType: UnmanagedListTests.TestOutOfRangeAccess
  fullName: Tests.Memory.UnmanagedListTests.TestOutOfRangeAccess
- uid: Tests.Memory.UnmanagedListTests.TestAccess*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestAccess
  name: TestAccess
  nameWithType: UnmanagedListTests.TestAccess
  fullName: Tests.Memory.UnmanagedListTests.TestAccess
- uid: Tests.Memory.UnmanagedListTests.TestDispose*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestDispose
  name: TestDispose
  nameWithType: UnmanagedListTests.TestDispose
  fullName: Tests.Memory.UnmanagedListTests.TestDispose
- uid: Tests.Memory.UnmanagedListTests.TestIndexOf*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestIndexOf
  name: TestIndexOf
  nameWithType: UnmanagedListTests.TestIndexOf
  fullName: Tests.Memory.UnmanagedListTests.TestIndexOf
- uid: Tests.Memory.UnmanagedListTests.TestForeach*
  commentId: Overload:Tests.Memory.UnmanagedListTests.TestForeach
  name: TestForeach
  nameWithType: UnmanagedListTests.TestForeach
  fullName: Tests.Memory.UnmanagedListTests.TestForeach
- uid: Tests.Memory.UnmanagedListTests.GetRandomizedlist*
  commentId: Overload:Tests.Memory.UnmanagedListTests.GetRandomizedlist
  name: GetRandomizedlist
  nameWithType: UnmanagedListTests.GetRandomizedlist
  fullName: Tests.Memory.UnmanagedListTests.GetRandomizedlist
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: piine.Memory.UnmanagedList{System.Int32}
  commentId: T:piine.Memory.UnmanagedList{System.Int32}
  parent: piine.Memory
  definition: piine.Memory.UnmanagedList`1
  name: UnmanagedList<Int32>
  nameWithType: UnmanagedList<Int32>
  fullName: piine.Memory.UnmanagedList<System.Int32>
  nameWithType.vb: UnmanagedList(Of Int32)
  fullName.vb: piine.Memory.UnmanagedList(Of System.Int32)
  name.vb: UnmanagedList(Of Int32)
  spec.csharp:
  - uid: piine.Memory.UnmanagedList`1
    name: UnmanagedList
    nameWithType: UnmanagedList
    fullName: piine.Memory.UnmanagedList
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: piine.Memory.UnmanagedList`1
    name: UnmanagedList
    nameWithType: UnmanagedList
    fullName: piine.Memory.UnmanagedList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Memory.UnmanagedList`1
  commentId: T:piine.Memory.UnmanagedList`1
  parent: piine.Memory
  name: UnmanagedList<T>
  nameWithType: UnmanagedList<T>
  fullName: piine.Memory.UnmanagedList<T>
  nameWithType.vb: UnmanagedList(Of T)
  fullName.vb: piine.Memory.UnmanagedList(Of T)
  name.vb: UnmanagedList(Of T)
  spec.csharp:
  - uid: piine.Memory.UnmanagedList`1
    name: UnmanagedList
    nameWithType: UnmanagedList
    fullName: piine.Memory.UnmanagedList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: piine.Memory.UnmanagedList`1
    name: UnmanagedList
    nameWithType: UnmanagedList
    fullName: piine.Memory.UnmanagedList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Memory
  commentId: N:piine.Memory
  name: piine.Memory
  nameWithType: piine.Memory
  fullName: piine.Memory
