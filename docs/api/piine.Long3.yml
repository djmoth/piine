### YamlMime:ManagedReference
items:
- uid: piine.Long3
  commentId: T:piine.Long3
  id: Long3
  parent: piine
  children:
  - piine.Long3.#ctor(System.Int64)
  - piine.Long3.#ctor(System.Int64,System.Int64,System.Int64)
  - piine.Long3.Absolute(piine.Long3)
  - piine.Long3.Contains(System.Int64)
  - piine.Long3.Cross(piine.Long3,piine.Long3)
  - piine.Long3.Deconstruct(System.Int64@,System.Int64@,System.Int64@)
  - piine.Long3.Distance(piine.Long3,piine.Long3)
  - piine.Long3.Dot(piine.Long3,piine.Long3)
  - piine.Long3.Equals(piine.Long3)
  - piine.Long3.Equals(System.Object)
  - piine.Long3.GetHashCode
  - piine.Long3.GetUnsafe(System.Int32)
  - piine.Long3.Item(System.Int32)
  - piine.Long3.Length
  - piine.Long3.LengthSquared
  - piine.Long3.Normalize(piine.Long3)
  - piine.Long3.One
  - piine.Long3.op_Addition(piine.Long3,piine.Long3)
  - piine.Long3.op_Division(piine.Long3,System.Double)
  - piine.Long3.op_Equality(piine.Long3,piine.Long3)
  - piine.Long3.op_Explicit(piine.Double3)~piine.Long3
  - piine.Long3.op_Explicit(piine.ULong3)~piine.Long3
  - piine.Long3.op_GreaterThan(piine.Long3,piine.Long3)
  - piine.Long3.op_GreaterThanOrEqual(piine.Long3,piine.Long3)
  - piine.Long3.op_Implicit(piine.Byte3)~piine.Long3
  - piine.Long3.op_Implicit(piine.Float3)~piine.Long3
  - piine.Long3.op_Implicit(piine.Int3)~piine.Long3
  - piine.Long3.op_Implicit(piine.Long3)~System.Numerics.Vector3
  - piine.Long3.op_Implicit(piine.Long3)~System.ValueTuple{System.Int64,System.Int64,System.Int64}
  - piine.Long3.op_Implicit(piine.SByte3)~piine.Long3
  - piine.Long3.op_Implicit(piine.Short3)~piine.Long3
  - piine.Long3.op_Implicit(piine.UInt3)~piine.Long3
  - piine.Long3.op_Implicit(piine.UShort3)~piine.Long3
  - piine.Long3.op_Implicit(System.Numerics.Vector3)~piine.Long3
  - piine.Long3.op_Implicit(System.ValueTuple{System.Int64,System.Int64,System.Int64})~piine.Long3
  - piine.Long3.op_Inequality(piine.Long3,piine.Long3)
  - piine.Long3.op_LessThan(piine.Long3,piine.Long3)
  - piine.Long3.op_LessThanOrEqual(piine.Long3,piine.Long3)
  - piine.Long3.op_Multiply(piine.Long3,System.Double)
  - piine.Long3.op_Subtraction(piine.Long3,piine.Long3)
  - piine.Long3.op_UnaryNegation(piine.Long3)
  - piine.Long3.Reverse(piine.Long3)
  - piine.Long3.SetUnsafe(System.Int32,System.Int64)
  - piine.Long3.Size
  - piine.Long3.Sum
  - piine.Long3.ToString
  - piine.Long3.UnitX
  - piine.Long3.UnitY
  - piine.Long3.UnitZ
  - piine.Long3.Volume
  - piine.Long3.x
  - piine.Long3.XY
  - piine.Long3.XZ
  - piine.Long3.y
  - piine.Long3.YZ
  - piine.Long3.z
  - piine.Long3.Zero
  langs:
  - csharp
  - vb
  name: Long3
  nameWithType: Long3
  fullName: piine.Long3
  type: Struct
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Long3
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1550
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: >-
      [CLSCompliant(true)]

      public struct Long3 : IEquatable<Long3>
    content.vb: >-
      <CLSCompliant(True)>

      Public Structure Long3
          Implements IEquatable(Of Long3)
  implements:
  - System.IEquatable{piine.Long3}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.CLSCompliantAttribute
    ctor: System.CLSCompliantAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: piine.Long3.Size
  commentId: F:piine.Long3.Size
  id: Size
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: Long3.Size
  fullName: piine.Long3.Size
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Size
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1554
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public const int Size = 3
    return:
      type: System.Int32
    content.vb: Public Const Size As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: piine.Long3.Zero
  commentId: P:piine.Long3.Zero
  id: Zero
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Long3.Zero
  fullName: piine.Long3.Zero
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Zero
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1562
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 Zero { get; }
    parameters: []
    return:
      type: piine.Long3
    content.vb: Public Shared ReadOnly Property Zero As Long3
  overload: piine.Long3.Zero*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Long3.One
  commentId: P:piine.Long3.One
  id: One
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Long3.One
  fullName: piine.Long3.One
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: One
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1563
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 One { get; }
    parameters: []
    return:
      type: piine.Long3
    content.vb: Public Shared ReadOnly Property One As Long3
  overload: piine.Long3.One*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Long3.UnitX
  commentId: P:piine.Long3.UnitX
  id: UnitX
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Long3.UnitX
  fullName: piine.Long3.UnitX
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitX
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1564
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 UnitX { get; }
    parameters: []
    return:
      type: piine.Long3
    content.vb: Public Shared ReadOnly Property UnitX As Long3
  overload: piine.Long3.UnitX*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Long3.UnitY
  commentId: P:piine.Long3.UnitY
  id: UnitY
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Long3.UnitY
  fullName: piine.Long3.UnitY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitY
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1565
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 UnitY { get; }
    parameters: []
    return:
      type: piine.Long3
    content.vb: Public Shared ReadOnly Property UnitY As Long3
  overload: piine.Long3.UnitY*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Long3.UnitZ
  commentId: P:piine.Long3.UnitZ
  id: UnitZ
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Long3.UnitZ
  fullName: piine.Long3.UnitZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: UnitZ
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1566
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 UnitZ { get; }
    parameters: []
    return:
      type: piine.Long3
    content.vb: Public Shared ReadOnly Property UnitZ As Long3
  overload: piine.Long3.UnitZ*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: piine.Long3.x
  commentId: F:piine.Long3.x
  id: x
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Long3.x
  fullName: piine.Long3.x
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: x
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1573
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public long x
    return:
      type: System.Int64
    content.vb: Public x As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.y
  commentId: F:piine.Long3.y
  id: y
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Long3.y
  fullName: piine.Long3.y
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: y
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1575
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public long y
    return:
      type: System.Int64
    content.vb: Public y As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.z
  commentId: F:piine.Long3.z
  id: z
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: z
  nameWithType: Long3.z
  fullName: piine.Long3.z
  type: Field
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: z
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1577
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public long z
    return:
      type: System.Int64
    content.vb: Public z As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.XY
  commentId: P:piine.Long3.XY
  id: XY
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: XY
  nameWithType: Long3.XY
  fullName: piine.Long3.XY
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XY
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1580
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Long2 XY { get; }
    parameters: []
    return:
      type: piine.Long2
    content.vb: Public ReadOnly Property XY As Long2
  overload: piine.Long3.XY*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Long3.XZ
  commentId: P:piine.Long3.XZ
  id: XZ
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: XZ
  nameWithType: Long3.XZ
  fullName: piine.Long3.XZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: XZ
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1581
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Long2 XZ { get; }
    parameters: []
    return:
      type: piine.Long2
    content.vb: Public ReadOnly Property XZ As Long2
  overload: piine.Long3.XZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Long3.YZ
  commentId: P:piine.Long3.YZ
  id: YZ
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: YZ
  nameWithType: Long3.YZ
  fullName: piine.Long3.YZ
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: YZ
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1582
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Long2 YZ { get; }
    parameters: []
    return:
      type: piine.Long2
    content.vb: Public ReadOnly Property YZ As Long2
  overload: piine.Long3.YZ*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: piine.Long3.Item(System.Int32)
  commentId: P:piine.Long3.Item(System.Int32)
  id: Item(System.Int32)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Long3.Item[Int32]
  fullName: piine.Long3.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: this[]
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1584
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public long this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Public Property Item(index As Integer) As Long
  overload: piine.Long3.Item*
  nameWithType.vb: Long3.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: piine.Long3.Item(System.Int32)
  name.vb: Item(Int32)
- uid: piine.Long3.#ctor(System.Int64,System.Int64,System.Int64)
  commentId: M:piine.Long3.#ctor(System.Int64,System.Int64,System.Int64)
  id: '#ctor(System.Int64,System.Int64,System.Int64)'
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Long3(Int64, Int64, Int64)
  nameWithType: Long3.Long3(Int64, Int64, Int64)
  fullName: piine.Long3.Long3(System.Int64, System.Int64, System.Int64)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1602
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Long3(long x, long y, long z)
    parameters:
    - id: x
      type: System.Int64
    - id: y
      type: System.Int64
    - id: z
      type: System.Int64
    content.vb: Public Sub New(x As Long, y As Long, z As Long)
  overload: piine.Long3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.#ctor(System.Int64)
  commentId: M:piine.Long3.#ctor(System.Int64)
  id: '#ctor(System.Int64)'
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Long3(Int64)
  nameWithType: Long3.Long3(Int64)
  fullName: piine.Long3.Long3(System.Int64)
  type: Constructor
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1609
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public Long3(long all)
    parameters:
    - id: all
      type: System.Int64
    content.vb: Public Sub New(all As Long)
  overload: piine.Long3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.GetUnsafe(System.Int32)
  commentId: M:piine.Long3.GetUnsafe(System.Int32)
  id: GetUnsafe(System.Int32)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: GetUnsafe(Int32)
  nameWithType: Long3.GetUnsafe(Int32)
  fullName: piine.Long3.GetUnsafe(System.Int32)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: GetUnsafe
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1616
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public long GetUnsafe(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Public Function GetUnsafe(index As Integer) As Long
  overload: piine.Long3.GetUnsafe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.SetUnsafe(System.Int32,System.Int64)
  commentId: M:piine.Long3.SetUnsafe(System.Int32,System.Int64)
  id: SetUnsafe(System.Int32,System.Int64)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: SetUnsafe(Int32, Int64)
  nameWithType: Long3.SetUnsafe(Int32, Int64)
  fullName: piine.Long3.SetUnsafe(System.Int32, System.Int64)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: SetUnsafe
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1618
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public void SetUnsafe(int index, long value)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Int64
    content.vb: Public Sub SetUnsafe(index As Integer, value As Long)
  overload: piine.Long3.SetUnsafe*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.Normalize(piine.Long3)
  commentId: M:piine.Long3.Normalize(piine.Long3)
  id: Normalize(piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Normalize(Long3)
  nameWithType: Long3.Normalize(Long3)
  fullName: piine.Long3.Normalize(piine.Long3)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Normalize
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1620
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 Normalize(Long3 v)
    parameters:
    - id: v
      type: piine.Long3
    return:
      type: piine.Long3
    content.vb: Public Shared Function Normalize(v As Long3) As Long3
  overload: piine.Long3.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.Absolute(piine.Long3)
  commentId: M:piine.Long3.Absolute(piine.Long3)
  id: Absolute(piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Absolute(Long3)
  nameWithType: Long3.Absolute(Long3)
  fullName: piine.Long3.Absolute(piine.Long3)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Absolute
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1632
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 Absolute(Long3 v)
    parameters:
    - id: v
      type: piine.Long3
    return:
      type: piine.Long3
    content.vb: Public Shared Function Absolute(v As Long3) As Long3
  overload: piine.Long3.Absolute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.Distance(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.Distance(piine.Long3,piine.Long3)
  id: Distance(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Distance(Long3, Long3)
  nameWithType: Long3.Distance(Long3, Long3)
  fullName: piine.Long3.Distance(piine.Long3, piine.Long3)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Distance
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1634
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static double Distance(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: System.Double
    content.vb: Public Shared Function Distance(a As Long3, b As Long3) As Double
  overload: piine.Long3.Distance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.Cross(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.Cross(piine.Long3,piine.Long3)
  id: Cross(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Cross(Long3, Long3)
  nameWithType: Long3.Cross(Long3, Long3)
  fullName: piine.Long3.Cross(piine.Long3, piine.Long3)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Cross
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1636
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 Cross(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: piine.Long3
    content.vb: Public Shared Function Cross(a As Long3, b As Long3) As Long3
  overload: piine.Long3.Cross*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.Dot(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.Dot(piine.Long3,piine.Long3)
  id: Dot(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Dot(Long3, Long3)
  nameWithType: Long3.Dot(Long3, Long3)
  fullName: piine.Long3.Dot(piine.Long3, piine.Long3)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Dot
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1645
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static double Dot(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: System.Double
    content.vb: Public Shared Function Dot(a As Long3, b As Long3) As Double
  overload: piine.Long3.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.Reverse(piine.Long3)
  commentId: M:piine.Long3.Reverse(piine.Long3)
  id: Reverse(piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Reverse(Long3)
  nameWithType: Long3.Reverse(Long3)
  fullName: piine.Long3.Reverse(piine.Long3)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Reverse
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1647
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 Reverse(Long3 v)
    parameters:
    - id: v
      type: piine.Long3
    return:
      type: piine.Long3
    content.vb: Public Shared Function Reverse(v As Long3) As Long3
  overload: piine.Long3.Reverse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.Sum
  commentId: M:piine.Long3.Sum
  id: Sum
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Sum()
  nameWithType: Long3.Sum()
  fullName: piine.Long3.Sum()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Sum
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1649
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public long Sum()
    return:
      type: System.Int64
    content.vb: Public Function Sum As Long
  overload: piine.Long3.Sum*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.Volume
  commentId: M:piine.Long3.Volume
  id: Volume
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Volume()
  nameWithType: Long3.Volume()
  fullName: piine.Long3.Volume()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Volume
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1651
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public long Volume()
    return:
      type: System.Int64
    content.vb: Public Function Volume As Long
  overload: piine.Long3.Volume*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.Length
  commentId: M:piine.Long3.Length
  id: Length
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Length()
  nameWithType: Long3.Length()
  fullName: piine.Long3.Length()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Length
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1653
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public double Length()
    return:
      type: System.Double
    content.vb: Public Function Length As Double
  overload: piine.Long3.Length*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.LengthSquared
  commentId: M:piine.Long3.LengthSquared
  id: LengthSquared
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: LengthSquared()
  nameWithType: Long3.LengthSquared()
  fullName: piine.Long3.LengthSquared()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: LengthSquared
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1655
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public double LengthSquared()
    return:
      type: System.Double
    content.vb: Public Function LengthSquared As Double
  overload: piine.Long3.LengthSquared*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.Contains(System.Int64)
  commentId: M:piine.Long3.Contains(System.Int64)
  id: Contains(System.Int64)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Contains(Int64)
  nameWithType: Long3.Contains(Int64)
  fullName: piine.Long3.Contains(System.Int64)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Contains
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1657
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public bool Contains(long value)
    parameters:
    - id: value
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Public Function Contains(value As Long) As Boolean
  overload: piine.Long3.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.op_Equality(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.op_Equality(piine.Long3,piine.Long3)
  id: op_Equality(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Equality(Long3, Long3)
  nameWithType: Long3.Equality(Long3, Long3)
  fullName: piine.Long3.Equality(piine.Long3, piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Equality
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1659
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator ==(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(a As Long3, b As Long3) As Boolean
  overload: piine.Long3.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_Inequality(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.op_Inequality(piine.Long3,piine.Long3)
  id: op_Inequality(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Inequality(Long3, Long3)
  nameWithType: Long3.Inequality(Long3, Long3)
  fullName: piine.Long3.Inequality(piine.Long3, piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Inequality
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1661
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator !=(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(a As Long3, b As Long3) As Boolean
  overload: piine.Long3.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_Addition(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.op_Addition(piine.Long3,piine.Long3)
  id: op_Addition(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Addition(Long3, Long3)
  nameWithType: Long3.Addition(Long3, Long3)
  fullName: piine.Long3.Addition(piine.Long3, piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Addition
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1663
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 operator +(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: piine.Long3
    content.vb: Public Shared Operator +(a As Long3, b As Long3) As Long3
  overload: piine.Long3.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_Subtraction(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.op_Subtraction(piine.Long3,piine.Long3)
  id: op_Subtraction(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Subtraction(Long3, Long3)
  nameWithType: Long3.Subtraction(Long3, Long3)
  fullName: piine.Long3.Subtraction(piine.Long3, piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Subtraction
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1665
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 operator -(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: piine.Long3
    content.vb: Public Shared Operator -(a As Long3, b As Long3) As Long3
  overload: piine.Long3.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_UnaryNegation(piine.Long3)
  commentId: M:piine.Long3.op_UnaryNegation(piine.Long3)
  id: op_UnaryNegation(piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: UnaryNegation(Long3)
  nameWithType: Long3.UnaryNegation(Long3)
  fullName: piine.Long3.UnaryNegation(piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_UnaryNegation
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1667
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 operator -(Long3 v)
    parameters:
    - id: v
      type: piine.Long3
    return:
      type: piine.Long3
    content.vb: Public Shared Operator -(v As Long3) As Long3
  overload: piine.Long3.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_Multiply(piine.Long3,System.Double)
  commentId: M:piine.Long3.op_Multiply(piine.Long3,System.Double)
  id: op_Multiply(piine.Long3,System.Double)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Multiply(Long3, Double)
  nameWithType: Long3.Multiply(Long3, Double)
  fullName: piine.Long3.Multiply(piine.Long3, System.Double)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Multiply
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1669
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 operator *(Long3 a, double b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: System.Double
    return:
      type: piine.Long3
    content.vb: Public Shared Operator *(a As Long3, b As Double) As Long3
  overload: piine.Long3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_Division(piine.Long3,System.Double)
  commentId: M:piine.Long3.op_Division(piine.Long3,System.Double)
  id: op_Division(piine.Long3,System.Double)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Division(Long3, Double)
  nameWithType: Long3.Division(Long3, Double)
  fullName: piine.Long3.Division(piine.Long3, System.Double)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Division
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1671
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static Long3 operator /(Long3 a, double b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: System.Double
    return:
      type: piine.Long3
    content.vb: Public Shared Operator /(a As Long3, b As Double) As Long3
  overload: piine.Long3.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_GreaterThan(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.op_GreaterThan(piine.Long3,piine.Long3)
  id: op_GreaterThan(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: GreaterThan(Long3, Long3)
  nameWithType: Long3.GreaterThan(Long3, Long3)
  fullName: piine.Long3.GreaterThan(piine.Long3, piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_GreaterThan
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1673
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator>(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator>(a As Long3, b As Long3) As Boolean
  overload: piine.Long3.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_LessThan(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.op_LessThan(piine.Long3,piine.Long3)
  id: op_LessThan(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: LessThan(Long3, Long3)
  nameWithType: Long3.LessThan(Long3, Long3)
  fullName: piine.Long3.LessThan(piine.Long3, piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_LessThan
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1675
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator <(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(a As Long3, b As Long3) As Boolean
  overload: piine.Long3.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_GreaterThanOrEqual(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.op_GreaterThanOrEqual(piine.Long3,piine.Long3)
  id: op_GreaterThanOrEqual(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Long3, Long3)
  nameWithType: Long3.GreaterThanOrEqual(Long3, Long3)
  fullName: piine.Long3.GreaterThanOrEqual(piine.Long3, piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_GreaterThanOrEqual
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1677
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator >=(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(a As Long3, b As Long3) As Boolean
  overload: piine.Long3.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.op_LessThanOrEqual(piine.Long3,piine.Long3)
  commentId: M:piine.Long3.op_LessThanOrEqual(piine.Long3,piine.Long3)
  id: op_LessThanOrEqual(piine.Long3,piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Long3, Long3)
  nameWithType: Long3.LessThanOrEqual(Long3, Long3)
  fullName: piine.Long3.LessThanOrEqual(piine.Long3, piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_LessThanOrEqual
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1679
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static bool operator <=(Long3 a, Long3 b)
    parameters:
    - id: a
      type: piine.Long3
    - id: b
      type: piine.Long3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(a As Long3, b As Long3) As Boolean
  overload: piine.Long3.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: piine.Long3.Deconstruct(System.Int64@,System.Int64@,System.Int64@)
  commentId: M:piine.Long3.Deconstruct(System.Int64@,System.Int64@,System.Int64@)
  id: Deconstruct(System.Int64@,System.Int64@,System.Int64@)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Deconstruct(out Int64, out Int64, out Int64)
  nameWithType: Long3.Deconstruct(out Int64, out Int64, out Int64)
  fullName: piine.Long3.Deconstruct(out System.Int64, out System.Int64, out System.Int64)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Deconstruct
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1681
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public void Deconstruct(out long x, out long y, out long z)
    parameters:
    - id: x
      type: System.Int64
    - id: y
      type: System.Int64
    - id: z
      type: System.Int64
    content.vb: Public Sub Deconstruct(ByRef x As Long, ByRef y As Long, ByRef z As Long)
  overload: piine.Long3.Deconstruct*
  nameWithType.vb: Long3.Deconstruct(ByRef Int64, ByRef Int64, ByRef Int64)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Long3.Deconstruct(ByRef System.Int64, ByRef System.Int64, ByRef System.Int64)
  name.vb: Deconstruct(ByRef Int64, ByRef Int64, ByRef Int64)
- uid: piine.Long3.ToString
  commentId: M:piine.Long3.ToString
  id: ToString
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Long3.ToString()
  fullName: piine.Long3.ToString()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: ToString
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1688
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: piine.Long3.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.Long3.Equals(piine.Long3)
  commentId: M:piine.Long3.Equals(piine.Long3)
  id: Equals(piine.Long3)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Equals(Long3)
  nameWithType: Long3.Equals(Long3)
  fullName: piine.Long3.Equals(piine.Long3)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Equals
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1690
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public bool Equals(Long3 other)
    parameters:
    - id: other
      type: piine.Long3
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Long3) As Boolean
  overload: piine.Long3.Equals*
  implements:
  - System.IEquatable{piine.Long3}.Equals(piine.Long3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: piine.Long3.Equals(System.Object)
  commentId: M:piine.Long3.Equals(System.Object)
  id: Equals(System.Object)
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Long3.Equals(Object)
  fullName: piine.Long3.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Equals
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1692
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: piine.Long3.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.Long3.GetHashCode
  commentId: M:piine.Long3.GetHashCode
  id: GetHashCode
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Long3.GetHashCode()
  fullName: piine.Long3.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: GetHashCode
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1702
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: piine.Long3.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: piine.Long3.op_Implicit(piine.Long3)~System.Numerics.Vector3
  commentId: M:piine.Long3.op_Implicit(piine.Long3)~System.Numerics.Vector3
  id: op_Implicit(piine.Long3)~System.Numerics.Vector3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(Long3 to Vector3)
  nameWithType: Long3.Implicit(Long3 to Vector3)
  fullName: piine.Long3.Implicit(piine.Long3 to System.Numerics.Vector3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1706
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Vector3(Long3 v)
    parameters:
    - id: v
      type: piine.Long3
    return:
      type: System.Numerics.Vector3
    content.vb: Public Shared Widening Operator CType(v As Long3) As Vector3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(Long3 to Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(piine.Long3 to System.Numerics.Vector3)
  name.vb: Widening(Long3 to Vector3)
- uid: piine.Long3.op_Implicit(System.Numerics.Vector3)~piine.Long3
  commentId: M:piine.Long3.op_Implicit(System.Numerics.Vector3)~piine.Long3
  id: op_Implicit(System.Numerics.Vector3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(Vector3 to Long3)
  nameWithType: Long3.Implicit(Vector3 to Long3)
  fullName: piine.Long3.Implicit(System.Numerics.Vector3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1707
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Long3(Vector3 v)
    parameters:
    - id: v
      type: System.Numerics.Vector3
    return:
      type: piine.Long3
    content.vb: Public Shared Widening Operator CType(v As Vector3) As Long3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(Vector3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(System.Numerics.Vector3 to piine.Long3)
  name.vb: Widening(Vector3 to Long3)
- uid: piine.Long3.op_Implicit(System.ValueTuple{System.Int64,System.Int64,System.Int64})~piine.Long3
  commentId: M:piine.Long3.op_Implicit(System.ValueTuple{System.Int64,System.Int64,System.Int64})~piine.Long3
  id: op_Implicit(System.ValueTuple{System.Int64,System.Int64,System.Int64})~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit((Int64 x, Int64 y, Int64 z) to Long3)
  nameWithType: Long3.Implicit((Int64 x, Int64 y, Int64 z) to Long3)
  fullName: piine.Long3.Implicit(System.ValueTuple<System.Int64, System.Int64, System.Int64> to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1710
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Long3((long x, long y, long z)v)
    parameters:
    - id: v
      type: System.ValueTuple{System.Int64,System.Int64,System.Int64}
    return:
      type: piine.Long3
    content.vb: Public Shared Widening Operator CType(v As(x As Long, y As Long, z As Long)) As Long3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening((x As Int64, y As Int64, z As Int64) to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(System.ValueTuple(Of System.Int64, System.Int64, System.Int64) to piine.Long3)
  name.vb: Widening((x As Int64, y As Int64, z As Int64) to Long3)
- uid: piine.Long3.op_Implicit(piine.Long3)~System.ValueTuple{System.Int64,System.Int64,System.Int64}
  commentId: M:piine.Long3.op_Implicit(piine.Long3)~System.ValueTuple{System.Int64,System.Int64,System.Int64}
  id: op_Implicit(piine.Long3)~System.ValueTuple{System.Int64,System.Int64,System.Int64}
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(Long3 to (Int64, Int64, Int64))
  nameWithType: Long3.Implicit(Long3 to (Int64, Int64, Int64))
  fullName: piine.Long3.Implicit(piine.Long3 to System.ValueTuple<System.Int64, System.Int64, System.Int64>)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1712
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator (long, long, long)(Long3 v)
    parameters:
    - id: v
      type: piine.Long3
    return:
      type: System.ValueTuple{System.Int64,System.Int64,System.Int64}
    content.vb: Public Shared Widening Operator CType(v As Long3) As(Long, Long, Long)
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(Long3 to (Int64, Int64, Int64))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(piine.Long3 to System.ValueTuple(Of System.Int64, System.Int64, System.Int64))
  name.vb: Widening(Long3 to (Int64, Int64, Int64))
- uid: piine.Long3.op_Implicit(piine.Float3)~piine.Long3
  commentId: M:piine.Long3.op_Implicit(piine.Float3)~piine.Long3
  id: op_Implicit(piine.Float3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(Float3 to Long3)
  nameWithType: Long3.Implicit(Float3 to Long3)
  fullName: piine.Long3.Implicit(piine.Float3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1716
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Long3(Float3 v)
    parameters:
    - id: v
      type: piine.Float3
    return:
      type: piine.Long3
    content.vb: Public Shared Widening Operator CType(v As Float3) As Long3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(Float3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(piine.Float3 to piine.Long3)
  name.vb: Widening(Float3 to Long3)
- uid: piine.Long3.op_Explicit(piine.Double3)~piine.Long3
  commentId: M:piine.Long3.op_Explicit(piine.Double3)~piine.Long3
  id: op_Explicit(piine.Double3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Explicit(Double3 to Long3)
  nameWithType: Long3.Explicit(Double3 to Long3)
  fullName: piine.Long3.Explicit(piine.Double3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1719
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Long3(Double3 v)
    parameters:
    - id: v
      type: piine.Double3
    return:
      type: piine.Long3
    content.vb: Public Shared Narrowing Operator CType(v As Double3) As Long3
  overload: piine.Long3.op_Explicit*
  nameWithType.vb: Long3.Narrowing(Double3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Narrowing(piine.Double3 to piine.Long3)
  name.vb: Narrowing(Double3 to Long3)
- uid: piine.Long3.op_Implicit(piine.Int3)~piine.Long3
  commentId: M:piine.Long3.op_Implicit(piine.Int3)~piine.Long3
  id: op_Implicit(piine.Int3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(Int3 to Long3)
  nameWithType: Long3.Implicit(Int3 to Long3)
  fullName: piine.Long3.Implicit(piine.Int3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1722
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Long3(Int3 v)
    parameters:
    - id: v
      type: piine.Int3
    return:
      type: piine.Long3
    content.vb: Public Shared Widening Operator CType(v As Int3) As Long3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(Int3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(piine.Int3 to piine.Long3)
  name.vb: Widening(Int3 to Long3)
- uid: piine.Long3.op_Implicit(piine.UInt3)~piine.Long3
  commentId: M:piine.Long3.op_Implicit(piine.UInt3)~piine.Long3
  id: op_Implicit(piine.UInt3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(UInt3 to Long3)
  nameWithType: Long3.Implicit(UInt3 to Long3)
  fullName: piine.Long3.Implicit(piine.UInt3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1725
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Long3(UInt3 v)
    parameters:
    - id: v
      type: piine.UInt3
    return:
      type: piine.Long3
    content.vb: Public Shared Widening Operator CType(v As UInt3) As Long3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(UInt3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(piine.UInt3 to piine.Long3)
  name.vb: Widening(UInt3 to Long3)
- uid: piine.Long3.op_Implicit(piine.Byte3)~piine.Long3
  commentId: M:piine.Long3.op_Implicit(piine.Byte3)~piine.Long3
  id: op_Implicit(piine.Byte3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(Byte3 to Long3)
  nameWithType: Long3.Implicit(Byte3 to Long3)
  fullName: piine.Long3.Implicit(piine.Byte3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1728
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Long3(Byte3 v)
    parameters:
    - id: v
      type: piine.Byte3
    return:
      type: piine.Long3
    content.vb: Public Shared Widening Operator CType(v As Byte3) As Long3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(Byte3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(piine.Byte3 to piine.Long3)
  name.vb: Widening(Byte3 to Long3)
- uid: piine.Long3.op_Implicit(piine.SByte3)~piine.Long3
  commentId: M:piine.Long3.op_Implicit(piine.SByte3)~piine.Long3
  id: op_Implicit(piine.SByte3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(SByte3 to Long3)
  nameWithType: Long3.Implicit(SByte3 to Long3)
  fullName: piine.Long3.Implicit(piine.SByte3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1731
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Long3(SByte3 v)
    parameters:
    - id: v
      type: piine.SByte3
    return:
      type: piine.Long3
    content.vb: Public Shared Widening Operator CType(v As SByte3) As Long3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(SByte3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(piine.SByte3 to piine.Long3)
  name.vb: Widening(SByte3 to Long3)
- uid: piine.Long3.op_Implicit(piine.Short3)~piine.Long3
  commentId: M:piine.Long3.op_Implicit(piine.Short3)~piine.Long3
  id: op_Implicit(piine.Short3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(Short3 to Long3)
  nameWithType: Long3.Implicit(Short3 to Long3)
  fullName: piine.Long3.Implicit(piine.Short3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1734
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Long3(Short3 v)
    parameters:
    - id: v
      type: piine.Short3
    return:
      type: piine.Long3
    content.vb: Public Shared Widening Operator CType(v As Short3) As Long3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(Short3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(piine.Short3 to piine.Long3)
  name.vb: Widening(Short3 to Long3)
- uid: piine.Long3.op_Implicit(piine.UShort3)~piine.Long3
  commentId: M:piine.Long3.op_Implicit(piine.UShort3)~piine.Long3
  id: op_Implicit(piine.UShort3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Implicit(UShort3 to Long3)
  nameWithType: Long3.Implicit(UShort3 to Long3)
  fullName: piine.Long3.Implicit(piine.UShort3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Implicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1737
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static implicit operator Long3(UShort3 v)
    parameters:
    - id: v
      type: piine.UShort3
    return:
      type: piine.Long3
    content.vb: Public Shared Widening Operator CType(v As UShort3) As Long3
  overload: piine.Long3.op_Implicit*
  nameWithType.vb: Long3.Widening(UShort3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Widening(piine.UShort3 to piine.Long3)
  name.vb: Widening(UShort3 to Long3)
- uid: piine.Long3.op_Explicit(piine.ULong3)~piine.Long3
  commentId: M:piine.Long3.op_Explicit(piine.ULong3)~piine.Long3
  id: op_Explicit(piine.ULong3)~piine.Long3
  parent: piine.Long3
  langs:
  - csharp
  - vb
  name: Explicit(ULong3 to Long3)
  nameWithType: Long3.Explicit(ULong3 to Long3)
  fullName: piine.Long3.Explicit(piine.ULong3 to piine.Long3)
  type: Operator
  source:
    remote:
      path: src/Numerics/Vectors/Type3.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: op_Explicit
    path: src/Numerics/Vectors/Type3.cs
    startLine: 1740
  assemblies:
  - piine
  namespace: piine
  syntax:
    content: public static explicit operator Long3(ULong3 v)
    parameters:
    - id: v
      type: piine.ULong3
    return:
      type: piine.Long3
    content.vb: Public Shared Narrowing Operator CType(v As ULong3) As Long3
  overload: piine.Long3.op_Explicit*
  nameWithType.vb: Long3.Narrowing(ULong3 to Long3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: piine.Long3.Narrowing(piine.ULong3 to piine.Long3)
  name.vb: Narrowing(ULong3 to Long3)
references:
- uid: piine
  commentId: N:piine
  name: piine
  nameWithType: piine
  fullName: piine
- uid: System.IEquatable{piine.Long3}
  commentId: T:System.IEquatable{piine.Long3}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Long3>
  nameWithType: IEquatable<Long3>
  fullName: System.IEquatable<piine.Long3>
  nameWithType.vb: IEquatable(Of Long3)
  fullName.vb: System.IEquatable(Of piine.Long3)
  name.vb: IEquatable(Of Long3)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: piine.Long3
    name: Long3
    nameWithType: Long3
    fullName: piine.Long3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: piine.Long3
    name: Long3
    nameWithType: Long3
    fullName: piine.Long3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: piine.Long3.Zero*
  commentId: Overload:piine.Long3.Zero
  name: Zero
  nameWithType: Long3.Zero
  fullName: piine.Long3.Zero
- uid: piine.Long3
  commentId: T:piine.Long3
  parent: piine
  name: Long3
  nameWithType: Long3
  fullName: piine.Long3
- uid: piine.Long3.One*
  commentId: Overload:piine.Long3.One
  name: One
  nameWithType: Long3.One
  fullName: piine.Long3.One
- uid: piine.Long3.UnitX*
  commentId: Overload:piine.Long3.UnitX
  name: UnitX
  nameWithType: Long3.UnitX
  fullName: piine.Long3.UnitX
- uid: piine.Long3.UnitY*
  commentId: Overload:piine.Long3.UnitY
  name: UnitY
  nameWithType: Long3.UnitY
  fullName: piine.Long3.UnitY
- uid: piine.Long3.UnitZ*
  commentId: Overload:piine.Long3.UnitZ
  name: UnitZ
  nameWithType: Long3.UnitZ
  fullName: piine.Long3.UnitZ
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: piine.Long3.XY*
  commentId: Overload:piine.Long3.XY
  name: XY
  nameWithType: Long3.XY
  fullName: piine.Long3.XY
- uid: piine.Long2
  commentId: T:piine.Long2
  parent: piine
  name: Long2
  nameWithType: Long2
  fullName: piine.Long2
- uid: piine.Long3.XZ*
  commentId: Overload:piine.Long3.XZ
  name: XZ
  nameWithType: Long3.XZ
  fullName: piine.Long3.XZ
- uid: piine.Long3.YZ*
  commentId: Overload:piine.Long3.YZ
  name: YZ
  nameWithType: Long3.YZ
  fullName: piine.Long3.YZ
- uid: piine.Long3.Item*
  commentId: Overload:piine.Long3.Item
  name: Item
  nameWithType: Long3.Item
  fullName: piine.Long3.Item
- uid: piine.Long3.#ctor*
  commentId: Overload:piine.Long3.#ctor
  name: Long3
  nameWithType: Long3.Long3
  fullName: piine.Long3.Long3
- uid: piine.Long3.GetUnsafe*
  commentId: Overload:piine.Long3.GetUnsafe
  name: GetUnsafe
  nameWithType: Long3.GetUnsafe
  fullName: piine.Long3.GetUnsafe
- uid: piine.Long3.SetUnsafe*
  commentId: Overload:piine.Long3.SetUnsafe
  name: SetUnsafe
  nameWithType: Long3.SetUnsafe
  fullName: piine.Long3.SetUnsafe
- uid: piine.Long3.Normalize*
  commentId: Overload:piine.Long3.Normalize
  name: Normalize
  nameWithType: Long3.Normalize
  fullName: piine.Long3.Normalize
- uid: piine.Long3.Absolute*
  commentId: Overload:piine.Long3.Absolute
  name: Absolute
  nameWithType: Long3.Absolute
  fullName: piine.Long3.Absolute
- uid: piine.Long3.Distance*
  commentId: Overload:piine.Long3.Distance
  name: Distance
  nameWithType: Long3.Distance
  fullName: piine.Long3.Distance
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: piine.Long3.Cross*
  commentId: Overload:piine.Long3.Cross
  name: Cross
  nameWithType: Long3.Cross
  fullName: piine.Long3.Cross
- uid: piine.Long3.Dot*
  commentId: Overload:piine.Long3.Dot
  name: Dot
  nameWithType: Long3.Dot
  fullName: piine.Long3.Dot
- uid: piine.Long3.Reverse*
  commentId: Overload:piine.Long3.Reverse
  name: Reverse
  nameWithType: Long3.Reverse
  fullName: piine.Long3.Reverse
- uid: piine.Long3.Sum*
  commentId: Overload:piine.Long3.Sum
  name: Sum
  nameWithType: Long3.Sum
  fullName: piine.Long3.Sum
- uid: piine.Long3.Volume*
  commentId: Overload:piine.Long3.Volume
  name: Volume
  nameWithType: Long3.Volume
  fullName: piine.Long3.Volume
- uid: piine.Long3.Length*
  commentId: Overload:piine.Long3.Length
  name: Length
  nameWithType: Long3.Length
  fullName: piine.Long3.Length
- uid: piine.Long3.LengthSquared*
  commentId: Overload:piine.Long3.LengthSquared
  name: LengthSquared
  nameWithType: Long3.LengthSquared
  fullName: piine.Long3.LengthSquared
- uid: piine.Long3.Contains*
  commentId: Overload:piine.Long3.Contains
  name: Contains
  nameWithType: Long3.Contains
  fullName: piine.Long3.Contains
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: piine.Long3.op_Equality*
  commentId: Overload:piine.Long3.op_Equality
  name: Equality
  nameWithType: Long3.Equality
  fullName: piine.Long3.Equality
- uid: piine.Long3.op_Inequality*
  commentId: Overload:piine.Long3.op_Inequality
  name: Inequality
  nameWithType: Long3.Inequality
  fullName: piine.Long3.Inequality
- uid: piine.Long3.op_Addition*
  commentId: Overload:piine.Long3.op_Addition
  name: Addition
  nameWithType: Long3.Addition
  fullName: piine.Long3.Addition
- uid: piine.Long3.op_Subtraction*
  commentId: Overload:piine.Long3.op_Subtraction
  name: Subtraction
  nameWithType: Long3.Subtraction
  fullName: piine.Long3.Subtraction
- uid: piine.Long3.op_UnaryNegation*
  commentId: Overload:piine.Long3.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Long3.UnaryNegation
  fullName: piine.Long3.UnaryNegation
- uid: piine.Long3.op_Multiply*
  commentId: Overload:piine.Long3.op_Multiply
  name: Multiply
  nameWithType: Long3.Multiply
  fullName: piine.Long3.Multiply
- uid: piine.Long3.op_Division*
  commentId: Overload:piine.Long3.op_Division
  name: Division
  nameWithType: Long3.Division
  fullName: piine.Long3.Division
- uid: piine.Long3.op_GreaterThan*
  commentId: Overload:piine.Long3.op_GreaterThan
  name: GreaterThan
  nameWithType: Long3.GreaterThan
  fullName: piine.Long3.GreaterThan
- uid: piine.Long3.op_LessThan*
  commentId: Overload:piine.Long3.op_LessThan
  name: LessThan
  nameWithType: Long3.LessThan
  fullName: piine.Long3.LessThan
- uid: piine.Long3.op_GreaterThanOrEqual*
  commentId: Overload:piine.Long3.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: Long3.GreaterThanOrEqual
  fullName: piine.Long3.GreaterThanOrEqual
- uid: piine.Long3.op_LessThanOrEqual*
  commentId: Overload:piine.Long3.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: Long3.LessThanOrEqual
  fullName: piine.Long3.LessThanOrEqual
- uid: piine.Long3.Deconstruct*
  commentId: Overload:piine.Long3.Deconstruct
  name: Deconstruct
  nameWithType: Long3.Deconstruct
  fullName: piine.Long3.Deconstruct
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Long3.ToString*
  commentId: Overload:piine.Long3.ToString
  name: ToString
  nameWithType: Long3.ToString
  fullName: piine.Long3.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: piine.Long3.Equals*
  commentId: Overload:piine.Long3.Equals
  name: Equals
  nameWithType: Long3.Equals
  fullName: piine.Long3.Equals
- uid: System.IEquatable{piine.Long3}.Equals(piine.Long3)
  commentId: M:System.IEquatable{piine.Long3}.Equals(piine.Long3)
  parent: System.IEquatable{piine.Long3}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Long3)
  nameWithType: IEquatable<Long3>.Equals(Long3)
  fullName: System.IEquatable<piine.Long3>.Equals(piine.Long3)
  nameWithType.vb: IEquatable(Of Long3).Equals(Long3)
  fullName.vb: System.IEquatable(Of piine.Long3).Equals(piine.Long3)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Long3>.Equals
    fullName: System.IEquatable<piine.Long3>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Long3
    name: Long3
    nameWithType: Long3
    fullName: piine.Long3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Long3).Equals
    fullName: System.IEquatable(Of piine.Long3).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: piine.Long3
    name: Long3
    nameWithType: Long3
    fullName: piine.Long3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Long3.GetHashCode*
  commentId: Overload:piine.Long3.GetHashCode
  name: GetHashCode
  nameWithType: Long3.GetHashCode
  fullName: piine.Long3.GetHashCode
- uid: piine.Long3.op_Implicit*
  commentId: Overload:piine.Long3.op_Implicit
  name: Implicit
  nameWithType: Long3.Implicit
  fullName: piine.Long3.Implicit
  nameWithType.vb: Long3.Widening
  fullName.vb: piine.Long3.Widening
  name.vb: Widening
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
- uid: System.ValueTuple{System.Int64,System.Int64,System.Int64}
  commentId: T:System.ValueTuple{System.Int64,System.Int64,System.Int64}
  parent: System
  isExternal: true
  name: ValueTuple<Int64, Int64, Int64>
  nameWithType: ValueTuple<Int64, Int64, Int64>
  fullName: System.ValueTuple<System.Int64, System.Int64, System.Int64>
  nameWithType.vb: ValueTuple(Of Int64, Int64, Int64)
  fullName.vb: System.ValueTuple(Of System.Int64, System.Int64, System.Int64)
  name.vb: ValueTuple(Of Int64, Int64, Int64)
  spec.csharp:
  - uid: System.ValueTuple`3
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`3
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Float3
  commentId: T:piine.Float3
  parent: piine
  name: Float3
  nameWithType: Float3
  fullName: piine.Float3
- uid: piine.Long3.op_Explicit*
  commentId: Overload:piine.Long3.op_Explicit
  name: Explicit
  nameWithType: Long3.Explicit
  fullName: piine.Long3.Explicit
  nameWithType.vb: Long3.Narrowing
  fullName.vb: piine.Long3.Narrowing
  name.vb: Narrowing
- uid: piine.Double3
  commentId: T:piine.Double3
  parent: piine
  name: Double3
  nameWithType: Double3
  fullName: piine.Double3
- uid: piine.Int3
  commentId: T:piine.Int3
  parent: piine
  name: Int3
  nameWithType: Int3
  fullName: piine.Int3
- uid: piine.UInt3
  commentId: T:piine.UInt3
  parent: piine
  name: UInt3
  nameWithType: UInt3
  fullName: piine.UInt3
- uid: piine.Byte3
  commentId: T:piine.Byte3
  parent: piine
  name: Byte3
  nameWithType: Byte3
  fullName: piine.Byte3
- uid: piine.SByte3
  commentId: T:piine.SByte3
  parent: piine
  name: SByte3
  nameWithType: SByte3
  fullName: piine.SByte3
- uid: piine.Short3
  commentId: T:piine.Short3
  parent: piine
  name: Short3
  nameWithType: Short3
  fullName: piine.Short3
- uid: piine.UShort3
  commentId: T:piine.UShort3
  parent: piine
  name: UShort3
  nameWithType: UShort3
  fullName: piine.UShort3
- uid: piine.ULong3
  commentId: T:piine.ULong3
  parent: piine
  name: ULong3
  nameWithType: ULong3
  fullName: piine.ULong3
