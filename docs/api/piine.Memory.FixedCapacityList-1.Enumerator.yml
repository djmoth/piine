### YamlMime:ManagedReference
items:
- uid: piine.Memory.FixedCapacityList`1.Enumerator
  commentId: T:piine.Memory.FixedCapacityList`1.Enumerator
  id: FixedCapacityList`1.Enumerator
  parent: piine.Memory
  children:
  - piine.Memory.FixedCapacityList`1.Enumerator.#ctor(piine.Memory.FixedCapacityList{`0})
  - piine.Memory.FixedCapacityList`1.Enumerator.Current
  - piine.Memory.FixedCapacityList`1.Enumerator.MoveNext
  - piine.Memory.FixedCapacityList`1.Enumerator.Reset
  langs:
  - csharp
  - vb
  name: FixedCapacityList<T>.Enumerator
  nameWithType: FixedCapacityList<T>.Enumerator
  fullName: piine.Memory.FixedCapacityList<T>.Enumerator
  type: Struct
  source:
    remote:
      path: src/Memory/FixedCapacityList.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Enumerator
    path: src/Memory/FixedCapacityList.cs
    startLine: 201
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public struct Enumerator
    content.vb: Public Structure Enumerator
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: FixedCapacityList(Of T).Enumerator
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: piine.Memory.FixedCapacityList(Of T).Enumerator
  name.vb: FixedCapacityList(Of T).Enumerator
- uid: piine.Memory.FixedCapacityList`1.Enumerator.Current
  commentId: P:piine.Memory.FixedCapacityList`1.Enumerator.Current
  id: Current
  parent: piine.Memory.FixedCapacityList`1.Enumerator
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: FixedCapacityList<T>.Enumerator.Current
  fullName: piine.Memory.FixedCapacityList<T>.Enumerator.Current
  type: Property
  source:
    remote:
      path: src/Memory/FixedCapacityList.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Current
    path: src/Memory/FixedCapacityList.cs
    startLine: 204
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public T Current { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Current As T
  overload: piine.Memory.FixedCapacityList`1.Enumerator.Current*
  nameWithType.vb: FixedCapacityList(Of T).Enumerator.Current
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: piine.Memory.FixedCapacityList(Of T).Enumerator.Current
- uid: piine.Memory.FixedCapacityList`1.Enumerator.#ctor(piine.Memory.FixedCapacityList{`0})
  commentId: M:piine.Memory.FixedCapacityList`1.Enumerator.#ctor(piine.Memory.FixedCapacityList{`0})
  id: '#ctor(piine.Memory.FixedCapacityList{`0})'
  parent: piine.Memory.FixedCapacityList`1.Enumerator
  langs:
  - csharp
  - vb
  name: Enumerator(FixedCapacityList<T>)
  nameWithType: FixedCapacityList<T>.Enumerator.Enumerator(FixedCapacityList<T>)
  fullName: piine.Memory.FixedCapacityList<T>.Enumerator.Enumerator(piine.Memory.FixedCapacityList<T>)
  type: Constructor
  source:
    remote:
      path: src/Memory/FixedCapacityList.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: .ctor
    path: src/Memory/FixedCapacityList.cs
    startLine: 208
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public Enumerator(FixedCapacityList<T> list)
    parameters:
    - id: list
      type: piine.Memory.FixedCapacityList`1
    content.vb: Public Sub New(list As FixedCapacityList(Of T))
  overload: piine.Memory.FixedCapacityList`1.Enumerator.#ctor*
  nameWithType.vb: FixedCapacityList(Of T).Enumerator.Enumerator(FixedCapacityList(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Memory.FixedCapacityList(Of T).Enumerator.Enumerator(piine.Memory.FixedCapacityList(Of T))
  name.vb: Enumerator(FixedCapacityList(Of T))
- uid: piine.Memory.FixedCapacityList`1.Enumerator.MoveNext
  commentId: M:piine.Memory.FixedCapacityList`1.Enumerator.MoveNext
  id: MoveNext
  parent: piine.Memory.FixedCapacityList`1.Enumerator
  langs:
  - csharp
  - vb
  name: MoveNext()
  nameWithType: FixedCapacityList<T>.Enumerator.MoveNext()
  fullName: piine.Memory.FixedCapacityList<T>.Enumerator.MoveNext()
  type: Method
  source:
    remote:
      path: src/Memory/FixedCapacityList.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: MoveNext
    path: src/Memory/FixedCapacityList.cs
    startLine: 214
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public bool MoveNext()
    return:
      type: System.Boolean
    content.vb: Public Function MoveNext As Boolean
  overload: piine.Memory.FixedCapacityList`1.Enumerator.MoveNext*
  nameWithType.vb: FixedCapacityList(Of T).Enumerator.MoveNext()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Memory.FixedCapacityList(Of T).Enumerator.MoveNext()
- uid: piine.Memory.FixedCapacityList`1.Enumerator.Reset
  commentId: M:piine.Memory.FixedCapacityList`1.Enumerator.Reset
  id: Reset
  parent: piine.Memory.FixedCapacityList`1.Enumerator
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: FixedCapacityList<T>.Enumerator.Reset()
  fullName: piine.Memory.FixedCapacityList<T>.Enumerator.Reset()
  type: Method
  source:
    remote:
      path: src/Memory/FixedCapacityList.cs
      branch: dev
      repo: https://github.com/djmoth/piine.git
    id: Reset
    path: src/Memory/FixedCapacityList.cs
    startLine: 221
  assemblies:
  - piine
  namespace: piine.Memory
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: piine.Memory.FixedCapacityList`1.Enumerator.Reset*
  nameWithType.vb: FixedCapacityList(Of T).Enumerator.Reset()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: piine.Memory.FixedCapacityList(Of T).Enumerator.Reset()
references:
- uid: piine.Memory
  commentId: N:piine.Memory
  name: piine.Memory
  nameWithType: piine.Memory
  fullName: piine.Memory
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: piine.Memory.FixedCapacityList`1.Enumerator.Current*
  commentId: Overload:piine.Memory.FixedCapacityList`1.Enumerator.Current
  name: Current
  nameWithType: FixedCapacityList<T>.Enumerator.Current
  fullName: piine.Memory.FixedCapacityList<T>.Enumerator.Current
  nameWithType.vb: FixedCapacityList(Of T).Enumerator.Current
  fullName.vb: piine.Memory.FixedCapacityList(Of T).Enumerator.Current
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: piine.Memory.FixedCapacityList`1.Enumerator.#ctor*
  commentId: Overload:piine.Memory.FixedCapacityList`1.Enumerator.#ctor
  name: Enumerator
  nameWithType: FixedCapacityList<T>.Enumerator.Enumerator
  fullName: piine.Memory.FixedCapacityList<T>.Enumerator.Enumerator
  nameWithType.vb: FixedCapacityList(Of T).Enumerator.Enumerator
  fullName.vb: piine.Memory.FixedCapacityList(Of T).Enumerator.Enumerator
- uid: piine.Memory.FixedCapacityList`1
  commentId: T:piine.Memory.FixedCapacityList`1
  parent: piine.Memory
  name: FixedCapacityList<T>
  nameWithType: FixedCapacityList<T>
  fullName: piine.Memory.FixedCapacityList<T>
  nameWithType.vb: FixedCapacityList(Of T)
  fullName.vb: piine.Memory.FixedCapacityList(Of T)
  name.vb: FixedCapacityList(Of T)
  spec.csharp:
  - uid: piine.Memory.FixedCapacityList`1
    name: FixedCapacityList
    nameWithType: FixedCapacityList
    fullName: piine.Memory.FixedCapacityList
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: piine.Memory.FixedCapacityList`1
    name: FixedCapacityList
    nameWithType: FixedCapacityList
    fullName: piine.Memory.FixedCapacityList
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: piine.Memory.FixedCapacityList`1.Enumerator.MoveNext*
  commentId: Overload:piine.Memory.FixedCapacityList`1.Enumerator.MoveNext
  name: MoveNext
  nameWithType: FixedCapacityList<T>.Enumerator.MoveNext
  fullName: piine.Memory.FixedCapacityList<T>.Enumerator.MoveNext
  nameWithType.vb: FixedCapacityList(Of T).Enumerator.MoveNext
  fullName.vb: piine.Memory.FixedCapacityList(Of T).Enumerator.MoveNext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: piine.Memory.FixedCapacityList`1.Enumerator.Reset*
  commentId: Overload:piine.Memory.FixedCapacityList`1.Enumerator.Reset
  name: Reset
  nameWithType: FixedCapacityList<T>.Enumerator.Reset
  fullName: piine.Memory.FixedCapacityList<T>.Enumerator.Reset
  nameWithType.vb: FixedCapacityList(Of T).Enumerator.Reset
  fullName.vb: piine.Memory.FixedCapacityList(Of T).Enumerator.Reset
